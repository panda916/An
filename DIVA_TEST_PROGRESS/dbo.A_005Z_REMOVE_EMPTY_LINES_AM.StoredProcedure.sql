USE [DIVA_TEST_PROGRESS]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ALTER PROCEDURE [dbo].[A_005Z_REMOVE_EMPTY_LINES_AM]
CREATE PROCEDURE [dbo].[A_005Z_REMOVE_EMPTY_LINES_AM]
WITH EXECUTE AS CALLER, RECOMPILE
AS
BEGIN

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)




/*
  Title		    :	A_005Z_REMOVE_EMPTY_LINES_AM
  Description	:	Remove empty values on AM tables for key fields to prevent
                    Cartesian products during joins to cubes, if the cube happens to have
					blank value for that field.
  
  --------------------------------------------------------------
  Update history
  --------------------------------------------------------------
  Date		    | Who |	Description
  03-01-2017	  CW    Creation

 */


DECLARE @SQLCMD NVARCHAR(MAX)

-- Step 1 Delete all lines from AM tables for which the key fields are blank

SET @SQLCMD = '
DELETE AM_B07_01_RT
WHERE 
BSAIK_BUKRS = ''''
OR BSAIK_SHKZG = ''''
OR BSAIK_BSCHL = ''''
OR BSAIK_BLART = ''''
OR T003T_LTEXT = ''''
OR LFA1_KTOKK = ''''
OR T077Y_TXT30 = ''''
OR BKPF_TCODE = ''''
OR TSTCT_TTEXT = ''''
OR ZF_DEBIT_ACCOUNTS = ''''
OR ZF_CREDIT_ACCOUNTS = ''''
OR ZF_DEBIT_ACCOUNT_TEXTS = ''''
OR ZF_CREDIT_ACCOUNT_TEXTS = ''''
OR ZF_BANK_DEBIT_ACCOUNTS = ''''
OR ZF_BANK_CREDIT_ACCOUNTS = ''''
OR ZF_BS_DEBIT_ACCOUNTS = ''''
OR ZF_BS_CREDIT_ACCOUNTS = ''''
OR ZF_PL_DEBIT_ACCOUNTS = ''''
OR ZF_PL_CREDIT_ACCOUNTS = ''''
OR ZF_CU_DEBIT_ACCOUNTS = ''''
OR ZF_CU_CREDIT_ACCOUNTS = ''''
OR ZF_SU_DEBIT_ACCOUNTS = ''''
OR ZF_SU_CREDIT_ACCOUNTS = ''''
OR ZF_LIST_CSKT_KOSTL = ''''
OR ZF_LIST_CSKT_KTEXT = '''''


BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_B07_01_RT does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_B07_03_RT
WHERE BSAID_BUKRS = ''''
OR BSAID_SHKZG = ''''
OR BSAID_BSCHL = ''''
OR BSAID_BLART = ''''
OR T003T_LTEXT = ''''
OR KNA1_KTOKD = ''''
OR T077X_TXT30 = ''''
OR BKPF_TCODE = ''''
OR TSTCT_TTEXT = ''''
OR ZF_DEBIT_ACCOUNTS = ''''
OR ZF_CREDIT_ACCOUNTS = ''''
OR ZF_DEBIT_ACCOUNT_TEXTS = ''''
OR ZF_CREDIT_ACCOUNT_TEXTS = ''''
OR ZF_BANK_DEBIT_ACCOUNTS = ''''
OR ZF_BANK_CREDIT_ACCOUNTS = ''''
OR ZF_BS_DEBIT_ACCOUNTS = ''''
OR ZF_BS_CREDIT_ACCOUNTS = ''''
OR ZF_PL_DEBIT_ACCOUNTS = ''''
OR ZF_PL_CREDIT_ACCOUNTS = ''''
OR ZF_SU_DEBIT_ACCOUNTS = ''''
OR ZF_SU_CREDIT_ACCOUNTS = ''''
OR ZF_CU_DEBIT_ACCOUNTS = ''''
OR ZF_CU_CREDIT_ACCOUNTS = ''''
OR ZF_LIST_CSKT_KOSTL = ''''
OR ZF_LIST_CSKT_KTEXT = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_B07_03_RT does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_COPA_MAPPING
WHERE COMA_SAP_field = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_COPA_MAPPING does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_COUNTRY_MAPPING
WHERE COUNTRY_MAPPING_CODE = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_COUNTRY_MAPPING does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_DSM
WHERE DSM_DIVISION = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_DSM does not exist'
END CATCH


---

SET @SQLCMD = '
DELETE AM_EXCHNG
WHERE EXCHNG_FROM = ''''
OR EXCHNG_TO = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_EXCHNG does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_FSMC
WHERE FSMC_ID = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_FSMC does not exist'
END CATCH


---

SET @SQLCMD = '
DELETE AM_GL_ACCOUNT_CATEGORIES
WHERE ACCAT_GLACCOUNT = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_GL_ACCOUNT_CATEGORIES does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_GL_BANK_ACC
WHERE GL_BANK_ACC_MANDT = ''''
OR GL_BANK_ACC_BUKRS = ''''
OR GL_BANK_ACC_HKONT = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_GL_BANK_ACC does not exist'
	PRINT @SQLCMD
END CATCH

---

SET @SQLCMD = '
DELETE AM_GLOBALS
WHERE GLOBALS_PARAMETER = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_GLOBALS does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_LIST_KEY_WORDS
WHERE ZF_KEY_WORD = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_LIST_KEY_WORDS does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_PROC_CAT
WHERE PROC_CAT_ID = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_PROC_CAT does not exist'
END CATCH


---

SET @SQLCMD = '
DELETE AM_SCOPE
WHERE SCOPE_MANDANT = ''''
OR SCOPE_CMPNY_CODE = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_SCOPE does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_SPEND_CATEGORY
WHERE SPCAT_FORM = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_SPEND_CATEGORY does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_T077X
WHERE T077X_MANDT = ''''
OR T077X_KTOKD = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_T077X does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_T077Y
WHERE T077Y_MANDT = ''''
OR T077Y_KTOKK = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_T077Y does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_TANGO
WHERE TANGO_GL_ACCT = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_TANGO does not exist'
END CATCH

---

SET @SQLCMD = '
DELETE AM_VENDOR_EXCEPTION_LIST
WHERE VEL_COMPANY_CODE = ''''
OR VEL_SUPPLIER_NUM = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table AM_VENDOR_EXCEPTION_LIST does not exist'
END CATCH


/*Template

---

SET @SQLCMD = '
DELETE <table name>
WHERE <fieldname> = '''''

BEGIN TRY
EXEC SP_EXECUTESQL @SQLCMD
END TRY
BEGIN CATCH
	PRINT 'Table <table name> does not exist'
END CATCH

*/




END
GO
