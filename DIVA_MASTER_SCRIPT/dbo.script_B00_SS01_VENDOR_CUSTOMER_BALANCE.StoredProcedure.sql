USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Vinh Le>
-- Create date: <05-08-2019>
-- Description:	<Extract trial balance data from ACDOCA script>
-- =============================================
CREATE    PROCEDURE [dbo].[script_B00_SS01_VENDOR_CUSTOMER_BALANCE] 
AS
--DYNAMIC_SCRIPT_START
BEGIN

	/* Initialize parameters from globals table */
 
		 DECLARE  
						  @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
						 ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
						 ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
						 ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
						 ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
						 ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
						 ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
						 ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
						 ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
						 ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
						 ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
						 ,@LEDGER_TYPE NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_ACDOCA_RLDNR')
						 ,@CLIENT NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_CLIENT')
						 ,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
						 ,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')

 
 
	/*Test mode*/
 
	SET ROWCOUNT @LIMIT_RECORDS
 
	/*Change history comments*/
 
	/*
		   Title                : script_B00_SS01_EXTRACT_TB_INFO
		   Description   : 
    
		   --------------------------------------------------------------
		   Update history
		   --------------------------------------------------------------
		   Date                     |  Who                  |      Description
		   DD-MM-YYYY                        Initials             Initial version
		   01-08-2019				| Vinh Le				|		Createion	
		   22-03-2022				| Thuan					|	  Remove MANDT field in join

	*/
	
	/*
		Step 1: Transpose LFC1 (Vendor transaction figures) table from horizontal to vertical
	*/
		EXEC SP_REMOVE_TABLES 'B00_01_TT_VENDOR_BALANCE_VERTICAL'

		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '00' LFC1_MONAT, 0 LFC1_HSL_S,
			   0 LFC1_HSL_H, 0 LFC1_HSL_U, SUM(LFC1_UMSAV) ZF_HSL_BALANCE_CARRIED_FORWARD
		INTO B00_01_TT_VENDOR_BALANCE_VERTICAL
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '01', SUM(LFC1_UM01S),
			   SUM(LFC1_UM01H*-1), SUM(LFC1_UM01U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '02', SUM(LFC1_UM02S),
			   SUM(LFC1_UM02H*-1), SUM(LFC1_UM02U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '03', SUM(LFC1_UM03S),
			   SUM(LFC1_UM03H*-1), SUM(LFC1_UM03U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '04', SUM(LFC1_UM04S),
			   SUM(LFC1_UM04H*-1), SUM(LFC1_UM04U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '05', SUM(LFC1_UM05S),
			   SUM(LFC1_UM05H*-1), SUM(LFC1_UM05U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '06', SUM(LFC1_UM06S),
			   SUM(LFC1_UM06H*-1), SUM(LFC1_UM06U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '07', SUM(LFC1_UM07S),
			   SUM(LFC1_UM07H*-1), SUM(LFC1_UM07U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '08', SUM(LFC1_UM08S),
			   SUM(LFC1_UM08H*-1), SUM(LFC1_UM08U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '09', SUM(LFC1_UM09S),
			   SUM(LFC1_UM09H*-1), SUM(LFC1_UM09U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '10', SUM(LFC1_UM10S),
			   SUM(LFC1_UM10H*-1), SUM(LFC1_UM10U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '11', SUM(LFC1_UM11S),
			   SUM(LFC1_UM11H*-1), SUM(LFC1_UM11U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '12', SUM(LFC1_UM12S),
			   SUM(LFC1_UM12H*-1), SUM(LFC1_UM12U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '13', SUM(LFC1_UM13S),
			   SUM(LFC1_UM13H*-1), SUM(LFC1_UM13U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '14', SUM(LFC1_UM14S),
			   SUM(LFC1_UM14H*-1), SUM(LFC1_UM14U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '15', SUM(LFC1_UM15S),
			   SUM(LFC1_UM15H*-1), SUM(LFC1_UM15U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
	
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '16', SUM(LFC1_UM16S),
			   SUM(LFC1_UM16H*-1), SUM(LFC1_UM16U), 0
		FROM A_LFC1
		GROUP BY LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM

		UNION ALL
		SELECT LFC1_MANDT,LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM, '99',  -- Will be replace with 'Total' later, put 99 here to avoid convert issue when caluculate cumulative column
			   SUM(LFC1_UM01S + LFC1_UM02S + LFC1_UM03S + LFC1_UM04S + LFC1_UM05S + LFC1_UM06S + LFC1_UM07S + LFC1_UM08S + 
					LFC1_UM09S + LFC1_UM10S + LFC1_UM11S + LFC1_UM12S + LFC1_UM13S + LFC1_UM14S + LFC1_UM15S + LFC1_UM16S),
			   SUM(LFC1_UM01H*-1 + LFC1_UM02H*-1 + LFC1_UM03H*-1 + LFC1_UM04H*-1 + LFC1_UM05H*-1 + LFC1_UM06H*-1 + LFC1_UM07H*-1 + LFC1_UM08H*-1 +
					LFC1_UM09H*-1 + LFC1_UM10H*-1 + LFC1_UM11H*-1 + LFC1_UM12H*-1 + LFC1_UM13H*-1 + LFC1_UM14H*-1 + LFC1_UM15H*-1 + LFC1_UM16H*-1),
			   SUM(LFC1_UM01U + LFC1_UM02U + LFC1_UM03U + LFC1_UM04U + LFC1_UM05U + LFC1_UM06U + LFC1_UM07U + LFC1_UM08U + 
					LFC1_UM09U + LFC1_UM10U + LFC1_UM11U + LFC1_UM12U + LFC1_UM13U + LFC1_UM14U + LFC1_UM15U + LFC1_UM16U),
			   SUM(LFC1_UMSAV + LFC1_UM01S + LFC1_UM01H*-1 + LFC1_UM02S + LFC1_UM02H*-1 + LFC1_UM03S + 
					LFC1_UM03H*-1 + LFC1_UM04S + LFC1_UM04H*-1 + LFC1_UM05S + LFC1_UM05H*-1 + 
					LFC1_UM06S + LFC1_UM06H*-1 + LFC1_UM07S + LFC1_UM07H*-1 + LFC1_UM08S + LFC1_UM08H*-1 + 
					 LFC1_UM09S + LFC1_UM09H*-1 + LFC1_UM10S + LFC1_UM10H*-1 + LFC1_UM11S + 
					LFC1_UM11H*-1 + LFC1_UM12S + LFC1_UM12H*-1 + LFC1_UM13S + LFC1_UM13H*-1 + 
					LFC1_UM14S + LFC1_UM14H*-1 + LFC1_UM15S + LFC1_UM15H*-1 + LFC1_UM16S + LFC1_UM16H*-1)
		FROM A_LFC1
		GROUP BY LFC1_MANDT, LFC1_LIFNR, LFC1_BUKRS, LFC1_GJAHR, LFC1_ERDAT, LFC1_USNAM


	/*
		Step 2: Calculate the cumulative value and Total value at the end of period.
	*/
		UPDATE B00_01_TT_VENDOR_BALANCE_VERTICAL
		SET ZF_HSL_BALANCE_CARRIED_FORWARD = CUMULATIVE_CUBE.ZF_CUMULATIVE_VALUE
		FROM (
				SELECT A.LFC1_MANDT, A.LFC1_LIFNR, A.LFC1_BUKRS, A.LFC1_GJAHR, A.LFC1_ERDAT, A.LFC1_USNAM, A.LFC1_MONAT,
					   (SUM(B.ZF_HSL_BALANCE_CARRIED_FORWARD) + SUM(B.LFC1_HSL_S) + SUM(B.LFC1_HSL_H)) ZF_CUMULATIVE_VALUE
				FROM B00_01_TT_VENDOR_BALANCE_VERTICAL AS A
				INNER JOIN
				B00_01_TT_VENDOR_BALANCE_VERTICAL AS B
				ON A.LFC1_LIFNR = B.LFC1_LIFNR AND
				   A.LFC1_BUKRS = B.LFC1_BUKRS AND
				   A.LFC1_GJAHR = B.LFC1_GJAHR AND
				   A.LFC1_ERDAT = B.LFC1_ERDAT AND
				   A.LFC1_USNAM = B.LFC1_USNAM AND
				   CAST(A.LFC1_MONAT AS INT) >= CAST(B.LFC1_MONAT AS INT)
				WHERE A.LFC1_MONAT NOT IN ('00', '99') AND B.LFC1_MONAT NOT IN ('99')
				GROUP BY A.LFC1_MANDT, A.LFC1_LIFNR, A.LFC1_BUKRS, A.LFC1_GJAHR, A.LFC1_ERDAT, A.LFC1_USNAM, A.LFC1_MONAT
				   
			 )  AS CUMULATIVE_CUBE
			 WHERE B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_LIFNR = CUMULATIVE_CUBE.LFC1_LIFNR AND
				   B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_BUKRS = CUMULATIVE_CUBE.LFC1_BUKRS AND
				   B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_GJAHR = CUMULATIVE_CUBE.LFC1_GJAHR AND
				   B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_MONAT = CUMULATIVE_CUBE.LFC1_MONAT AND
				   B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_ERDAT = CUMULATIVE_CUBE.LFC1_ERDAT AND
				   B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_USNAM = CUMULATIVE_CUBE.LFC1_USNAM

		ALTER TABLE B00_01_TT_VENDOR_BALANCE_VERTICAL ALTER COLUMN LFC1_MONAT NVARCHAR(30)
		UPDATE B00_01_TT_VENDOR_BALANCE_VERTICAL
		SET LFC1_MONAT = '00-Begin period'
		WHERE LFC1_MONAT = '00'

		UPDATE B00_01_TT_VENDOR_BALANCE_VERTICAL
		SET LFC1_MONAT = 'Total'
		WHERE LFC1_MONAT = '99'
		
	/*
		Step 3: Add currency factor for balance amount and get some necessary information to the cube.
	*/
		EXEC SP_REMOVE_TABLES 'B00_02_RT_VENDOR_BALANCE_FINAL'
		SELECT LFC1_MANDT,
			   LFC1_LIFNR,
			   LFA1_NAME1,
			   LFA1_LAND1,
			   T005T_NATIO,
			   LFC1_BUKRS,
			   T001_BUTXT,
			   T001_WAERS,
			   LFC1_GJAHR,
			   LFC1_MONAT,
			   LFC1_ERDAT,
			   LFC1_USNAM,
			   V_USERNAME_NAME_TEXT,
			   CAST(LFC1_HSL_S AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) LFC1_HSL_S,
			   CAST(LFC1_HSL_H AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) LFC1_HSL_H,
			   CAST(LFC1_HSL_U AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) LFC1_HSL_U,
			   CAST(ZF_HSL_BALANCE_CARRIED_FORWARD AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) ZF_HSL_BALANCE_CARRIED_FORWARD
		INTO B00_02_RT_VENDOR_BALANCE_FINAL
		FROM B00_01_TT_VENDOR_BALANCE_VERTICAL

		--Get company information and location currency
		LEFT JOIN A_T001
		ON B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_BUKRS = A_T001.T001_BUKRS

		--Get vendor master information
		LEFT JOIN A_LFA1
		ON B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_LIFNR = A_LFA1.LFA1_LIFNR

		--Get vendor country code des
		LEFT JOIN A_T005T
		ON T005T_SPRAS IN ('E', 'EN') AND
		   T005T_LAND1 = LFA1_LAND1

		--Get currency factor of local currency
		LEFT JOIN B00_TCURX
		ON A_T001.T001_WAERS = B00_TCURX.TCURX_CURRKEY

		--Get username description
		LEFT JOIN A_V_USERNAME
		ON B00_01_TT_VENDOR_BALANCE_VERTICAL.LFC1_USNAM = A_V_USERNAME.V_USERNAME_BNAME

	/*
		Step 4: Make a temporary table contain all vendor master special g/l figures
	*/
		EXEC SP_REMOVE_TABLES 'B00_03_TT_VENDOR_BALANCE_SPECIAL_GL'
		SELECT LFC3_MANDT, LFC3_LIFNR, LFA1_NAME1, LFA1_LAND1, T005T_NATIO, LFC3_BUKRS, T001_BUTXT, T001_WAERS, LFC3_GJAHR, LFC3_SHBKZ, T074T_LTEXT, 
			   CAST(LFC3_SALDV AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) AS LFC3_SALDV,
			   CAST(LFC3_SOLLL AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) AS LFC3_SOLLL,
			   CAST(LFC3_HABNL AS MONEY) *-1* ISNULL(B00_TCURX.TCURX_FACTOR,1) AS LFC3_HABNL
		INTO B00_03_TT_VENDOR_BALANCE_SPECIAL_GL
		FROM A_LFC3

		--Get company information and location currency
		LEFT JOIN A_T001
		ON A_LFC3.LFC3_BUKRS = A_T001.T001_BUKRS

		--Get vendor master information
		LEFT JOIN A_LFA1
		ON A_LFC3.LFC3_LIFNR = A_LFA1.LFA1_LIFNR

		LEFT JOIN A_T005T
		ON T005T_SPRAS IN ('E', 'EN') AND
		   T005T_LAND1 = LFA1_LAND1

		--Get special gl indicator desc
		LEFT JOIN A_T074T
		ON T074T_SPRAS IN ('E','EN') AND
		   T074T_KOART = 'K' AND
		   LFC3_SHBKZ = T074T_SHBKZ

		--Get currency factor of local currency
		LEFT JOIN B00_TCURX
		ON A_T001.T001_WAERS = B00_TCURX.TCURX_CURRKEY

		UNION ALL

		SELECT LFC1_MANDT, LFC1_LIFNR, LFA1_NAME1, LFA1_LAND1, T005T_NATIO, LFC1_BUKRS, T001_BUTXT, T001_WAERS, LFC1_GJAHR, '', 'zAccount balance', '0', LFC1_HSL_S, LFC1_HSL_H
		FROM B00_02_RT_VENDOR_BALANCE_FINAL
		WHERE LFC1_MONAT = 'Total'


	/*
		Step 5: Create final cube for Specaial G/L vendor balance
	*/

		EXEC SP_REMOVE_TABLES 'B00_04_RT_VENDOR_BALANCE_SPECIAL_GL'
		SELECT *
		INTO B00_04_RT_VENDOR_BALANCE_SPECIAL_GL
		FROM B00_03_TT_VENDOR_BALANCE_SPECIAL_GL
		UNION ALL
		SELECT LFC3_MANDT, LFC3_LIFNR, LFA1_NAME1, LFA1_LAND1, T005T_NATIO, LFC3_BUKRS, T001_BUTXT, T001_WAERS, LFC3_GJAHR, '', 'zTotal', SUM(LFC3_SALDV), SUM(LFC3_SOLLL), SUM(LFC3_HABNL)
		FROM B00_03_TT_VENDOR_BALANCE_SPECIAL_GL
		GROUP BY LFC3_MANDT, LFC3_LIFNR, LFA1_NAME1, LFA1_LAND1, T005T_NATIO, LFC3_BUKRS, T001_BUTXT, T001_WAERS, LFC3_GJAHR


	/*
		Step 6: Transpose KNC1 (Customer transaction figures) table from horizontal to vertical
	*/
		EXEC SP_REMOVE_TABLES 'B00_05_TT_CUSTOMER_BALANCE_VERTICAL'
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '00' KNC1_MONAT, 0 KNC1_HSL_S,
			   0 KNC1_HSL_H, 0 KNC1_HSL_U, SUM(KNC1_UMSAV) ZF_HSL_BALANCE_CARRIED_FORWARD
		INTO B00_05_TT_CUSTOMER_BALANCE_VERTICAL
		FROM A_KNC1
		GROUP BY KNC1_MANDT, KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '01', SUM(KNC1_UM01S),
			   SUM(KNC1_UM01H*-1), SUM(KNC1_UM01U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '02', SUM(KNC1_UM02S),
			   SUM(KNC1_UM02H*-1), SUM(KNC1_UM02U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '03', SUM(KNC1_UM03S),
			   SUM(KNC1_UM03H*-1), SUM(KNC1_UM03U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '04', SUM(KNC1_UM04S),
			   SUM(KNC1_UM04H*-1), SUM(KNC1_UM04U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '05', SUM(KNC1_UM05S),
			   SUM(KNC1_UM05H*-1), SUM(KNC1_UM05U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '06', SUM(KNC1_UM06S),
			   SUM(KNC1_UM06H*-1), SUM(KNC1_UM06U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '07', SUM(KNC1_UM07S),
			   SUM(KNC1_UM07H*-1), SUM(KNC1_UM07U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '08', SUM(KNC1_UM08S),
			   SUM(KNC1_UM08H*-1), SUM(KNC1_UM08U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '09', SUM(KNC1_UM09S),
			   SUM(KNC1_UM09H*-1), SUM(KNC1_UM09U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '10', SUM(KNC1_UM10S),
			   SUM(KNC1_UM10H*-1), SUM(KNC1_UM10U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '11', SUM(KNC1_UM11S),
			   SUM(KNC1_UM11H*-1), SUM(KNC1_UM11U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '12', SUM(KNC1_UM12S),
			   SUM(KNC1_UM12H*-1), SUM(KNC1_UM12U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '13', SUM(KNC1_UM13S),
			   SUM(KNC1_UM13H*-1), SUM(KNC1_UM13U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '14', SUM(KNC1_UM14S),
			   SUM(KNC1_UM14H*-1), SUM(KNC1_UM14U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '15', SUM(KNC1_UM15S),
			   SUM(KNC1_UM15H*-1), SUM(KNC1_UM15U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM
		
		UNION ALL
	
		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '16', SUM(KNC1_UM16S),
			   SUM(KNC1_UM16H*-1), SUM(KNC1_UM16U), 0
		FROM A_KNC1
		GROUP BY KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

		UNION ALL

		SELECT KNC1_MANDT,KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM, '99',  -- Will be replace with 'Total' later, put 99 here to avoid convert issue when caluculate cumulative column
			   SUM(KNC1_UM01S + KNC1_UM02S + KNC1_UM03S + KNC1_UM04S + KNC1_UM05S + KNC1_UM06S + KNC1_UM07S + KNC1_UM08S + 
					KNC1_UM09S + KNC1_UM10S + KNC1_UM11S + KNC1_UM12S + KNC1_UM13S + KNC1_UM14S + KNC1_UM15S + KNC1_UM16S),
			   SUM(KNC1_UM01H*-1 + KNC1_UM02H*-1 + KNC1_UM03H*-1 + KNC1_UM04H*-1 + KNC1_UM05H*-1 + KNC1_UM06H*-1 + KNC1_UM07H*-1 + KNC1_UM08H*-1 +
					KNC1_UM09H*-1 + KNC1_UM10H*-1 + KNC1_UM11H*-1 + KNC1_UM12H*-1 + KNC1_UM13H*-1 + KNC1_UM14H*-1 + KNC1_UM15H*-1 + KNC1_UM16H*-1),
			   SUM(KNC1_UM01U + KNC1_UM02U + KNC1_UM03U + KNC1_UM04U + KNC1_UM05U + KNC1_UM06U + KNC1_UM07U + KNC1_UM08U + 
					KNC1_UM09U + KNC1_UM10U + KNC1_UM11U + KNC1_UM12U + KNC1_UM13U + KNC1_UM14U + KNC1_UM15U + KNC1_UM16U),
			   SUM(KNC1_UMSAV + KNC1_UM01S + KNC1_UM01H*-1 + KNC1_UM02S + KNC1_UM02H*-1 + KNC1_UM03S + 
					KNC1_UM03H*-1 + KNC1_UM04S + KNC1_UM04H*-1 + KNC1_UM05S + KNC1_UM05H*-1 + 
					KNC1_UM06S + KNC1_UM06H*-1 + KNC1_UM07S + KNC1_UM07H*-1 + KNC1_UM08S + KNC1_UM08H*-1 + 
					 KNC1_UM09S + KNC1_UM09H*-1 + KNC1_UM10S + KNC1_UM10H*-1 + KNC1_UM11S + 
					KNC1_UM11H*-1 + KNC1_UM12S + KNC1_UM12H*-1 + KNC1_UM13S + KNC1_UM13H*-1 + 
					KNC1_UM14S + KNC1_UM14H*-1 + KNC1_UM15S + KNC1_UM15H*-1 + KNC1_UM16S + KNC1_UM16H*-1)
		FROM A_KNC1
		GROUP BY KNC1_MANDT, KNC1_KUNNR, KNC1_BUKRS, KNC1_GJAHR, KNC1_ERDAT, KNC1_USNAM

	/*
		Step 7: Calculate the cumulative value and Total value at the end of period.
	*/
		UPDATE B00_05_TT_CUSTOMER_BALANCE_VERTICAL
		SET ZF_HSL_BALANCE_CARRIED_FORWARD = CUMULATIVE_CUBE.ZF_CUMULATIVE_VALUE
		FROM (
				SELECT A.KNC1_MANDT, A.KNC1_KUNNR, A.KNC1_BUKRS, A.KNC1_GJAHR, A.KNC1_ERDAT, A.KNC1_USNAM, A.KNC1_MONAT,
					   (SUM(B.ZF_HSL_BALANCE_CARRIED_FORWARD) + SUM(B.KNC1_HSL_S) + SUM(B.KNC1_HSL_H)) ZF_CUMULATIVE_VALUE
				FROM B00_05_TT_CUSTOMER_BALANCE_VERTICAL AS A
				INNER JOIN
				B00_05_TT_CUSTOMER_BALANCE_VERTICAL AS B
				ON A.KNC1_KUNNR = B.KNC1_KUNNR AND
				   A.KNC1_BUKRS = B.KNC1_BUKRS AND
				   A.KNC1_GJAHR = B.KNC1_GJAHR AND
				   A.KNC1_ERDAT = B.KNC1_ERDAT AND
				   A.KNC1_USNAM = B.KNC1_USNAM AND
				   CAST(A.KNC1_MONAT AS INT) >= CAST(B.KNC1_MONAT AS INT)
				WHERE A.KNC1_MONAT NOT IN ('00', '99') AND B.KNC1_MONAT NOT IN ('99')
				GROUP BY A.KNC1_MANDT, A.KNC1_KUNNR, A.KNC1_BUKRS, A.KNC1_GJAHR, A.KNC1_ERDAT, A.KNC1_USNAM, A.KNC1_MONAT
				   
			 )  AS CUMULATIVE_CUBE
			 WHERE B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_KUNNR = CUMULATIVE_CUBE.KNC1_KUNNR AND
				   B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_BUKRS = CUMULATIVE_CUBE.KNC1_BUKRS AND
				   B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_GJAHR = CUMULATIVE_CUBE.KNC1_GJAHR AND
				   B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_MONAT = CUMULATIVE_CUBE.KNC1_MONAT AND
				   B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_ERDAT = CUMULATIVE_CUBE.KNC1_ERDAT AND
				   B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_USNAM = CUMULATIVE_CUBE.KNC1_USNAM

		ALTER TABLE B00_05_TT_CUSTOMER_BALANCE_VERTICAL ALTER COLUMN KNC1_MONAT NVARCHAR(30)
		UPDATE B00_05_TT_CUSTOMER_BALANCE_VERTICAL
		SET KNC1_MONAT = '00-Begin period'
		WHERE KNC1_MONAT = '00'

		UPDATE B00_05_TT_CUSTOMER_BALANCE_VERTICAL
		SET KNC1_MONAT = 'Total'
		WHERE KNC1_MONAT = '99'

	/*
		Step 8: Add currency factor for balance amount and get some necessary information to the cube.
	*/
		EXEC SP_REMOVE_TABLES 'B00_06_RT_CUSTOMER_BALANCE_FINAL'
		SELECT KNC1_MANDT,
			   KNC1_KUNNR,
			   KNA1_NAME1,
			   KNA1_LAND1,
			   T005T_NATIO,
			   KNC1_BUKRS,
			   T001_BUTXT,
			   T001_WAERS,
			   KNC1_GJAHR,
			   KNC1_MONAT,
			   KNC1_ERDAT,
			   KNC1_USNAM,
			   V_USERNAME_NAME_TEXT,
			   CAST(KNC1_HSL_S AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) KNC1_HSL_S,
			   CAST(KNC1_HSL_H AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) KNC1_HSL_H,
			   CAST(KNC1_HSL_U AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) KNC1_HSL_U,
			   CAST(ZF_HSL_BALANCE_CARRIED_FORWARD AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) ZF_HSL_BALANCE_CARRIED_FORWARD
		INTO B00_06_RT_CUSTOMER_BALANCE_FINAL
		FROM B00_05_TT_CUSTOMER_BALANCE_VERTICAL

		--Get company information and location currency
		LEFT JOIN A_T001
		ON B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_BUKRS = A_T001.T001_BUKRS

		--Get vendor master information
		LEFT JOIN A_KNA1
		ON B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_KUNNR = A_KNA1.KNA1_KUNNR

		--Get customer country code desc
		LEFT JOIN A_T005T
		ON T005T_SPRAS IN ('E', 'EN') AND
		   T005T_LAND1 = KNA1_LAND1


		--Get currency factor of local currency
		LEFT JOIN B00_TCURX
		ON A_T001.T001_WAERS = B00_TCURX.TCURX_CURRKEY

		--Get username description
		LEFT JOIN A_V_USERNAME
		ON  B00_05_TT_CUSTOMER_BALANCE_VERTICAL.KNC1_USNAM = A_V_USERNAME.V_USERNAME_BNAME



	/*
		Step 9: Make a temporary table contain all vendor master special g/l figures
	*/
		EXEC SP_REMOVE_TABLES 'B00_07_TT_CUSTOMER_BALANCE_SPECIAL_GL'
		SELECT KNC3_MANDT, KNC3_KUNNR, KNA1_NAME1, KNA1_LAND1, T005T_NATIO, KNC3_BUKRS, T001_BUTXT, T001_WAERS, KNC3_GJAHR, KNC3_SHBKZ, T074T_LTEXT, 
			   CAST(KNC3_SALDV AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) AS KNC3_SALDV,
			   CAST(KNC3_SOLLL AS MONEY) * ISNULL(B00_TCURX.TCURX_FACTOR,1) AS KNC3_SOLLL,
			   CAST(KNC3_HABNL AS MONEY) * -1 * ISNULL(B00_TCURX.TCURX_FACTOR,1) AS KNC3_HABNL
		INTO B00_07_TT_CUSTOMER_BALANCE_SPECIAL_GL
		FROM A_KNC3

		--Get company information and location currency
		LEFT JOIN A_T001
		ON A_KNC3.KNC3_BUKRS = A_T001.T001_BUKRS

		--Get vendor master information
		LEFT JOIN A_KNA1
		ON A_KNC3.KNC3_KUNNR = A_KNA1.KNA1_KUNNR

		--Get customer country code
		LEFT JOIN A_T005T
		ON T005T_SPRAS IN ('E', 'EN') AND
		   T005T_LAND1 = KNA1_LAND1

		--Get special gl indicator desc
		LEFT JOIN A_T074T
		ON T074T_SPRAS IN ('E','EN') AND
		   T074T_KOART = 'D' AND
		   KNC3_SHBKZ = T074T_SHBKZ

		--Get currency factor of local currency
		LEFT JOIN B00_TCURX
		ON A_T001.T001_WAERS = B00_TCURX.TCURX_CURRKEY

		UNION ALL

		SELECT KNC1_MANDT, KNC1_KUNNR, KNA1_NAME1,KNA1_LAND1, T005T_NATIO, KNC1_BUKRS, T001_BUTXT, T001_WAERS, KNC1_GJAHR, '', 'zAccount balance', '0', KNC1_HSL_S, KNC1_HSL_H
		FROM B00_06_RT_CUSTOMER_BALANCE_FINAL
		WHERE KNC1_MONAT = 'Total'


	/*
		Step 10: Create final cube for Specaial G/L vendor balance
	*/

		EXEC SP_REMOVE_TABLES 'B00_08_RT_CUSTOMER_BALANCE_SPECIAL_GL'
		SELECT *
		INTO B00_08_RT_CUSTOMER_BALANCE_SPECIAL_GL
		FROM B00_07_TT_CUSTOMER_BALANCE_SPECIAL_GL
		UNION ALL
		SELECT KNC3_MANDT, KNC3_KUNNR, KNA1_NAME1,KNA1_LAND1, T005T_NATIO, KNC3_BUKRS, T001_BUTXT, T001_WAERS, KNC3_GJAHR, '', 'zTotal', SUM(KNC3_SALDV), SUM(KNC3_SOLLL), SUM(KNC3_HABNL)
		FROM B00_07_TT_CUSTOMER_BALANCE_SPECIAL_GL
		GROUP BY KNC3_MANDT, KNC3_KUNNR, KNA1_NAME1,KNA1_LAND1, T005T_NATIO, KNC3_BUKRS, T001_BUTXT , T001_WAERS, KNC3_GJAHR


	--Drop temporary table
	EXEC SP_REMOVE_TABLES '%_TT_%'
	-- Add prefix for result tables
	EXEC SP_RENAME_FIELD 'B00_02_', 'B00_02_RT_VENDOR_BALANCE_FINAL'
	EXEC SP_RENAME_FIELD 'B00_04_', 'B00_04_RT_VENDOR_BALANCE_SPECIAL_GL'
	EXEC SP_RENAME_FIELD 'B00_06_', 'B00_06_RT_CUSTOMER_BALANCE_FINAL'
	EXEC SP_RENAME_FIELD 'B00_08_', 'B00_08_RT_CUSTOMER_BALANCE_SPECIAL_GL'
END
GO
