USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE     PROC [dbo].[script_B12_PTP_PO_APA_MAPPING]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
/* Initialize parameters from globals table */


/*Change history comments*/


  /*
  Title:	[B12_PTP_PO_APA_MAPPING_NEW]
  Description: Create a mapping table between purchase orders, Invoice & Cancellation and 
  finance data.

    --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date		    | Who |	Description
	26-02-2019	     Vinh Le   Created
	25-11-2019		 Vinh Le   Update script for S/4HANA
	22-03-2022	     Thuan     Remove MANDT field in join
	05-12-2022		 Khoa	   Fix snapshot date (@date1 to EOMONTH(@date1) in line 421

  */

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
	/*Step 0: prepare GL GRIR account table */
	/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)

	SET ROWCOUNT @LIMIT_RECORDS;

	EXEC SP_DROPTABLE 'B12_00_TT_INVS_AND_CANCS_LIST'
	SELECT DISTINCT B11_BSAIK_BUKRS, B11_BSAIK_GJAHR, B11_BSAIK_BELNR INTO B12_00_TT_INVS_AND_CANCS_LIST FROM B11_05_IT_PTP_INVS_AND_CANCS

	EXEC sp_CREATE_INDEX 'B11_BSAIK_BUKRS, B11_BSAIK_GJAHR, B11_BSAIK_BELNR', 'B12_00_TT_INVS_AND_CANCS_LIST'

	/*Step 1: Filter document number GL (B04) according to AP(B11) */

	EXEC SP_REMOVE_TABLES 'B12_01_IT_PTP_GL'
	SELECT DISTINCT
		--Infomation from the B04_11_IT_FIN_GL
		B04_11_IT_FIN_GL.B04_BSEG_BUKRS,
		B04_11_IT_FIN_GL.B04_BSEG_GJAHR,
		B04_11_IT_FIN_GL.B04_BSEG_BELNR,
		B04_11_IT_FIN_GL.B04_BSEG_BUZEI,
		B04_11_IT_FIN_GL.B04_BSEG_SGTXT,
		B04_11_IT_FIN_GL.B04_BSEG_LIFNR,
		B04_11_IT_FIN_GL.B04_BSEG_ZUONR,
		B04_11_IT_FIN_GL.B04_BKPF_AWTYP,
		--B04_11_IT_FIN_GL.B04_GL_ACDOCA_AWREF,
		A_T001.T001_BUTXT,
		B04_11_IT_FIN_GL.B04_BSEG_KOART,
		B04_11_IT_FIN_GL.B04_BKPF_TCODE,
		B04_11_IT_FIN_GL.B04_BSEG_BSCHL,
		B04_11_IT_FIN_GL.B04_BSEG_EBELN,
		B04_11_IT_FIN_GL.B04_BSEG_EBELP,
		B04_11_IT_FIN_GL.B04_ZF_BSEG_SHKZG_DESC,
		B04_11_IT_FIN_GL.B04_BSEG_SHKZG,
		B04_11_IT_FIN_GL.B04_ZF_BKPF_GJAHR_MONAT,
		B04_11_IT_FIN_GL.B04_BKPF_BUDAT,
		B04_11_IT_FIN_GL.B04_BSEG_GSBER, --be missing in the B04 optimization
		A_TGSBT.TGSBT_GTEXT, --be missing in the B04 optimization
		AM_SCOPE.SCOPE_BUSINESS_DMN_L1, --be missing in the B04 optimization
		AM_SCOPE.SCOPE_BUSINESS_DMN_L2, --be missing in the B04 optimization

		--Get GL Account information
		B04_11_IT_FIN_GL.B04_BSEG_HKONT,
		B00_SKAT.SKAT_TXT50, --be missing in the B04 optimization

		--Get Material group description	
		A_T023T.T023T_WGBEZ,
		A_MARA.MARA_MATKL,
		
		--Get spend category level 1
		IIF(ISNULL(IRGR_GL_ACCT, '') <> '' AND ISNULL(AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_1,'') <> '',
				'P-' + AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_1,
				'G-' + SPCAT_SPEND_CAT_LEVEL_1
		   ) SPCAT_SPEND_CAT_LEVEL_1,

		--Get spend category level 2
		IIF(ISNULL(IRGR_GL_ACCT, '') <> '' AND ISNULL(AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_2,'') <> '',
				'P-' + AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_2,
				'G-' + SPCAT_SPEND_CAT_LEVEL_2
		   ) SPCAT_SPEND_CAT_LEVEL_2,

		--Get spend category level 3
		IIF(ISNULL(IRGR_GL_ACCT, '') <> '' AND ISNULL(AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_3,'') <> '',
				'P-' + AM_IRGR_MATERIAL_GROUP_HIERARCHY.IRGR_SPEND_CAT_LEVEL_3,
				'G-' + SPCAT_SPEND_CAT_LEVEL_3
		   ) SPCAT_SPEND_CAT_LEVEL_3,

		--Get spend category level 4
		IIF(ISNULL(IRGR_GL_ACCT, '') <> '' AND ISNULL(A_T023T.T023T_WGBEZ,'') <> '',
				'P-' + CONCAT(A_MARA.MARA_MATKL, '-', A_T023T.T023T_WGBEZ),
				'G-' + SPCAT_SPEND_CAT_LEVEL_4
		   ) SPCAT_SPEND_CAT_LEVEL_4,

		AM_SPEND_CATEGORY.SPCAT_SPEND_TYPE, --be missing in the B04 optimization
		--Get additional document information
		B04_11_IT_FIN_GL.B04_BKPF_BLART,
		B00_T003T.T003T_LTEXT, --be missing in the B04 optimization
		B04_11_IT_FIN_GL.B04_BKPF_BLDAT,
		B04_11_IT_FIN_GL.B04_BSEG_AUGBL,
		B04_11_IT_FIN_GL.B04_BSEG_AUGDT,
		B04_11_IT_FIN_GL.B04_BSEG_ZFBDT,
		B04_11_IT_FIN_GL.B04_BKPF_BKTXT,
		B04_11_IT_FIN_GL.B04_BKPF_BSTAT,
		B00_DD07T.DD07T_DDTEXT, --be missing in the B04 optimization
		--B04_11_IT_FIN_GL.B04_GL_TSTCT_TTEXT,

		--Get values before tax that is need for spend category analysis
		B04_11_IT_FIN_GL.B04_BKPF_WAERS,
        B04_11_IT_FIN_GL.B04_ZF_BSEG_WRBTR_S_DOC,
		B04_11_IT_FIN_GL.B04_BKPF_HWAER,
		B04_11_IT_FIN_GL.B04_AM_GLOBALS_CURRENCY,
        COALESCE(B04_11_IT_FIN_GL.B04_ZF_BSEG_DMBTR_S,0) AS B04_ZF_BSEG_DMBTR_S,
		COALESCE(B04_11_IT_FIN_GL.B04_ZF_BSEG_DMBTR_S_CUC,0) AS B04_ZF_BSEG_DMBTR_S_CUC,
		COALESCE(B04_11_IT_FIN_GL.B04_ZF_BSEG_DMBE2_S,0) AS B04_ZF_BSEG_DMBE2_S,
		COALESCE(B04_11_IT_FIN_GL.B04_ZF_BSEG_DMBE3_S,0) AS B04_ZF_BSEG_DMBE3_S,
		B04_11_IT_FIN_GL.B04_BSEG_AUFNR,
		B04_11_IT_FIN_GL.B04_BSEG_MATNR,
		B00_MAKT.MAKT_MAKTX,

		--Get GL Supplier Name
		A_LFA1.LFA1_NAME1 AS B04_ZF_LFA1_NAME1,

		--Initialization Profit Center for GL Filter
		CASE 
			WHEN ISNULL(B04_11_IT_FIN_GL.B04_BSEG_PRCTR,'') <> '' THEN B04_11_IT_FIN_GL.B04_BSEG_PRCTR
			ELSE 'Not assigned' 
			END 
		AS ZF_ACDOCA_PROF_CENT,


		--Initialization Cost Center for GL Filter
		CASE 
			WHEN ISNULL(B04_11_IT_FIN_GL.B04_BSEG_KOSTL,'') <> '' THEN B04_11_IT_FIN_GL.B04_BSEG_KOSTL
			ELSE 'Not assigned' 
			END 
		AS ZF_ACDOCA_COST_CENT,
		B04_BSEG_KOSTL,
		B04_BSEG_PRCTR,
		B04_BSEG_KOKRS,
		B04_BKPF_XBLNR,
		B04_BKPF_USNAM,
		A_V_USERNAME.V_USERNAME_NAME_TEXT,
		B00_USR02.USR02_USTYP,
		CASE 
		 WHEN B00_USR02.USR02_USTYP = 'A' THEN 'Dialog' 
		 WHEN B00_USR02.USR02_USTYP = 'B' THEN 'System' 
		 WHEN B00_USR02.USR02_USTYP = 'C' THEN 'Communication (external RFC)' 
		 WHEN B00_USR02.USR02_USTYP = 'L' THEN 'Reference' 
		 WHEN B00_USR02.USR02_USTYP = 'S' THEN 'Service' 
		 ELSE 'Other' 
		END AS ZF_USR02_USTYP_DESC,
		B00_TBSLT.TBSLT_LTEXT,
		CEPCT_LTEXT, 
		CSKT_LTEXT,
		CEPCT_KTEXT,
		CSKT_KTEXT,
		CEPCT_MCTXT,
		CSKT_MCTXT
	INTO B12_01_IT_PTP_GL
	FROM B04_11_IT_FIN_GL
		--Get supplier name
		LEFT JOIN A_LFA1
			ON B04_11_IT_FIN_GL.B04_BSEG_LIFNR = A_LFA1.LFA1_LIFNR

		--Get company description
		LEFT JOIN A_T001                                             
			ON B04_11_IT_FIN_GL.B04_BSEG_BUKRS = A_T001.T001_BUKRS


		--Get Spend category
		LEFT JOIN AM_SPEND_CATEGORY
			ON dbo.REMOVE_LEADING_ZEROES(B04_11_IT_FIN_GL.B04_BSEG_HKONT) = dbo.REMOVE_LEADING_ZEROES(AM_SPEND_CATEGORY.SPCAT_GL_ACCNT)

		--Get Material group
		LEFT JOIN A_MARA
			ON MARA_MATNR = B04_BSEG_MATNR
		
		--Get Material description

		LEFT JOIN B00_MAKT
			ON MAKT_MATNR = B04_BSEG_MATNR

		--Get material group description
		LEFT JOIN A_T023T
			ON T023T_MATKL = MARA_MATKL
			AND T023T_SPRAS = 'EN'

		--Map with IRGR accounts
		LEFT JOIN AM_IRGR_GINI_ARDR_MAPPING
			ON DBO.REMOVE_LEADING_ZEROES(B04_BSEG_HKONT) = DBO.REMOVE_LEADING_ZEROES(IRGR_GL_ACCT)
			AND IRGR_OR_GINI_OR_ARDR = 'IRGR'

		--Map with Material group hierachy
		LEFT JOIN AM_IRGR_MATERIAL_GROUP_HIERARCHY
			ON AM_IRGR_MATERIAL_GROUP_HIERARCHY.T023T_MATKL = A_MARA.MARA_MATKL

		LEFT JOIN AM_SCOPE                                         
			ON  B04_11_IT_FIN_GL.B04_BSEG_BUKRS = AM_SCOPE.SCOPE_CMPNY_CODE
		
		LEFT JOIN B00_T003T
			ON  B04_11_IT_FIN_GL.B04_BKPF_BLART = B00_T003T.T003T_BLART

		LEFT JOIN B00_DD07T
            ON     
                     (B04_BKPF_BSTAT = LEFT(B00_DD07T.DD07T_DOMVALUE_L,1)) AND
                     (DD07T_DOMNAME = 'BSTAT')

		-- Add GL Account information
              LEFT JOIN B00_SKAT
              ON     A_T001.T001_KTOPL = B00_SKAT.SKAT_KTOPL AND
                     B04_11_IT_FIN_GL.B04_BSEG_HKONT = B00_SKAT.SKAT_SAKNR
		
		-- Add information about the business area description                             
              LEFT JOIN A_TGSBT
              ON (B04_11_IT_FIN_GL.B04_BSEG_GSBER = A_TGSBT.TGSBT_GSBER)

		-- Get controlling area
			  LEFT JOIN A_TKA02
			  ON A_TKA02.TKA02_BUKRS = B04_11_IT_FIN_GL.B04_BSEG_BUKRS AND
			  A_TKA02.TKA02_GSBER = B04_11_IT_FIN_GL.B04_BSEG_GSBER

		-- Add information about Cost center description
			  LEFT JOIN B00_CSKT 
				ON CSKT_KOSTL = B04_BSEG_KOSTL AND 
				   CSKT_KOKRS = B04_BSEG_KOKRS

		--Add information about Profit center description
			  LEFT JOIN B00_CEPCT 
				ON CEPCT_PRCTR = B04_BSEG_PRCTR AND
				   CEPCT_KOKRS = B04_BSEG_KOKRS

		--Add information about Posting key description

			  LEFT JOIN B00_TBSLT
				ON	B04_11_IT_FIN_GL.B04_BSEG_BSCHL = B00_TBSLT.TBSLT_BSCHL AND
					B04_11_IT_FIN_GL.B04_BSEG_UMSKZ = B00_TBSLT.TBSLT_UMSKZ
		--Add information about user logon data
			  LEFT JOIN A_V_USERNAME
				ON B04_11_IT_FIN_GL.B04_BKPF_USNAM = A_V_USERNAME.V_USERNAME_BNAME

		--Add user logon type and text
				LEFT JOIN B00_USR02
				ON B04_11_IT_FIN_GL.B04_BKPF_USNAM = B00_USR02.USR02_BNAME

	WHERE EXISTS(
			SELECT * FROM B12_00_TT_INVS_AND_CANCS_LIST
			WHERE B12_00_TT_INVS_AND_CANCS_LIST.B11_BSAIK_BUKRS = B04_11_IT_FIN_GL.B04_BSEG_BUKRS
			AND B12_00_TT_INVS_AND_CANCS_LIST.B11_BSAIK_GJAHR = B04_11_IT_FIN_GL.B04_BSEG_GJAHR
			AND B12_00_TT_INVS_AND_CANCS_LIST.B11_BSAIK_BELNR = B04_11_IT_FIN_GL.B04_BSEG_BELNR
	)


--Update the flag where LFA1_LAND1 is not the same with LFBK_BANKS





	/*Step 2: Filter document number AP table according to GL table*/
	EXEC SP_CREATE_INDEX 'BSEG_BUKRS, BSEG_GJAHR, BSEG_BELNR', 'B04_07_IT_BSEG_BKPF_ACC_SCH'
	EXEC SP_REMOVE_TABLES 'B12_02_IT_PTP_AP'
	SELECT

		--Get all value from GL table
		B11_05_IT_PTP_INVS_AND_CANCS.*,
		AM_SPEND_CATEGORY.*,

		CASE 
			WHEN ISNULL(B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_PRCTR, '') <> '' THEN B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_PRCTR
			ELSE 'Not assigned' 
			END 
		AS ZF_BSAIK_PROF_CENT,

		CASE 
			WHEN ISNULL(B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_KOSTL, '') <> '' THEN B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_KOSTL
			ELSE 'Not assigned' 
			END 
		AS ZF_BSAIK_COST_CENT,

		A_LFA1.LFA1_NAME1 AS B11_ZF_LFA1_NAME1,
		CASE 
			WHEN ISNULL(B00_CEPCT.CEPCT_LTEXT, '') <> '' THEN B00_CEPCT.CEPCT_LTEXT
			ELSE 'Not assigned' 
			END 
		AS B11_CEPCT_LTEXT,

		CASE 
			WHEN ISNULL(B00_CSKT.CSKT_LTEXT, '') <> '' THEN B00_CSKT.CSKT_LTEXT
			ELSE 'Not assigned' 
			END 
		AS B11_CSKT_LTEXT,
		'' as ZF_PAYMENT_DATE,
		'' as ZF_INV_SOURCE,

		CAST('' AS nvarchar(12)) as ZF_BSAIK_LIFNR_DIFF_COUNTRY,
		'Yes' AS B11_ZF_LFA1_LAND_EQ_LFBK_BANKS
		

	INTO B12_02_IT_PTP_AP
	FROM B11_05_IT_PTP_INVS_AND_CANCS
	LEFT JOIN A_LFA1
		ON B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_LIFNR = A_LFA1.LFA1_LIFNR

	--Get Spend category
	LEFT JOIN AM_SPEND_CATEGORY
		ON dbo.REMOVE_LEADING_ZEROES(B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_HKONT) = dbo.REMOVE_LEADING_ZEROES(AM_SPEND_CATEGORY.SPCAT_GL_ACCNT)

	--Get controlling area
	LEFT JOIN A_TKA02
		ON A_TKA02.TKA02_BUKRS = B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_BUKRS AND
		A_TKA02.TKA02_GSBER = B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_GSBER

	--Add Profit Center description
	LEFT JOIN B00_CEPCT
		ON A_TKA02.TKA02_KOKRS = B00_CEPCT.CEPCT_KOKRS
		AND B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_PRCTR = B00_CEPCT.CEPCT_PRCTR

	--Add Cost Center description
	LEFT JOIN B00_CSKT
		ON A_TKA02.TKA02_KOKRS = B00_CSKT.CSKT_KOKRS
		AND B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_KOSTL = B00_CSKT.CSKT_KOSTL

	WHERE EXISTS (
		SELECT *
		FROM B04_07_IT_BSEG_BKPF_ACC_SCH
		WHERE B04_07_IT_BSEG_BKPF_ACC_SCH.BSEG_BUKRS = B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_BUKRS
		AND B04_07_IT_BSEG_BKPF_ACC_SCH.BSEG_GJAHR = B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_GJAHR
		AND B04_07_IT_BSEG_BKPF_ACC_SCH.BSEG_BELNR = B11_05_IT_PTP_INVS_AND_CANCS.B11_BSAIK_BELNR
	)

		UPDATE B12_02_IT_PTP_AP 
	SET B11_ZF_LFA1_LAND_EQ_LFBK_BANKS='No'
	WHERE B11_BSAIK_LIFNR IN
	(
		SELECT B11_BSAIK_LIFNR 
		FROM A_LFBK 
		INNER JOIN B12_02_IT_PTP_AP 
			ON B11_BSAIK_LIFNR=LFBK_LIFNR
			AND B11_LFA1_LAND1<>LFBK_BANKS
	)

	/* Step 2.1 List of supplier from LFA1 with LFA1_LAND1 can't find in T001_LAND1 */
	UPDATE B12_02_IT_PTP_AP
	SET ZF_BSAIK_LIFNR_DIFF_COUNTRY = B11_BSAIK_LIFNR
	FROM B12_02_IT_PTP_AP AS A 
	WHERE B11_LFA1_LAND1
	NOT IN 
	(
		SELECT DISTINCT T001_LAND1 FROM A_T001
	)

	/*Step 3: Get supplier number for PO*/
	EXEC SP_REMOVE_TABLES 'B12_03_IT_PTP_PO'
	SELECT DISTINCT  B09_13_IT_PTP_POS.*,
		   A_LFA1.LFA1_NAME1 AS B09_ZF_LFA1_NAME1,
	CAST('No' as nvarchar(3)) B09_ZF_SUPPLIER_BLANKET_PO
	INTO B12_03_IT_PTP_PO
	FROM B09_13_IT_PTP_POS
		LEFT JOIN A_LFA1
		ON B09_13_IT_PTP_POS.B09_EKKO_LIFNR = A_LFA1.LFA1_LIFNR

-- Create B09_ZF_SUPPLIER_BLANKET_PO field. That mean list of suppliers have Blanket PO.


	UPDATE B12_03_IT_PTP_PO
	SET B09_ZF_SUPPLIER_BLANKET_PO = 'Yes'
	FROM B12_03_IT_PTP_PO A
	WHERE EXISTS ( 
		SELECT TOP 1 1 
		FROM B09_13_IT_PTP_POS B 
		WHERE A.B09_EKKO_LIFNR = B.B09_EKKO_LIFNR 
		AND B.B09_ZF_BLANKET_PO = 'Yes'
		)

	/*
		Step 4: Loop every snapshot date begin date1 to date2 and select and insert the documents that still open in this snapshot
	*/
	EXEC SP_REMOVE_TABLES 'B12_04_IT_GRIR_SNAPSHOT'
	SELECT TOP 0 BSEG_MANDT, BSEG_BUKRS, BSEG_GJAHR, BSEG_BELNR, BSEG_BUZEI, BSEG_AUGDT AS BKPF_BUDAT, BSEG_AUGDT AS BKPF_BLDAT, BSEG_AUGDT, BSEG_AUGDT AS BKPF_CPUDT
	INTO B12_04_IT_GRIR_SNAPSHOT
	FROM A_BSEG;

	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD IRGR_OR_GINI_OR_ARDR NVARCHAR(4);
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD SNAPSHOT_DATE DATE;
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_BUDAT_MINUS_SNAPSHOT_DATE BIGINT;
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_BUDAT_MINUS_SNAPSHOT_DATE_BUCKET NVARCHAR(50);
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_BLDAT_MINUS_SNAPSHOT_DATE BIGINT;
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_BLDAT_MINUS_SNAPSHOT_DATE_BUCKET NVARCHAR(50);
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_AUGDT_MINUS_SNAPSHOT_DATE BIGINT;
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_AUGDT_MINUS_SNAPSHOT_DATE_BUCKET NVARCHAR(50);
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_CPUDT_MINUS_SNAPSHOT_DATE BIGINT;
	ALTER TABLE B12_04_IT_GRIR_SNAPSHOT ADD ZF_CPUDT_MINUS_SNAPSHOT_DATE_BUCKET NVARCHAR(50);
	WHILE EOMONTH(@DATE1) <= EOMONTH(@DATE2)
	BEGIN
		PRINT CONCAT('Process for snapshot date: ',@DATE1);
		INSERT INTO B12_04_IT_GRIR_SNAPSHOT
		SELECT 
				B04_BKPF_MANDT,
				B04_BSEG_BUKRS,
				B04_BSEG_GJAHR,
				B04_BSEG_BELNR,
				B04_BSEG_BUZEI,
				B04_BKPF_BUDAT,
				B04_BKPF_BLDAT,
				B04_BSEG_AUGDT,
				B04_BKPF_CPUDT,
				IRGR_OR_GINI_OR_ARDR,
				EOMONTH(@DATE1),
				DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1),
				CASE
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >=0 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 10 THEN '0-10 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >= 11 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 20 THEN '11-20 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >= 21 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 30 THEN '21-30 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >= 31 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 60 THEN '31-60 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >= 61 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 180 THEN '61-180 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) >= 181 AND DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) <= 360 THEN '181-360 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BUDAT, @DATE1) > 360 THEN '360+ days'
					ELSE '<0 days'
				END,
				DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1),
				CASE
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >=0 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 10 THEN '0-10 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >= 11 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 20 THEN '11-20 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >= 21 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 30 THEN '21-30 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >= 31 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 60 THEN '31-60 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >= 61 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 180 THEN '61-180 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) >= 181 AND DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) <= 360 THEN '181-360 days'
					WHEN DATEDIFF(DAY, B04_BKPF_BLDAT, @DATE1) > 360 THEN '360+ days'
					ELSE '<0 days'
				END,
				DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1),
				CASE
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >=0 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 10 THEN '0-10 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >= 11 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 20 THEN '11-20 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >= 21 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 30 THEN '21-30 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >= 31 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 60 THEN '31-60 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >= 61 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 180 THEN '61-180 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) >= 181 AND DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) <= 360 THEN '181-360 days'
					WHEN DATEDIFF(DAY, B04_BSEG_AUGDT, @DATE1) > 360 THEN '360+ days'
					ELSE '<0 days'
				END,
				DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1),
				CASE
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >=0 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 10 THEN '0-10 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >= 11 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 20 THEN '11-20 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >= 21 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 30 THEN '21-30 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >= 31 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 60 THEN '31-60 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >= 61 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 180 THEN '61-180 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) >= 181 AND DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) <= 360 THEN '181-360 days'
					WHEN DATEDIFF(DAY, B04_BKPF_CPUDT, @DATE1) > 360 THEN '360+ days'
					ELSE '<0 days'
				END
		FROM B04_11_IT_FIN_GL
		INNER JOIN AM_IRGR_GINI_ARDR_MAPPING
		ON B04_BSEG_HKONT = IRGR_GL_ACCT
		WHERE B04_BKPF_BUDAT <= @DATE1 AND (B04_BSEG_AUGDT IS NULL OR ISNULL(B04_BSEG_AUGBL, '') = '' OR B04_BSEG_AUGDT > @DATE1)
		SET @DATE1 = EOMONTH(DATEADD(MM,1,@DATE1))
	END

	/*
		Step 5: Create a cube from full GL cube only include the documents have been in the IR/GR account
	*/
	EXEC SP_REMOVE_TABLES 'B12_05_IT_GRIR_DOCUMENTS'
	SELECT B04_11_IT_FIN_GL.*,
		CASE	
			WHEN CAST(B04_BKPF_MONAT AS INT) = 0 THEN 'Open'
			WHEN CAST(B04_BKPF_MONAT AS INT) IN (1, 2, 3) THEN 'Q1'
			WHEN CAST(B04_BKPF_MONAT AS INT) IN (4, 5, 6) THEN 'Q2'
			WHEN CAST(B04_BKPF_MONAT AS INT) IN (7, 8, 9) THEN 'Q3'
			WHEN CAST(B04_BKPF_MONAT AS INT) IN (10, 11, 12) THEN 'Q4'
			ELSE 'Special Quater' 
		END AS ZF_BKPF_MONAT_FQ,
		A_T001.T001_BUTXT,
		A_SKAT.SKAT_TXT50,
		A_T003T.T003T_LTEXT,
		A_TBSLT.TBSLT_LTEXT,
		A_LFA1.LFA1_NAME1,
--		A_LFA1.LFA1_KTOKK,
		A_KNA1.KNA1_NAME1,
--		A_KNA1.KNA1_KTOKD,
		A_V_USERNAME.*,
		AM_SCOPE.SCOPE_BUSINESS_DMN_L1,
		AM_SCOPE.SCOPE_BUSINESS_DMN_L2,
		AM_T077Y.INTERCO_TXT AS T077Y_INTERCO_TXT,
--		AM_T077Y.T077Y_TXT30,
		AM_T077X.INTERCO_TXT AS T077X_INTERCO_TXT,
--		AM_T077X.T077X_TXT30,
		A_TSTCT.TSTCT_TTEXT,
		A_T074T.T074T_LTEXT,
		AM_IRGR_GINI_ARDR_MAPPING.*

	INTO B12_05_IT_GRIR_DOCUMENTS
	FROM B04_11_IT_FIN_GL
	INNER JOIN AM_IRGR_GINI_ARDR_MAPPING
	ON B04_BSEG_HKONT = IRGR_GL_ACCT

	--Get company information from T001 tables
	LEFT JOIN A_T001
	ON A_T001.T001_BUKRS = B04_11_IT_FIN_GL.B04_BSEG_BUKRS

	--Get g/l account information from SKAT
	LEFT JOIN A_SKAT
	ON A_SKAT.SKAT_KTOPL = A_T001.T001_KTOPL AND
	   A_SKAT.SKAT_SAKNR = B04_11_IT_FIN_GL.B04_BSEG_HKONT AND
	   A_SKAT.SKAT_SPRAS IN ('E', 'EN')

	--Get document type text description
	LEFT JOIN A_T003T
	ON A_T003T.T003T_SPRAS IN ('E', 'EN') AND
	   A_T003T.T003T_BLART = B04_11_IT_FIN_GL.B04_BKPF_BLART

	--Get posting key desctiption from TBSLT
	LEFT JOIN A_TBSLT
	ON A_TBSLT.TBSLT_SPRAS IN ('E', 'EN') AND
	   A_TBSLT.TBSLT_BSCHL = B04_11_IT_FIN_GL.B04_BSEG_BSCHL AND
	   A_TBSLT.TBSLT_UMSKZ = B04_11_IT_FIN_GL.B04_BSEG_UMSKZ

	--Get vendor name from LFA1
	LEFT JOIN A_LFA1
	ON A_LFA1.LFA1_LIFNR = B04_11_IT_FIN_GL.B04_BSEG_LIFNR

	-- Get customer from KNA1
	LEFT JOIN A_KNA1
	ON A_KNA1.KNA1_KUNNR = B04_11_IT_FIN_GL.B04_BSEG_KUNNR

	--Get user name for V_USNAM
	LEFT JOIN A_V_USERNAME
	ON A_V_USERNAME.V_USERNAME_BNAME = B04_11_IT_FIN_GL.B04_BKPF_USNAM

	--Get information from AM_SCOPE
	LEFT JOIN AM_SCOPE
	ON AM_SCOPE.SCOPE_CMPNY_CODE = B04_11_IT_FIN_GL.B04_BSEG_BUKRS

	--Get vendor group description
	LEFT JOIN AM_T077Y
	ON AM_T077Y.T077Y_KTOKK = A_LFA1.LFA1_KTOKK AND
	   AM_T077Y.T077Y_SPRAS IN ('E', 'EN')

	--Get customer group description
	LEFT JOIN AM_T077X
	ON AM_T077X.T077X_KTOKD = A_KNA1.KNA1_KTOKD AND
	   AM_T077X.T077X_SPRAS IN ('E', 'EN')
	
	--Get transaction code desction
	LEFT JOIN A_TSTCT
	ON A_TSTCT.TSTCT_SPRSL IN ('E', 'EN') AND
	   A_TSTCT.TSTCT_TCODE = B04_11_IT_FIN_GL.B04_BKPF_TCODE

	--Get special g/l indicator description
	LEFT JOIN A_T074T
	ON A_T074T.T074T_SPRAS IN ('E', 'EN') AND
	   A_T074T.T074T_KOART = B04_11_IT_FIN_GL.B04_BSEG_KOART AND
	   A_T074T.T074T_SHBKZ = B04_11_IT_FIN_GL.B04_BSEG_UMSKZ




/*Step 6: Create PO blanket table.*/
	EXEC SP_REMOVE_TABLES 'B12_06_IT_PTP_PO_BLANKET'
	SELECT B09_13_IT_PTP_POS.*,
		   A_LFA1.LFA1_NAME1 AS B09_ZF_LFA1_NAME1
	INTO B12_06_IT_PTP_PO_BLANKET
	FROM B09_13_IT_PTP_POS
		LEFT JOIN A_LFA1
		ON B09_13_IT_PTP_POS.B09_EKKO_LIFNR = A_LFA1.LFA1_LIFNR
	WHERE B09_ZF_BLANKET_PO = 'Yes'

-- Step 7 Get the supplier banl relate to AP supplier


EXEC SP_DROPTABLE B12_07_RT_LFBK_AP_DETALS

		SELECT A_LFBK.*,
				LFA1_NAME1,
				CASE 
					WHEN LFBK_EBPP_BVSTATUS ='' THEN 'Can be Displayed/Used in Biller Direct, Used in Standard'
					WHEN LFBK_EBPP_BVSTATUS ='A' THEN 'Can be Displayed/Used in Biller Direct, Not Used in Standard'
					WHEN LFBK_EBPP_BVSTATUS ='B' THEN 'Can be Changed/Used in Biller Direct, Used in Standard'
					WHEN LFBK_EBPP_BVSTATUS ='C' THEN 'Can be Changed/Used in Biller Direct, Not Used in Standard'
					WHEN LFBK_EBPP_BVSTATUS ='D' THEN 'Can Only be Used in Standard'
				END AS ZF_LFBK_EBPP_BVSTATUS_DESC
		INTO B12_07_RT_LFBK_AP_DETALS
		FROM A_LFBK
		LEFT JOIN A_LFA1
			ON LFA1_LIFNR=LFBK_LIFNR
		WHERE EXISTS
			(
				SELECT TOP 1 1
					FROM B12_02_IT_PTP_AP
				WHERE B11_BSAIK_LIFNR=LFBK_LIFNR
			)


	EXEC SP_RENAME_FIELD 'B12_07_','B12_07_RT_LFBK_AP_DETALS'
	EXEC SP_RENAME_FIELD 'B12_04_', 'B12_04_IT_GRIR_SNAPSHOT'
	EXEC SP_UNNAME_FIELD 'B04_', 'B12_05_IT_GRIR_DOCUMENTS'
	EXEC SP_RENAME_FIELD 'B12_05_', 'B12_05_IT_GRIR_DOCUMENTS'

	EXEC SP_UNNAME_FIELD 'B09_', 'B12_06_IT_PTP_PO_BLANKET'
	EXEC SP_RENAME_FIELD 'B12_06_', 'B12_06_IT_PTP_PO_BLANKET'



/*Rename fields for Qlik*/
EXEC [SP_REPLACE_NAME_FIELD] 'T001_BUTXT', 'B04_GL_T001_BUTXT', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'TGSBT_GSBER', 'B04_GL_TGSBT_GSBER', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'TGSBT_GTEXT', 'B04_GL_TGSBT_GTEXT', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SKAT_TXT50', 'B04_GL_SKAT_TXT50', 'B12_01_IT_PTP_GL'
--EXEC [SP_REPLACE_NAME_FIELD] 'FSMC_ID', 'B04_FSMC_ID', 'B12_01_IT_PTP_GL'
--EXEC [SP_REPLACE_NAME_FIELD] 'FSMC_NAME', 'B04_FSMC_NAME', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SPCAT_SPEND_CAT_LEVEL_1', 'B04_GL_SPCAT_SPEND_CAT_LEVEL_1', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SPCAT_SPEND_CAT_LEVEL_2', 'B04_GL_SPCAT_SPEND_CAT_LEVEL_2', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SPCAT_SPEND_CAT_LEVEL_3', 'B04_GL_SPCAT_SPEND_CAT_LEVEL_3', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SPCAT_SPEND_CAT_LEVEL_4', 'B04_GL_SPCAT_SPEND_CAT_LEVEL_4', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SPCAT_SPEND_TYPE', 'B04_GL_SPCAT_SPEND_TYPE', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SCOPE_BUSINESS_DMN_L1', 'B04_GL_SCOPE_BUSINESS_DMN_L1', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'SCOPE_BUSINESS_DMN_L2', 'B04_GL_SCOPE_BUSINESS_DMN_L2', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'T003T_LTEXT', 'B04_GL_T003T_LTEXT', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'DD07T_DDTEXT', 'B04_GL_DD07T_DDTEXT', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'B11_ZF_FLAG_SUMMARY', 'B11_ZF_VENDOR_FLAG_SUMMARY', 'B12_01_IT_PTP_GL'
EXEC sp_RENAME_FIELD 'B12_', 'B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] '_B04_', '_GL_','B12_01_IT_PTP_GL'
EXEC [SP_REPLACE_NAME_FIELD] 'GL_GL', 'GL','B12_01_IT_PTP_GL'
EXEC SP_REMOVE_TABLES '%_TT_%'


/* log cube creation*/

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','B12_01_TT_PTP_GL',(SELECT COUNT(*) FROM B12_01_IT_PTP_GL) 

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','B12_02_TT_PTP_AP',(SELECT COUNT(*) FROM B12_02_IT_PTP_AP) 

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','B12_03_TT_PTP_PO',(SELECT COUNT(*) FROM B12_03_IT_PTP_PO) 


/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL
GO
