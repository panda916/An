USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
 
--ALTER PROC [dbo].[DV04_GL_DETAILS_TO_AR]
CREATE     PROC [dbo].[script_DV04_DIVASQLGL_VERSUS_DIVASQLAR]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN
 
 /*
    Title            :  DV04: Data Validation dashboard 
    Description      :  Compares the GL cube to the AR cube
       --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |      Who |  Description
    19-06-2018         HuyTran        Creation
	01-09-2018			NP			  Update
	23-03-2022			Thuan		  Remove MANDT field in join
*/

--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

DECLARE @YEAR1 INT				= (SELECT CAST(LEFT(GLOBALS_VALUE,4) AS INT) FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date1')
		,@YEAR2 INT				= (SELECT CAST(LEFT(GLOBALS_VALUE,4) AS INT) FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date2')



--Step 1/
-- Create table for send message back to TRIAL_BAL Tool

	EXEC sp_droptable 'DV00_RT_USER_FEEDBACK_MESSAGE'

	CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE          
     (old_name NVARCHAR(MAX), new_name NVARCHAR(MAX), _log NVARCHAR(MAX))

-- The following code can be put wherever we want and whenever we want to send a message back to the user
-- that has pressed Java Upload app button for running this script.

--SET @msg = '<Feedback message for user>' --print back status for users
--INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', @msg)


 
-- Step 2/ Get amount per month on GL table per GL account which contain only customer
EXEC SP_DROPTABLE 'DV04_01_TT_GL_GROUP'
		SELECT
            B04_BKPF_MANDT,
            B04_BSEG_BUKRS,
			B04_BSEG_GJAHR,
            B04_ZF_BKPF_GJAHR_MONAT,
            DBO.REMOVE_LEADING_ZEROES(B04_BSEG_BELNR) B04_BSEG_BELNR,
            B04_BSEG_BUZEI,
            DBO.REMOVE_LEADING_ZEROES(B04_BSEG_KUNNR) B04_BSEG_KUNNR,
			B04_BSEG_HKONT,
			B04_ZF_BSEG_SHKZG_DESC,
			SUM(B04_ZF_BSEG_DMBTR_DB) AS B04_ZF_BSEG_DMBTR_DB,
			SUM(B04_ZF_BSEG_DMBTR_CR) AS B04_ZF_BSEG_DMBTR_CR
              
			  
 
	INTO DV04_01_TT_GL_GROUP
      
    FROM B04_11_IT_FIN_GL
 
    WHERE B04_BSEG_KOART = 'D'
 
    GROUP BY
            B04_BKPF_MANDT,
            B04_BSEG_BUKRS,
			B04_BSEG_GJAHR,
            B04_ZF_BKPF_GJAHR_MONAT,
            B04_BSEG_BELNR,
            B04_BSEG_BUZEI,
			B04_BSEG_KUNNR,
			B04_BSEG_HKONT,
			[B04_ZF_BSEG_SHKZG_DESC]
			            
 
--Step 2/ Get amount per month on ar table per GL account
EXEC SP_DROPTABLE 'DV04_02_TT_AR_GROUP'
	SELECT
            B14_BSAID_MANDT,
			B14_BSAID_BUKRS,
            B14_BSAID_GJAHR,
            B14_ZF_GJAHR_MONAT,
            B14_BSAID_BELNR,
            B14_BSAID_BUZEI,
			B14_BSAID_HKONT,
			B14_BSAID_KUNNR,
			B14_BSAID_BSTAT,
			B14_ZF_BSAID_SHKZG_DESC,
            CASE
				WHEN B14_ZF_BSAID_SHKZG_DESC ='Debit' THEN SUM(B14_ZF_BSAID_DMBTR_COC) 
				ELSE 0
			END AS B14_ZF_BSAID_DMBTR_DB,
            CASE
				WHEN B14_ZF_BSAID_SHKZG_DESC ='Credit' THEN SUM(B14_ZF_BSAID_DMBTR_COC) 
				ELSE 0
			END AS B14_ZF_BSAID_DMBTR_CR
             
    INTO DV04_02_TT_AR_GROUP
 
    FROM B14_06_IT_ARE
	
	WHERE CAST(B14_BSAID_GJAHR AS INT) BETWEEN @YEAR1 AND @YEAR2
	
    GROUP BY
	   B14_BSAID_MANDT
      ,B14_BSAID_BUKRS
      ,B14_BSAID_GJAHR
      ,B14_ZF_GJAHR_MONAT
      ,B14_BSAID_BELNR
      ,B14_BSAID_BUZEI
	  ,B14_BSAID_HKONT
      ,B14_BSAID_KUNNR
	  ,B14_ZF_BSAID_SHKZG_DESC
	  ,B14_BSAID_BSTAT


      
--Step 3/ Comparing GL and AR so that we have all data which stored in GL or AR or in both
	EXEC SP_DROPTABLE 'DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR'
    SELECT
			 
			   B04_BSEG_BUKRS
			  ,B14_BSAID_BUKRS
			  ,B04_BSEG_GJAHR
			  ,B14_BSAID_GJAHR

			  ,B04_ZF_BKPF_GJAHR_MONAT
			  ,B14_ZF_GJAHR_MONAT


			  ,B04_BSEG_BELNR
			  ,B14_BSAID_BELNR

			  ,B04_BSEG_BUZEI
			  ,B14_BSAID_BUZEI
			  ,B14_BSAID_BSTAT

			  ,B04_BSEG_KUNNR
		      ,B14_BSAID_KUNNR

			  ,CASE 
			WHEN ISNULL(B04_BSEG_BELNR,'') <> '' AND 
				ISNULL(B14_BSAID_BELNR,'') = '' 
			THEN 'DOC IN GL NOT IN AR'
            WHEN ISNULL(B04_BSEG_BELNR,'') = '' AND 
				ISNULL(B14_BSAID_BELNR,'') <> '' 
			THEN 'DOC IN AR NOT IN GL'
            WHEN ISNULL(B04_BSEG_BELNR,'') <> '' AND 
			ISNULL(B14_BSAID_BELNR,'') <> ''
			THEN 'DOC IN GL AND AR'
			ELSE 
				'CASE NOT IDENTIFIED'
               
		END AS ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR 
 


			  ,B04_ZF_BSEG_DMBTR_DB
			  ,B14_ZF_BSAID_DMBTR_DB
			  

			 ,(ISNULL(B04_ZF_BSEG_DMBTR_DB, 0)) -  ABS((ISNULL(B14_ZF_BSAID_DMBTR_DB, 0))) AS ZF_DIVASQLGL_DB_MINUS_DIVASQLAR_DB

			  ,B04_ZF_BSEG_DMBTR_CR
			  ,B14_ZF_BSAID_DMBTR_CR
		  
		    ,(ISNULL(B04_ZF_BSEG_DMBTR_CR, 0)) + (ISNULL(B14_ZF_BSAID_DMBTR_CR, 0)) AS ZF_DIVASQLGL_CR_MINUS_DIVASQLAR_CR
 
		
    INTO DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR
 
    FROM DV04_01_TT_GL_GROUP	
 
    FULL OUTER JOIN DV04_02_TT_AR_GROUP ON
		DV04_01_TT_GL_GROUP.B04_BSEG_BUKRS = DV04_02_TT_AR_GROUP.B14_BSAID_BUKRS AND
		DV04_01_TT_GL_GROUP.B04_BSEG_GJAHR = DV04_02_TT_AR_GROUP.B14_BSAID_GJAHR AND
		DBO.REMOVE_LEADING_ZEROES(DV04_01_TT_GL_GROUP.B04_BSEG_BELNR) = DBO.REMOVE_LEADING_ZEROES(DV04_02_TT_AR_GROUP.B14_BSAID_BELNR) AND
		DV04_01_TT_GL_GROUP.B04_BSEG_BUZEI = DV04_02_TT_AR_GROUP.B14_BSAID_BUZEI AND  
		DV04_01_TT_GL_GROUP.B04_ZF_BSEG_SHKZG_DESC = DV04_02_TT_AR_GROUP.B14_ZF_BSAID_SHKZG_DESC


--Step 5/
--Split the comparison into two tables so that we can be able to filter them separately on the QLIK dashboard

-- Step 5.1: GL full table

	EXEC SP_DROPTABLE 'DV04_04_RT_FULL_DIVASQLGL'
 
	SELECT
		 *

		 ,B04_BSEG_BUKRS + '|' + B04_BSEG_GJAHR +  '|'  + B04_BSEG_KUNNR  + '|' +  B04_BSEG_BELNR + '|' + B04_BSEG_BUZEI  AS ZF_KEY_JOIN_GL
	INTO DV04_04_RT_FULL_DIVASQLGL
	FROM DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR
	WHERE B04_BSEG_BELNR IS NOT NULL
	

	-- Step 5.2: AR full table
	

	EXEC SP_DROPTABLE 'DV04_05_RT_FULL_DIVASQLAR'
 
	SELECT 
		*
		,B14_BSAID_BUKRS + '|' + B14_BSAID_GJAHR + '|'  +  B14_BSAID_KUNNR + '|' + B14_BSAID_BELNR   + '|' + B14_BSAID_BUZEI  AS ZF_KEY_JOIN_AR
	INTO DV04_05_RT_FULL_DIVASQLAR
	FROM DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR
	WHERE B14_BSAID_BELNR IS NOT NULL

 
-- Step 6/ Split the comparison into two discrepancy tables so that we can be able to filter them separately

	---- 6.1/ GL discrepancy table 

 	EXEC SP_DROPTABLE 'DV04_06_RT_DISC_DIVASQLGL'
 
	SELECT
		 *
		 ,B04_BSEG_BUKRS + '|' + B04_BSEG_GJAHR +  '|'  + B04_BSEG_KUNNR  + '|' +  B04_BSEG_BELNR + '|' + B04_BSEG_BUZEI  AS ZF_KEY_JOIN_GL
	INTO DV04_06_RT_DISC_DIVASQLGL
	FROM DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR
	WHERE 
	
	
	
		(ABS(ZF_DIVASQLGL_DB_MINUS_DIVASQLAR_DB)>10 OR
		ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'DOC IN GL NOT IN AR' 
		OR ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'Case not identified')

		AND NOT(
		ABS(ZF_DIVASQLGL_DB_MINUS_DIVASQLAR_DB)>10 AND
		ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'DOC IN AR NOT IN GL')

	---- 6.2/ AR discrepancy table 

	EXEC SP_DROPTABLE 'DV04_07_RT_DISC_DIVASQLAR'
	SELECT
		*
		,B14_BSAID_BUKRS + '|' + B14_BSAID_GJAHR + '|'  +  B14_BSAID_KUNNR + '|' + B14_BSAID_BELNR   + '|' + B14_BSAID_BUZEI  AS ZF_KEY_JOIN_AR
	INTO DV04_07_RT_DISC_DIVASQLAR
	FROM DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR
	WHERE 

		(ABS(ZF_DIVASQLGL_DB_MINUS_DIVASQLAR_DB)>10 OR
		ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'DOC IN AR NOT IN GL' 
		OR ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'Case not identified')

		AND NOT(
		ABS(ZF_DIVASQLGL_DB_MINUS_DIVASQLAR_DB)>10 AND
		ZF_CHECK_BELNR_IN_DIVASQLGL_AND_DIVASQLAR = 'DOC IN GL NOT IN AR')

 -- Step 7/ User feedback message 

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV04_DIVASQLGL_VERSUS_DIVASQLAR')


--Step 8/ Delete temporary tables
	EXEC SP_DROPTABLE 'DV04_01_TT_GL_GROUP'
	EXEC SP_DROPTABLE 'DV04_02_TT_AR_GROUP'


--Step 9/ Rename fields for QLIK
EXEC SP_RENAME_FIELD  'DV04A_' ,'DV04_03_RT_COMP_DIVASQLGL_DIVASQLAR'
EXEC SP_RENAME_FIELD 'DV04B_', 'DV04_04_RT_FULL_DIVASQLGL'
EXEC SP_RENAME_FIELD 'DV04C_', 'DV04_05_RT_FULL_DIVASQLAR'
EXEC SP_RENAME_FIELD 'DV04D_', 'DV04_06_RT_DISC_DIVASQLGL'
EXEC SP_RENAME_FIELD 'DV04E_', 'DV04_07_RT_DISC_DIVASQLAR'

	
-- Log cube creation


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV04_04_RT_FULL_DIVASQLGL',(SELECT COUNT(*) FROM DV04_04_RT_FULL_DIVASQLGL) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV04_05_RT_FULL_DIVASQLAR',(SELECT COUNT(*) FROM DV04_05_RT_FULL_DIVASQLAR)      
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV04_06_RT_DISC_DIVASQLGL',(SELECT COUNT(*) FROM DV04_06_RT_DISC_DIVASQLGL)  
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV04_07_RT_DISC_DIVASQLAR',(SELECT COUNT(*) FROM DV04_07_RT_DISC_DIVASQLAR)  

/* log end of procedure*/
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure finished',NULL,NULL


END


GO
