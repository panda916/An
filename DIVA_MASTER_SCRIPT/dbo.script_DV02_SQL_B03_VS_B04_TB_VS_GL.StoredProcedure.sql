USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE     PROCEDURE [dbo].[script_DV02_SQL_B03_VS_B04_TB_VS_GL]

WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN
 

/*
    Title            :  DV02: Data Validation dashboard 
    Description      :  Compares the Trial balance cube to the GL cube
       --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |      Who |  Description
    08-08-2017             Anh        Creation
	05-01-2018             CW         Update for GL versus BSEG/BKPF 
	                                  Update for comparison of net movements
*/

--ALTER database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

--Step 1/
-- ALTER table for send message back to TRIAL_BAL Tool

	EXEC sp_droptable 'DV00_RT_USER_FEEDBACK_MESSAGE'

	CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE          
     (old_name NVARCHAR(MAX), new_name NVARCHAR(MAX), _log NVARCHAR(MAX))

-- The following code can be put wherever we want and whenever we want to send a message back to the user
-- that has pressed Java Upload app button for running this script.

--SET @msg = '<Feedback message for user>' --print back status for users
--INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', @msg)

	-- Step 2/
	-- Calculate debit, credit and total movements per month on trial balance per GL account

	EXECUTE SP_DROPTABLE 'DV02_01_TT_TB_GROUP'
	

	SELECT 
		B03_T001_BUKRS
		,B03_TB_RYEAR
		,B03_TB_MONAT_DESC as B03_TB_MONAT
		,B03_TB_RACCT
		,SUM(B03_TB_HSL_DEBIT_MOV) AS B03_ZF_TB_HSL_DEBIT_MOV
		,SUM(B03_TB_HSL_CREDIT_MOV) AS B03_ZF_TB_HSL_CREDIT_MOV
		,SUM(B03_TB_HSL_DEBIT_MOV + B03_TB_HSL_CREDIT_MOV) AS B03_ZF_TB_HSL_TOT_MOV


	INTO DV02_01_TT_TB_GROUP

	FROM B03_03_IT_FIN_TB
	WHERE B03_TB_RLDNR = 
		CASE 
			WHEN db_name() LIKE ('%SOLA%') OR db_name() LIKE ('%GULF%') THEN '00'
			WHEN db_name() LIKE ('%RUSSIA%') OR db_name() LIKE ('%TURKEY%') THEN '0L'
		END
	AND (B03_TB_HSL_DEBIT_MOV <> 0 OR  B03_TB_HSL_CREDIT_MOV <> 0)

	GROUP BY
		 B03_SKB1_MANDT
		,B03_T001_BUKRS
		,B03_TB_RYEAR			
		,B03_TB_MONAT_DESC
		,B03_TB_RACCT
	
-- Step 3/
-- Calculate debit, credit and net movements on general ledger per account number

	EXECUTE SP_DROPTABLE 'DV02_02_TT_GL_GROUP'

	SELECT B04_BKPF_MANDT
		  ,B04_BSEG_BUKRS
		  ,B04_BSEG_GJAHR

		  ,B04_ZF_BKPF_MONAT_DESC AS B04_ZF_MONAT
		  ,B04_BSEG_HKONT
		  ,SUM(IIF(B04_BSEG_SHKZG = 'S', B04_ZF_BSEG_DMBTR_S, 0)) AS B04_ZF_BSEG_DMBTR_DB
		  ,SUM(IIF(B04_BSEG_SHKZG = 'H', B04_ZF_BSEG_DMBTR_S, 0)) AS B04_ZF_BSEG_DMBTR_CR
		  ,SUM(B04_ZF_BSEG_DMBTR_S) AS B04_ZF_BSEG_DMBTR_S

	INTO DV02_02_TT_GL_GROUP

	FROM B04_11_IT_FIN_GL
	--WHERE YEAR(B04_BSEG_AUGDT) = '2016'
	GROUP BY
		   B04_BKPF_MANDT
		  ,B04_BSEG_BUKRS
		  ,B04_BSEG_GJAHR
	      ,B04_ZF_BKPF_MONAT_DESC
		  ,B04_BSEG_HKONT


--Step 4/
-- Compare the trial balance net movements to the GL net movements 

	EXECUTE SP_DROPTABLE 'DV02_03_TT_COMP_TB_GL'

	SELECT B03_T001_BUKRS
			,B03_TB_RYEAR
			,B03_TB_MONAT
			,B03_TB_RACCT
			,ISNULL(B03_ZF_TB_HSL_DEBIT_MOV,0) AS B03_ZF_TB_HSL_DEBIT_MOV
			,ISNULL(B03_ZF_TB_HSL_CREDIT_MOV,0) AS B03_ZF_TB_HSL_CREDIT_MOV
			,ISNULL(B03_ZF_TB_HSL_TOT_MOV,0) AS B03_ZF_TB_HSL_TOT_MOV
			,B04_BKPF_MANDT
			,B04_BSEG_BUKRS
			,B04_BSEG_GJAHR
			,B04_ZF_MONAT
			,B04_BSEG_HKONT
			,ISNULL(B04_ZF_BSEG_DMBTR_DB,0) AS B04_ZF_BSEG_DMBTR_DB
			,ISNULL(B04_ZF_BSEG_DMBTR_CR,0) AS B04_ZF_BSEG_DMBTR_CR
			,ISNULL(B04_ZF_BSEG_DMBTR_S,0) AS B04_ZF_BSEG_DMBTR_S
			,ISNULL(B03_ZF_TB_HSL_DEBIT_MOV,0) - ISNULL(B04_ZF_BSEG_DMBTR_DB,0) AS ZF_TB_MINUS_GL_DEBIT	
			,ISNULL(B03_ZF_TB_HSL_CREDIT_MOV,0) - ISNULL(B04_ZF_BSEG_DMBTR_CR,0) AS ZF_TB_MINUS_GL_CREDIT	
			,ISNULL(B03_ZF_TB_HSL_TOT_MOV,0) - ISNULL(B04_ZF_BSEG_DMBTR_S,0) AS ZF_TB_MINUS_GL_NET	
			,CASE WHEN	ISNULL(B03_TB_RACCT ,'')	= '' AND
						ISNULL(B04_BSEG_HKONT ,'')	<> '' 
					THEN 'Account in GL not TB'
					WHEN	ISNULL(B03_TB_RACCT ,'')	<> '' AND
						ISNULL(B04_BSEG_HKONT,'') = '' 
					THEN 'Account in TB not GL'
				WHEN	ISNULL(B03_TB_RACCT, '')	<> '' AND
						ISNULL(B04_BSEG_HKONT, '')	<> ''
					THEN 'Account in GL and TB'
				ELSE	'Account null in GL and TB'
			END 																	AS ZF_CHECK_GL_ACCNT_PRESENT

	INTO	DV02_03_TT_COMP_TB_GL
	FROM	DV02_01_TT_TB_GROUP
			FULL OUTER JOIN DV02_02_TT_GL_GROUP ON
			B03_T001_BUKRS		   = B04_BSEG_BUKRS
			AND B03_TB_RYEAR	   = B04_BSEG_GJAHR
			AND	B03_TB_MONAT = B04_ZF_MONAT  
			AND B03_TB_RACCT	   = B04_BSEG_HKONT

--Step 5/
--Split the comparison into two tables so that we can be able to filter them separately

	EXEC SP_DROPTABLE 'DV02_04_RT_FULL_TB'

	SELECT	B03_T001_BUKRS
		   ,B03_TB_RYEAR
		   ,B03_TB_MONAT		   
		   ,B03_TB_RACCT
		   ,B03_ZF_TB_HSL_DEBIT_MOV
		   ,B03_ZF_TB_HSL_CREDIT_MOV		
		   ,B03_ZF_TB_HSL_TOT_MOV
	INTO	DV02_04_RT_FULL_TB
	FROM	DV02_03_TT_COMP_TB_GL
	WHERE	B03_TB_RACCT IS NOT NULL

	EXEC SP_DROPTABLE 'DV02_05_RT_FULL_GL'

	SELECT  B04_BKPF_MANDT
		   ,B04_BSEG_BUKRS
		   ,B04_BSEG_GJAHR
		   ,B04_ZF_MONAT
		   ,B04_BSEG_HKONT
		   ,B04_ZF_BSEG_DMBTR_DB
		   ,B04_ZF_BSEG_DMBTR_CR
		   ,B04_ZF_BSEG_DMBTR_S
	INTO	DV02_05_RT_FULL_GL

	FROM	DV02_03_TT_COMP_TB_GL
	WHERE	B04_BSEG_HKONT IS NOT NULL


--Step 6/
--Split the comparison into two discrepancy tables so that we can be able to filter them separately

	EXEC SP_DROPTABLE 'DV02_06_RT_DISC_TB'

	SELECT	B03_T001_BUKRS
		   ,B03_TB_RYEAR
		   ,B03_TB_MONAT		   
		   ,B03_TB_RACCT
		   ,B03_ZF_TB_HSL_DEBIT_MOV
		   ,B03_ZF_TB_HSL_CREDIT_MOV		
		   ,B03_ZF_TB_HSL_TOT_MOV
	INTO	DV02_06_RT_DISC_TB
	FROM	DV02_03_TT_COMP_TB_GL
	WHERE	ABS(ZF_TB_MINUS_GL_NET) > 10 
			
			AND ISNULL(B03_T001_BUKRS, '') <> ''



	EXEC SP_DROPTABLE 'DV02_07_RT_DISC_GL'

	SELECT  B04_BSEG_BUKRS
		   ,B04_BSEG_GJAHR
		   ,B04_ZF_MONAT
		   ,B04_BSEG_HKONT
		   ,B04_ZF_BSEG_DMBTR_S
		   ,B04_ZF_BSEG_DMBTR_DB
		   ,B04_ZF_BSEG_DMBTR_CR
	INTO	DV02_07_RT_DISC_GL
	FROM	DV02_03_TT_COMP_TB_GL
	WHERE	
			ABS(ZF_TB_MINUS_GL_NET) > 10 
			 
		    AND ISNULL(B04_BKPF_MANDT, '') <> ''

-- Step 6/
-- Rename fields for QLIK


EXEC SP_RENAME_FIELD 'DV02A_', 'DV02_04_RT_FULL_TB'
EXEC SP_RENAME_FIELD 'DV02B_', 'DV02_05_RT_FULL_GL'
EXEC SP_RENAME_FIELD 'DV02C_', 'DV02_06_RT_DISC_TB'
EXEC SP_RENAME_FIELD 'DV02D_', 'DV02_07_RT_DISC_GL'



--Step 7/
--Delete temporary tables
	
	EXEC SP_DROPTABLE 'DV02_01_TT_TB_GROUP'
	EXEC SP_DROPTABLE 'DV02_02_TT_GL_GROUP'
	EXEC SP_DROPTABLE 'DV02_03_TT_COMP_TB_GL'


--Send Finish Message for the tool

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV02_TRIAL_BAL_JE_DOC_TYPE_GL')

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','DV02_04_RT_FULL_TB',(SELECT COUNT(*) FROM DV02_04_RT_FULL_TB) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','DV02_05_RT_FULL_GL',(SELECT COUNT(*) FROM DV02_05_RT_FULL_GL)      
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','DV02_06_RT_DISC_TB',(SELECT COUNT(*) FROM DV02_06_RT_DISC_TB)  
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','DV02_07_RT_DISC_GL',(SELECT COUNT(*) FROM DV02_07_RT_DISC_GL)  

/* log end of procedure*/
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL
END 


GO
