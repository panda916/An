USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE       PROCEDURE [dbo].[script_B27_PTP_GLOBAL_CUBES]
AS
--DYNAMIC_SCRIPT_START
/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('_DatabaseLogTable', 'U') IS NULL BEGIN CREATE TABLE [dbo].[_DatabaseLogTable] ([Database] nvarchar(max) NULL,[Object] nvarchar(max) NULL,[Object Type] nvarchar(max) NULL,[User] nvarchar(max) NULL,[Date] date NULL,[Time] time NULL,[Description] nvarchar(max) NULL,[Table] nvarchar(max),[Rows] int) END

--Log start of procedure
INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE 	 
			 @currency nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'currency')
			,@date1 nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'date1')
			,@date2 nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'date2')
			,@downloaddate nvarchar(max)		= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'downloaddate')
			,@exchangeratetype nvarchar(max)	= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'exchangeratetype')
			,@language1 nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'language1')
			,@language2 nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'language2')
			,@year nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'year')
			,@id nvarchar(max)					= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'id')
			,@ZV_LIMIT nvarchar(max)		    = (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'ZV_LIMIT')
			,@errormsg NVARCHAR(MAX)
			
DECLARE @dateformat varchar(3)
SET @dateformat   = (SELECT dbo.get_param('dateformat'))
SET DATEFORMAT @dateformat;

--Step 1 Create global main cube
--Contains PR,PO,INV,PAY


--EXEC SP_DROPTABLE B27_01_IT_PTP_GLOBAL_TABLE
EXEC SP_DROPTABLE B27_01_01_TT_PR_PO_GR_INCOMING
SELECT DISTINCT
--IDENTITY(INT,1,1) AS ZF_DOCUMENT_FLOW_KEY,-- Document flow,
CONCAT(DBO.TRIM(B25_EBAN_BANFN),'-',(B25_EBAN_BNFPO)) AS ZF_EBAN_BANFN_BNFPO,  --Purchase request key
B25_EBAN_ERNAM AS EBAN_ERNAM,--Purchase request username
B25_V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_EBAN,--PR name of the user
B25_EBAN_BADAT AS EBAN_BADAT,--Purchase request date
B25_EBAN_LIFNR AS EBAN_LIFNR,--Purchase request supplier
B25_LFA1_ERNAM AS LFA1_ERNAM_EBAN,--User who create supplier,
B25_T161T_BATXT AS EBAN_T161T_BATXT,--PR document type
0 AS ZF_EBAN_AMOUNT,
B09_SS02_EKPO_BUKRS AS EBAN_EKPO_BUKRS,--Purchase order company code
CONCAT(DBO.TRIM(B09_SS02_EKPO_EBELN),'-',
DBO.TRIM(B09_SS02_EKPO_EBELP)) AS ZF_EKPO_EBELN_EBELP,--Purchase order key
B09_SS02_EKPO_EBELN AS EKPO_EBELN,--Purchase order number
B09_SS02_EKKO_ERNAM AS EKKO_ERNAM,--Purchase order username
B09_SS02_ZF_V_USERNAME_NAME_TEXT AS ZF_V_USERNAME_NAME_TEXT_EKKO,--PO name of the user
B09_SS02_EKKO_AEDAT AS EKKO_AEDAT,--Purchase order document date
B09_SS02_EKKO_LIFNR AS EKKO_LIFNR,--Purchase order supplier
B09_SS02_LFA1_ERNAM AS LFA1_ERNAM_EKKO,--User who create supplier
B09_SS02_EKPO_MATKL AS EKPO_MATKL,--Purchase order Material Group,
B09_SS02_ZF_PO_CATEGORY AS ZF_PO_CATEGORY , --PO document type
B09_SS02_ZF_EKPO_NETWR_COC AS ZF_EKPO_NETWR_COC,
B09_SS02_ZF_EKPO_NETWR_CUC AS ZF_EKPO_NETWR_CUC,
B09_SS02_EKPO_BUKRS AS EKPO_BUKRS,--Company code
CONCAT(DBO.TRIM(B26_02_MSEG_MBLNR),'-',
DBO.TRIM(B26_02_MSEG_MJAHR),'-',
DBO.TRIM(B26_02_MSEG_ZEILE)) AS ZF_MSEG_EBELN_EBELP_BUKRS,--Good receipt key
B26_02_MKPF_USNAM AS MKPF_USNAM,--Good receipt user name
B26_02_MKPF_BLDAT AS MKPF_BLDAT,--Good receipt date
B26_02_MSEG_LIFNR AS MSEG_LIFNR,--Good receipt supplier
B26_02_LFA1_ERNAM AS LFA1_ERNAM_MSEG,--User who create supplier
B26_02_V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_MSEG,--GR name of the user
B26_02_ZF_MSEG_DMBTR_SIGNED AS ZF_MSEG_DMBTR_SIGNED,
B26_02_ZF_MSEG_DMBTR_SIGNED_CUC AS ZF_MSEG_DMBTR_SIGNED_CUC,
B26_02_MSEG_BUKRS AS MSEG_BUKRS,
B26_02_T003T_LTEXT AS MKPF_T003T_LTEXT,
CONCAT(DBO.TRIM(RSEG_BELNR),'-',
DBO.TRIM(RSEG_GJAHR),'-',
DBO.TRIM(RSEG_BUZEI)) AS ZF_RSEG_BELNR_GJAHR_BUZEI,--Incoming invoice key
RSEG_BELNR,--	Accounting Document Number
RSEG_GJAHR,-- Fiscal year
RSEG_BUKRS,--Company CODE
RBKP_LIFNR,--Supplier,
RBKP_USNAM,--User name
RBKP_BLDAT,--Document date
V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_RBKP,
T003T_LTEXT AS RBKP_T003T_LTEXT,
CONVERT(MONEY,RSEG_WRBTR * COALESCE(TCURX_FACTOR,1) 
* iif(RSEG_SHKZG = 'H', -1, 1)) AS ZF_RSEG_WRBTR_S,
CONVERT(MONEY,RSEG_WRBTR * COALESCE(ZF_EXCHNG_RATIO,1) 
* COALESCE(TCURX_FACTOR,1) * iif(RSEG_SHKZG = 'H', -1, 1))	AS ZF_RSEG_WRBTR_S_CUC,
RSEG_BUKRS_MAPPING
INTO B27_01_01_TT_PR_PO_GR_INCOMING
FROM B25_01_IT_PURCHASE_REQUEST
--Join PR table with PO table, base on EBELN an EBELP
FULL OUTER JOIN B09_SS02_01_IT_PTP_POS
ON B25_EBAN_EBELN=B09_SS02_EKPO_EBELN AND B25_EBAN_EBELP=B09_SS02_EKPO_EBELP

--Join PR_PO table with GR table, base on EBELN an EBELP

FULL OUTER JOIN B26_02_IT_GR_CUBE
 ON B26_02_MSEG_EBELN=B09_SS02_EKPO_EBELN
AND B26_02_MSEG_EBELP=B09_SS02_EKPO_EBELP
AND B26_02_MSEG_BUKRS_MAPPING=B09_SS02_EKPO_BUKRS_MAPPING
--Join PR_PO_GR_INV with Payment table,base on AUGBL and AUGDT

FULL OUTER JOIN 
(SELECT A_RSEG.*,
		A_RBKP.*,
		V_USERNAME_NAME_TEXT, 
		T003T_LTEXT,
		RBKP_KURSF * 
		COALESCE(TCURF_COC.TCURF_TFACT,1)/COALESCE(TCURF_COC.TCURF_FFACT,1) 
		* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) 
		* COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) 
		AS ZF_EXCHNG_RATIO,
		TCURX_FACTOR,
		BUKRS_MAPPING AS RSEG_BUKRS_MAPPING
		FROM A_RSEG
JOIN A_RBKP ON RBKP_BELNR=RSEG_BELNR AND RBKP_GJAHR=RSEG_GJAHR
LEFT JOIN B00_TCURX AS TCURX_DOC  
	ON RBKP_WAERS = TCURX_DOC.TCURX_CURRKEY

LEFT JOIN A_T001 
ON RBKP_BUKRS = A_T001.T001_BUKRS 

-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= RBKP_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= RBKP_BUDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 

-- Add currency factor from document currency to local currency

LEFT JOIN B00_IT_TCURF TCURF_COC
ON RBKP_WAERS = TCURF_COC.TCURF_FCURR
AND TCURF_COC.TCURF_TCURR  = T001_WAERS  
AND TCURF_COC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE RBKP_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = T001_WAERS  AND
			B00_IT_TCURF.TCURF_GDATU <= RBKP_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

LEFT JOIN A_V_USERNAME 
	ON RBKP_USNAM=V_USERNAME_BNAME
LEFT JOIN A_T003T 
	ON RBKP_BLART=T003T_BLART
JOIN AM_COMPANY_CODE ON RSEG_BUKRS=COMPANY_CODE 
			)AS A
ON A.RSEG_EBELN=
	CASE 
		WHEN B09_SS02_EKPO_EBELN IS NOT NULL THEN B09_SS02_EKPO_EBELN ELSE B26_02_MSEG_EBELN
	END 
AND A.RSEG_EBELP=
	CASE 
		WHEN B09_SS02_EKPO_EBELP IS NOT NULL THEN B09_SS02_EKPO_EBELP ELSE B26_02_MSEG_EBELP
	END 
AND A.RSEG_BUKRS_MAPPING=
	CASE 
		WHEN B09_SS02_EKPO_BUKRS_MAPPING IS NOT NULL THEN B09_SS02_EKPO_BUKRS_MAPPING ELSE B26_02_MSEG_BUKRS_MAPPING
	END 

--Step 2 Link Invoice with RSEG, only get the lines that can link only

EXEC SP_DROPTABLE B27_01_02_TT_INCOMING_INV

SELECT  DISTINCT B27_01_01_TT_PR_PO_GR_INCOMING.*,
CONCAT( DBO.TRIM(B.B04_GL_ACDOCA_RBUKRS),'-',
		DBO.TRIM(B.B04_GL_ACDOCA_BELNR),'-',
		DBO.TRIM(B.B04_GL_ACDOCA_GJAHR),'-',
		dbo.TRIM(B.B04_GL_ACDOCA_BUZEI)) AS ZF_ACDOCA_BUKRS_GJAHR_BELNR_BUZEI,--Invoice key
B.B04_GL_ACDOCA_RBUKRS AS ACDOCA_BUKRS_INV,--Invoice Company code
B.B04_GL_ACDOCA_GJAHR AS ACDOCA_GJAHR_INV,-- Invoice Fiscal year
B.B04_GL_ACDOCA_BELNR AS ACDOCA_BELNR_INV,--Invoice Accounting Document Number
B.B04_GL_ACDOCA_USNAM AS BKPF_USNAM_INV,--Invoice username
B.ACDOCA_V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_INV,
B.B04_GL_ACDOCA_BLDAT AS ACDOCA_BLDAT_INV,--Invoice document date
B.B04_GL_ACDOCA_LIFNR AS ACDOCA_LIFNR_INV,--Invoice supplier
B.ACDOCA_LFA1_ERNAM AS LFA1_ERNAM_INV,--User who create supplier
B.B04_GL_ZF_ACDOCA_HSL_S AS ZF_ACDOCA_HSL_S_INV,
B.B04_GL_ZF_ACDOCA_HSL_S_CUC AS ZF_ACDOCA_HSL_S_CUC_INV, 
B.B04_GL_ZF_ACDOCA_KSL_S AS ZF_ACDOCA_KSL_S_INV,
B.B04_GL_ZF_ACDOCA_OSL_S AS ZF_ACDOCA_OSL_S_INV,
B.ACDOCA_T003T_LTEXT AS B11B_SS02_T003T_LTEXT_INV,
B04_GL_ACDOCA_AUGBL,
B04_GL_ACDOCA_AUGDT,
B04_GL_ACDOCA_BUKRS_MAPPING
INTO B27_01_02_TT_INCOMING_INV
FROM B27_01_01_TT_PR_PO_GR_INCOMING
--Join PR_PO_GR_RSEG with Invoice table
FULL OUTER JOIN B27A_03_TT_ACDOCA_INVOICE_ADD_PO_NUM AS B
ON 	
    B.B04_GL_ZF_ACDOCA_AWKEY_DOC_NUM=RSEG_BELNR 
	AND B.B04_GL_ZF_ACDOCA_AWKEY_YEAR=RSEG_GJAHR
	AND B.B04_GL_ACDOCA_BUKRS_MAPPING=RSEG_BUKRS_MAPPING

--Link the Invoice base on PO, only get the lines where can not link by PO

EXEC SP_DROPTABLE B27_01_03_TT_INV_PO

SELECT DISTINCT B27_01_01_TT_PR_PO_GR_INCOMING.*,
CONCAT( DBO.TRIM(B.B04_GL_ACDOCA_RBUKRS),'-',
		DBO.TRIM(B.B04_GL_ACDOCA_BELNR),'-',
		DBO.TRIM(B.B04_GL_ACDOCA_GJAHR),'-',
		dbo.TRIM(B.B04_GL_ACDOCA_BUZEI)) AS ZF_ACDOCA_BUKRS_GJAHR_BELNR_BUZEI,--Invoice key
B.B04_GL_ACDOCA_RBUKRS AS ACDOCA_BUKRS_INV,--Invoice Company code
B.B04_GL_ACDOCA_GJAHR AS ACDOCA_GJAHR_INV,-- Invoice Fiscal year
B.B04_GL_ACDOCA_BELNR AS ACDOCA_BELNR_INV,--Invoice Accounting Document Number
B.B04_GL_ACDOCA_USNAM AS BKPF_USNAM_INV,--Invoice username
B.ACDOCA_V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_INV,
B.B04_GL_ACDOCA_BLDAT AS ACDOCA_BLDAT_INV,--Invoice document date
B.B04_GL_ACDOCA_LIFNR AS ACDOCA_LIFNR_INV,--Invoice supplier
B.ACDOCA_LFA1_ERNAM AS LFA1_ERNAM_INV,--User who create supplier
B.B04_GL_ZF_ACDOCA_HSL_S AS ZF_ACDOCA_HSL_S_INV,
B.B04_GL_ZF_ACDOCA_HSL_S_CUC AS ZF_ACDOCA_HSL_S_CUC_INV, 
B.B04_GL_ZF_ACDOCA_KSL_S AS ZF_ACDOCA_KSL_S_INV,
B.B04_GL_ZF_ACDOCA_OSL_S AS ZF_ACDOCA_OSL_S_INV,
B.ACDOCA_T003T_LTEXT AS B11B_SS02_T003T_LTEXT_INV,
B04_GL_ACDOCA_AUGBL,
B04_GL_ACDOCA_AUGDT,
B04_GL_ACDOCA_BUKRS_MAPPING
INTO B27_01_03_TT_INV_PO
FROM B27_01_01_TT_PR_PO_GR_INCOMING
--Join INV with PO with Invoice table
FULL OUTER JOIN B27A_03_TT_ACDOCA_INVOICE_ADD_PO_NUM AS B
ON 
ZF_EKPO_EBELN_EBELP=CONCAT(B.B04_GL_ACDOCA_EBELN,'-',B.B04_GL_ACDOCA_EBELP)
AND ZF_EKPO_EBELN_EBELP<>'-'

--Step 5
-- Append Invoice- incoming 
-- Invoice PO

EXEC SP_DROPTABLE B27_01_05_TT_PO_GR_INCO_INV

SELECT DISTINCT *
INTO B27_01_05_TT_PO_GR_INCO_INV
FROM
(
	SELECT *
	FROM B27_01_02_TT_INCOMING_INV
	UNION ALL
	SELECT * 
	FROM B27_01_03_TT_INV_PO
)
AS A

--Step 6 Add to invoice payment
EXEC SP_DROPTABLE B27_01_IT_PTP_GLOBAL_TABLE

SELECT 
IDENTITY(INT,1,1) AS ZF_DOCUMENT_FLOW_KEY,-- Document flow,
B27_01_05_TT_PO_GR_INCO_INV.*,
CONCAT( DBO.TRIM(C.B11B_SS02_05_ACDOCA_RBUKRS),'-',
		DBO.TRIM(C.B11B_SS02_05_ACDOCA_GJAHR),'-',
		DBO.TRIM(C.B11B_SS02_05_ACDOCA_BELNR)) AS ZF_ACDOCA_BUKRS_GJAHR_BELNR_BUZEI_PAY,--Payment key
C.B11B_SS02_05_ACDOCA_RBUKRS AS ACDOCA_BUKRS_PAY,--Payment Company code
C.B11B_SS02_05_ACDOCA_GJAHR AS ACDOCA_GJAHR_PAY,--Payment Fiscal year
C.B11B_SS02_05_ACDOCA_BELNR AS ACDOCA_BELNR_PAY,--Payment Accounting Document Number
C.B11B_SS02_05_ACDOCA_USNAM AS BKPF_USNAM_PAY,--Payment username
C.B11B_SS02_05_V_USERNAME_NAME_TEXT AS V_USERNAME_NAME_TEXT_PAY,
C.B11B_SS02_05_ACDOCA_BLDAT AS ACDOCA_BLDAT_PAY,--Payment document date
C.B11B_SS02_05_ACDOCA_LIFNR AS ACDOCA_LIFNR_PAY,--Payment supplier
C.B11B_SS02_05_LFA1_ERNAM AS LFA1_ERNAM_PAY,--User who create supplier
C.B11B_SS02_05_ZF_ACDOCA_HSL_S AS ZF_ACDOCA_HSL_S_PAY,
C.B11B_SS02_05_ZF_ACDOCA_KSL_S AS ZF_ACDOCA_KSL_S_PAY,
C.B11B_SS02_05_ZF_ACDOCA_OSL_S AS ZF_ACDOCA_OSL_PAY,
C.B11B_SS02_05_ZF_ACDOCA_HSL_S_CUC AS ZF_ACDOCA_HSL_S_CUC_PAY,
C.B11B_SS02_05_T003T_LTEXT AS B11B_SS02_T003T_LTEXT_PAY,
C.B11B_SS02_05_LFBK_BANKN AS LFBK_BANKN_PAY,
C.B11B_SS02_05_REGUH_ZBNKN AS REGUH_ZBNKN_PAY
-- Join PR_PO_GR_INV with Payment table,base on AUGBL and AUGDT
INTO B27_01_IT_PTP_GLOBAL_TABLE
FROM B27_01_05_TT_PO_GR_INCO_INV
FULL OUTER JOIN B11_SS02_05_IT_PTP_APA_PAY_GROUP AS C
	ON B27_01_05_TT_PO_GR_INCO_INV.B04_GL_ACDOCA_AUGBL =  C.B11B_SS02_05_ACDOCA_AUGBL 
	AND B27_01_05_TT_PO_GR_INCO_INV.B04_GL_ACDOCA_AUGDT=  C.B11B_SS02_05_ACDOCA_AUGDT 
	AND B27_01_05_TT_PO_GR_INCO_INV.B04_GL_ACDOCA_BUKRS_MAPPING= C.B11B_SS02_05_ACDOCA_BUKRS_MAPPING
	AND (B27_01_05_TT_PO_GR_INCO_INV.B04_GL_ACDOCA_AUGBL <> '' AND  C.B11B_SS02_05_ACDOCA_AUGBL <> '')




GO
