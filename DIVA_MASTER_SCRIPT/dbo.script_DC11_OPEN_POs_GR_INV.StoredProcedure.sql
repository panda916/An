USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[script_DC11_OPEN_POs_GR_INV]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
/* Initiate the log */ 
----Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END
 
--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
 
/* Initialize parameters from globals table */
 
     DECLARE  
                      @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
                     ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
                     ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
                     ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
                     ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
                     ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
                     ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
                     ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
                     ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
                     ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
                     ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
					 ,@ZV_SAME_QUARTER_BY_BLDAT NVARCHAR(MAX) = ISNULL((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_SAME_QUARTER_BY_BLDAT'), '')

--Step 1/ Compare values (USD) between table B21_05_IT_EKBE_EKPO_INFO_NEW (use TCURR and TCURF) and table B21_05_IT_EKBE_EKPO_INFO (use AM_EXCHNG)
EXEC SP_DROPTABLE 	'DC11_01_IT_EKBE_EKPO_INFO' 

SELECT 
	A.B21_05_EKBE_EBELN,
	A.B21_05_EKBE_EBELP,
	A.B21_05_EKBE_ZEKKN,
	A.B21_05_EKBE_VGABE,
	A.B21_05_EKBE_GJAHR,
	A.B21_05_EKBE_BELNR,
	A.B21_05_EKBE_BUZEI,  
	A_T001.T001_WAERS,
	MAX(A.B21_05_EKBE_BUDAT) AS B21_05_EKBE_BUDAT,
	SUM(B.B21_05_ZF_EKBE_WRBTR_S) AS B21_05_ZF_EKBE_WRBTR_S,
	SUM(B.B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WBRTR_S_CUC_OLD,
	SUM(A.B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WBRTR_S_CUC_NEW,
	MAX(COALESCE(AM_EXCHNG.EXCHNG_RATIO,1)) AS EXCH_RATE_OLD,
	MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS EXCH_RATE_NEW
INTO DC11_01_IT_EKBE_EKPO_INFO
FROM 
(
SELECT 
	B21_05_EKBE_EBELN,
	B21_05_EKBE_EBELP,
	B21_05_EKBE_ZEKKN,
	B21_05_EKBE_VGABE,
	B21_05_EKBE_GJAHR,
	B21_05_EKBE_BELNR,
	B21_05_EKBE_BUZEI,
	MAX(B21_05_EKBE_WAERS) AS B21_05_EKBE_WAERS,
	MAX(B21_05_EKBE_BUDAT) AS B21_05_EKBE_BUDAT,
	SUM(B21_05_ZF_EKBE_WRBTR_S) AS B21_05_ZF_EKBE_WRBTR_S,
	SUM(B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WBRTR_S_CUC
FROM B21_05_IT_EKBE_EKPO_INFO_NEW
WHERE B21_05_EKBE_SHKZG = 'S'
GROUP BY B21_05_EKBE_EBELN,
	B21_05_EKBE_EBELP,
	B21_05_EKBE_ZEKKN,
	B21_05_EKBE_VGABE,
	B21_05_EKBE_GJAHR,
	B21_05_EKBE_BELNR,
	B21_05_EKBE_BUZEI
) A

INNER JOIN 
(
SELECT 
	B21_05_EKBE_EBELN,
	B21_05_EKBE_EBELP,
	B21_05_EKBE_ZEKKN,
	B21_05_EKBE_VGABE,
	B21_05_EKBE_GJAHR,
	B21_05_EKBE_BELNR,
	B21_05_EKBE_BUZEI,
	MAX(B21_05_EKBE_WAERS) AS B21_05_EKBE_WAERS,
	MAX(B21_05_EKBE_BUDAT) AS B21_05_EKBE_BUDAT,
	SUM(B21_05_ZF_EKBE_WRBTR_S) AS B21_05_ZF_EKBE_WRBTR_S,
	SUM(B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WBRTR_S_CUC
FROM B21_05_IT_EKBE_EKPO_INFO
WHERE B21_05_EKBE_SHKZG = 'S'
GROUP BY B21_05_EKBE_EBELN,
	B21_05_EKBE_EBELP,
	B21_05_EKBE_ZEKKN,
	B21_05_EKBE_VGABE,
	B21_05_EKBE_GJAHR,
	B21_05_EKBE_BELNR,
	B21_05_EKBE_BUZEI
)B
	ON A.B21_05_EKBE_EBELN = B.B21_05_EKBE_EBELN
	AND A.B21_05_EKBE_BELNR = B.B21_05_EKBE_BELNR
	AND A.B21_05_EKBE_GJAHR = B.B21_05_EKBE_GJAHR
	AND A.B21_05_EKBE_BUZEI = B.B21_05_EKBE_BUZEI
	AND A.B21_05_EKBE_VGABE = B.B21_05_EKBE_VGABE
	AND A.B21_05_EKBE_ZEKKN = B.B21_05_EKBE_ZEKKN
	AND A.B21_05_EKBE_EBELP = B.B21_05_EKBE_EBELP
	AND A.B21_05_EKBE_BUZEI = B.B21_05_EKBE_BUZEI

LEFT JOIN A_EKPO 
	ON A.B21_05_EKBE_EBELN = A_EKPO.EKPO_EBELN
	AND A.B21_05_EKBE_EBELP = A_EKPO.EKPO_EBELP
LEFT JOIN A_T001
	ON  A_EKPO.EKPO_BUKRS = A_T001.T001_BUKRS	   
			
-- Exchange rates for currency conversion: Document currency to custom currency
LEFT JOIN AM_EXCHNG
ON  AM_EXCHNG.EXCHNG_FROM = A.B21_05_EKBE_WAERS AND
	AM_EXCHNG.EXCHNG_TO = (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')

-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B21_05_EKBE_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)
-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A.B21_05_EKBE_BUDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 

-- Add currency factor from document currency to local currency

LEFT JOIN B00_IT_TCURF TCURF_COC
ON A.B21_05_EKBE_WAERS = TCURF_COC.TCURF_FCURR
AND TCURF_COC.TCURF_TCURR  = A_T001.T001_WAERS  
AND TCURF_COC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A.B21_05_EKBE_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = A_T001.T001_WAERS  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B21_05_EKBE_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

-- Add currency conversion factors for company code currency
		LEFT JOIN B00_TCURX TCURX_CC 
		ON 
	       A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY 
-- Add currency conversion factor for document currency
		LEFT JOIN B00_TCURX TCURX_DOC
		ON 
		   A.B21_05_EKBE_WAERS = TCURX_DOC.TCURX_CURRKEY


GROUP BY 	A.B21_05_EKBE_EBELN,
	A.B21_05_EKBE_EBELP,
	A.B21_05_EKBE_ZEKKN,
	A.B21_05_EKBE_VGABE,
	A.B21_05_EKBE_GJAHR,
	A.B21_05_EKBE_BELNR,
	A.B21_05_EKBE_BUZEI,
	A_T001.T001_WAERS



EXEC SP_UNNAME_FIELD 'B21_05_',DC11_01_IT_EKBE_EKPO_INFO
EXEC SP_RENAME_FIELD 'DC11_01_',DC11_01_IT_EKBE_EKPO_INFO

GO
