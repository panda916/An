USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE     PROCEDURE [dbo].[script_B20_SOD_OTC_041023]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN
	-- =============================================
	-- Author:		vinh.le@aufinia.com
	-- Create date: June 1, 2021
	-- Description:	Make master script for SOD OTC
	-- 23-03-2022	 Thuan	 Remove MANDT field in join
	-- =============================================
	/* Initialize parameters from globals table */
    DECLARE  
		@CURRENCY NVARCHAR(3)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
		,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
		,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
		,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
		,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
		,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
		,@LANGUAGE1 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
		,@LANGUAGE2 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
		,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
		,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
		,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')

	SET ROWCOUNT @LIMIT_RECORDS
	EXEC SP_REMOVE_TABLES 'B20_%'
	/*
		Step 0: Create some information tables for OTC flows
	*/
		--Create dictionary table for VBTYP value
		EXEC SP_REMOVE_TABLES 'B00_DD07T_VBTYP'
		SELECT DD07T_DOMVALUE_L, DD07T_DDTEXT, DD07T_VALPOS
		INTO B00_DD07T_VBTYP
		FROM A_DD07T
		WHERE DD07T_DDLANGUAGE IN ('EN', 'E') AND DD07T_DOMNAME = 'VBTYP' AND DD07T_DOMVALUE_L <> ''
		ORDER BY DD07T_VALPOS


		--Create dictionary table for XAUTO value
		EXEC SP_REMOVE_TABLES 'B00_DD07T_MB_XAUTO'
		SELECT DD07T_DOMVALUE_L, DD07T_DDTEXT, DD07T_VALPOS
		INTO B00_DD07T_MB_XAUTO
		FROM A_DD07T
		WHERE DD07T_DDLANGUAGE IN ('EN', 'E') AND DD07T_DOMNAME = 'MB_XAUTO' AND DD07T_DOMVALUE_L <> ''
		ORDER BY DD07T_VALPOS

		--Create dictionary table for FKTYP (Billing type) value
		EXEC SP_REMOVE_TABLES 'B00_DD07T_FKTYP'
		SELECT DD07T_DOMVALUE_L, DD07T_DDTEXT, DD07T_VALPOS
		INTO B00_DD07T_FKTYP
		FROM A_DD07T
		WHERE DD07T_DDLANGUAGE IN ('EN', 'E') AND DD07T_DOMNAME = 'FKTYP' AND DD07T_DOMVALUE_L <> ''
		ORDER BY DD07T_VALPOS

		--Create dictionary table for BSTAT value
		EXEC SP_REMOVE_TABLES 'B00_DD07T_BSTAT'
		SELECT DD07T_DOMVALUE_L, DD07T_DDTEXT, DD07T_VALPOS
		INTO B00_DD07T_BSTAT
		FROM A_DD07T
		WHERE DD07T_DDLANGUAGE IN ('EN', 'E') AND DD07T_DOMNAME = 'BSTAT'
		ORDER BY DD07T_VALPOS

		--Create a cude store all relationship between company code and sale organiztion, to filter the VBAK/VBAP tables because this table do not have company code
		EXEC SP_REMOVE_TABLES 'B00_TVKO'
		SELECT TVKO_VKORG
		INTO B00_TVKO
		FROM A_TVKO
		WHERE EXISTS(SELECT TOP 1 1 FROM AM_SCOPE WHERE SCOPE_CMPNY_CODE = TVKO_BUKRS)	


	/*
		Step 1: The VBAK and VBAP table contain all the information of 
				Inqiry, 
				Quotation, 
				Sale order and so on,
				We need to generate a cube to contain all of that information to reuse later.
	*/
		EXEC SP_REMOVE_TABLES 'B20_01_TT_SALE_DOCUMENTS'
		SELECT 
			VBAK_MANDT,
			VBAK_VBELN,
			VBAP_POSNR,
			VBAK_AUART,
			TVAKT_BEZEI,
			VBAK_VBTYP,
			B00_DD07T_VBTYP.DD07T_DDTEXT ZF_VBTYP_DDTEXT,
			VBAK_KUNNR,
			KNA1_NAME1,
			VBAK_ERNAM,
			IIF(HEADER_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, VBAK_ERNAM, CONCAT(VBAK_ERNAM, ' - ', HEADER_USR_INFO.V_USERNAME_NAME_TEXT)) AS VBAK_ERNAM_AND_NAME_TEXT,
			KNA1_ERNAM,
			IIF(KNA1_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, KNA1_ERNAM, CONCAT(KNA1_ERNAM, ' - ', KNA1_USR_INFO.V_USERNAME_NAME_TEXT)) AS KNA1_ERNAM_AND_NAME_TEXT,
			KNA1_ERDAT,
			VBAK_ERDAT,
			VBAP_ERNAM,
			IIF(ITEM_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, VBAP_ERNAM, CONCAT(VBAP_ERNAM, ' - ', ITEM_USR_INFO.V_USERNAME_NAME_TEXT)) AS VBAP_ERNAM_AND_NAME_TEXT,
			VBAP_ERDAT,
			VBAK_AUDAT,
			VBAK_VKORG,
			TVKOT_VTEXT,
			VBAK_VTWEG,
			TVTWT_VTEXT,
			VBAK_VKGRP,
			TVGRT_BEZEI,
			VBAK_SPART,
			TSPAT_VTEXT,
			VBAK_VKBUR,
			TVKBT_BEZEI,
			VBAK_AUGRU,
			TVAUT_BEZEI,
			VBAK_WAERK,
			@CURRENCY ZF_CUSTOM_CURRENCY,
			VBAP_MATNR,
			VBAP_ARKTX,
			VBAP_KWMENG,
			VBAP_NETPR,
			VBAP_NETWR,
			VBAK_VGBEL,
			VBAK_VGTYP,
			B00_DD07T_VBAK_VGTYP_REF.DD07T_DDTEXT ZF_VBAK_VGTYP_DDTEXT,
			VBAP_VGBEL,
			VBAP_VGPOS,
			VBAP_VGTYP,
			VBAP_WAERK,
			B00_DD07T_VBAP_VGTYP_REF.DD07T_DDTEXT ZF_VBAP_VGTYP_DDTEXT,
			VBAP_NETPR * ISNULL(CURRENCY_FACTOR_ITEM.TCURX_FACTOR,1) ZF_VBAP_NETPR_S,
			VBAP_NETPR * ISNULL(CURRENCY_FACTOR_ITEM.TCURX_FACTOR,1)*VBAP_STCUR * COALESCE(TCURF_COC.TCURF_TFACT,1)/COALESCE(TCURF_COC.TCURF_FFACT,1) * COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) ZF_VBAP_NETPR_S_CUC,
			VBAP_NETWR * ISNULL(CURRENCY_FACTOR_ITEM.TCURX_FACTOR,1) ZF_VBAP_NETWR_S,
			VBAP_NETWR * ISNULL(CURRENCY_FACTOR_ITEM.TCURX_FACTOR,1)*VBAP_STCUR * COALESCE(TCURF_COC.TCURF_TFACT,1)/COALESCE(TCURF_COC.TCURF_FFACT,1) * COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) ZF_VBAP_NETWR_S_CUC
		INTO B20_01_TT_SALE_DOCUMENTS
		FROM A_VBAK 
		INNER JOIN A_VBAP
		ON VBAK_VBELN = VBAP_VBELN

		--Only keep all sale organization relate to company code in the BKPF/BSEG cube
		INNER JOIN B00_TVKO
		ON VBAK_VKORG = TVKO_VKORG

		--Get customer info
		LEFT JOIN A_KNA1
		ON KNA1_KUNNR = VBAK_KUNNR

		--Get amount factor for header amount in document document
		LEFT JOIN B00_TCURX CURRENCY_FACTOR_HEADER
		ON CURRENCY_FACTOR_HEADER.TCURX_CURRKEY = VBAK_WAERK

		--Get amount factor for item amount in document document
		LEFT JOIN B00_TCURX CURRENCY_FACTOR_ITEM
		ON CURRENCY_FACTOR_ITEM.TCURX_CURRKEY = VBAP_WAERK

		--Get user info created header sale document
		LEFT JOIN A_V_USERNAME HEADER_USR_INFO
		ON HEADER_USR_INFO.V_USERNAME_BNAME = VBAK_ERNAM

		--Get user created item sale document
		LEFT JOIN A_V_USERNAME ITEM_USR_INFO
		ON ITEM_USR_INFO.V_USERNAME_BNAME = VBAP_ERNAM

		--Get user created customer
		LEFT JOIN A_V_USERNAME KNA1_USR_INFO
		ON KNA1_USR_INFO.V_USERNAME_BNAME = KNA1_ERNAM
	
		--Get sale document type
		LEFT JOIN A_TVAKT
		ON TVAKT_SPRAS IN ('E', 'EN')
		AND TVAKT_AUART = VBAK_AUART
	
		--Add reference document category (header)
		LEFT JOIN B00_DD07T_VBTYP B00_DD07T_VBAK_VGTYP_REF
		ON B00_DD07T_VBAK_VGTYP_REF.DD07T_DOMVALUE_L = VBAK_VGTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		--Add reference document category (detail item)
		LEFT JOIN B00_DD07T_VBTYP B00_DD07T_VBAP_VGTYP_REF
		ON B00_DD07T_VBAP_VGTYP_REF.DD07T_DOMVALUE_L = VBAP_VGTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		--Add document category
		LEFT JOIN B00_DD07T_VBTYP
		ON B00_DD07T_VBTYP.DD07T_DOMVALUE_L = VBAK_VBTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		--Add sale organization desc
		LEFT JOIN A_TVKOT
		ON TVKOT_SPRAS IN ('E','EN')
		AND VBAK_VKORG = TVKOT_VKORG

		--Add sale distribution channel desc
		LEFT JOIN A_TVTWT
		ON TVTWT_SPRAS IN ('E', 'EN')
		AND VBAK_VTWEG = TVTWT_VTWEG

		--Add sale divison channel desc
		LEFT JOIN A_TSPAT
		ON TSPAT_SPRAS IN ('E', 'EN')
		AND VBAK_SPART = TSPAT_SPART

		--Add sale group desc
		LEFT JOIN A_TVGRT
		ON TVGRT_SPRAS IN ('EN', 'E')
		AND TVGRT_VKGRP = VBAK_VKGRP

		--Add sale office desc
		LEFT JOIN A_TVKBT
		ON TVKBT_SPRAS IN ('E', 'EN')
		AND VBAK_VKBUR = TVKBT_VKBUR

		--Add order reason
		LEFT JOIN A_TVAUT
		ON TVAUT_SPRAS IN ('E', 'EN')
		AND TVAUT_AUGRU = VBAK_AUGRU

		--Add sale item category desc
		LEFT JOIN A_T006A
		ON T006A_SPRAS IN ('E', 'EN')
		AND VBAP_VRKME = T006A_MSEHI

		--Add sale unit price desc
		LEFT JOIN A_TVAPT
		ON TVAPT_SPRAS IN ('E', 'EN')
		AND TVAPT_PSTYV = VBAP_PSTYV

	--Add the house currency
		LEFT JOIN A_T001 
		ON VBAK_BUKRS_VF = A_T001.T001_BUKRS 
		-- Add currency factor from company currency to USD

		LEFT JOIN B00_IT_TCURF TCURF_CUC
		ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
		AND TCURF_CUC.TCURF_TCURR  = @currency  
		AND TCURF_CUC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = @currency  AND
					B00_IT_TCURF.TCURF_GDATU <= VBAP_ERDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)
		-- Add exchange rate from company currency to USD
		LEFT JOIN B00_IT_TCURR TCURR_CUC
			ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
			AND TCURR_CUC.TCURR_TCURR  = @currency  
			AND TCURR_CUC.TCURR_GDATU = (
				SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
				FROM B00_IT_TCURR
				WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
						B00_IT_TCURR.TCURR_TCURR  = @currency  AND
						B00_IT_TCURR.TCURR_GDATU <= VBAP_ERDAT
				ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
				) 

		-- Add currency factor from document currency to local currency

		LEFT JOIN B00_IT_TCURF TCURF_COC
		ON VBAP_WAERK = TCURF_COC.TCURF_FCURR
		AND TCURF_COC.TCURF_TCURR  = T001_WAERS  
		AND TCURF_COC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE VBAP_WAERK = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = T001_WAERS  AND
					B00_IT_TCURF.TCURF_GDATU <= VBAP_ERDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)

	/*
		Sale order document flow: 
			1) Inquiry -> Quotation -> Sale order -> Delivery -> Good issue (Material document) -> Invoice -> Accounting document ->
			2) Contract -> Quotation -> Sale order -> Delivery -> Good issue (Material document) -> Invoice -> Accounting document ->
			2) Quotation -> Sale order -> Delivery -> Good issue (Material document) -> Invoice -> Accounting document ->
			2) Sale order -> Delivery -> Good issue (Material document) -> Invoice -> Accounting document ->
			3) Contract -> Sale order -> Delivery -> Good issue (Material document) -> Invoice -> Accounting document.
			
			Inquiry, Quotation, Sale order, Credit/Debit meno request, Invoice cancellation: VBAK/VBAP
			Delivery: LIKP/LIPS
			Good issue: MKPF/MSEG
			Invoice: VBRK/VBRP
			Accounting document: BKPF/BSEG/BSAIK/BSAID

		We will check who change the information for each node for the Sale order flow
		Step 2: Extract all sale inquiry documents from VBAK table to temporary table. A sale inquiry doc is a document has VBTYP is A (Inquiry).
				We can search the document type in DD07L table with doamin is VBTYP.
	            Also we make a key to link between the sale inquiry and sale quotation.

	*/
		--EXEC SP_REMOVE_TABLES 'B20_02_IT_SALE_INQUIRY_DOCS'
		--SELECT *,
		--	   CONCAT(VBAK_MANDT,'|',VBAK_VBELN,'|',CAST(VBAP_POSNR AS INT)) ZF_SALE_INQUIRY_DOC_KEY
		--INTO B20_02_IT_SALE_INQUIRY_DOCS
		--FROM B20_01_TT_SALE_DOCUMENTS
		--WHERE VBAK_VBTYP = 'A'

	/*
		Step 3: Extract all sale quotation documents which have document type VBTYP is 'B' (Quotation)
				We make some key to link the sale inquiry and sale quotation, another link sale quotation to sale order
	*/
		--EXEC SP_REMOVE_TABLES 'B20_03_IT_SALE_QUOTATION_DOCS'
		--SELECT *,
		--	   CONCAT(VBAK_MANDT,'|',VBAK_VBELN,'|',CAST(VBAP_POSNR AS INT)) ZF_SALE_QUOTATION_DOC_KEY
		--INTO B20_03_IT_SALE_QUOTATION_DOCS
		--FROM B20_01_TT_SALE_DOCUMENTS 
		--WHERE B20_01_TT_SALE_DOCUMENTS.VBAK_VBTYP = 'B'

	/*
		Step 4: Extract all sale contract documents which have document type VBTYP is 'G' (Contract)
			    We make a key to link the sale contract to sale order document
	*/
		--EXEC SP_REMOVE_TABLES 'B20_04_IT_SALE_CONTRACT_DOCS'
		--SELECT *,
		--	   CONCAT(VBAK_MANDT,'|',VBAK_VBELN,'|',CAST(VBAP_POSNR AS INT)) ZF_SALE_CONTRACT_SALE_DOC_KEY
		--INTO B20_04_IT_SALE_CONTRACT_DOCS
		--FROM B20_01_TT_SALE_DOCUMENTS 
		--WHERE B20_01_TT_SALE_DOCUMENTS.VBAK_VBTYP = 'G'

	/*
		Step 5: Extract all sale documents which have document type is 'C' (Order)
				We make the key to link sale order doc to quotaion/contractt and another link to link sale order doc to the document like 'Credit/Debit refresh'
	*/
		EXEC SP_REMOVE_TABLES 'B20_05_IT_SALE_ORDER_DOCS'
		SELECT *,
			   CONCAT(VBAK_MANDT,'|',VBAK_VBELN,'|',CAST(VBAP_POSNR AS INT)) ZF_SALE_ORDER_DOC_KEY
		INTO B20_05_IT_SALE_ORDER_DOCS
		FROM B20_01_TT_SALE_DOCUMENTS 
		WHERE B20_01_TT_SALE_DOCUMENTS.VBAK_VBTYP NOT IN ('A', 'B', 'G')

	/*
		Step 6: Extract the others document include: Credit memo request, Debit memo request and so on which relate to a order nr 
				(Where VBAK_VGTYP = 'C' and VGBEL <> '' preceding document type is C(order) and Preceding document nr is not null-> )
			    Make a key to link the order document relate to sale order documents
	*/
		--EXEC SP_REMOVE_TABLES 'B20_06_IT_THE_OTHERS_DOCS'
		--SELECT *
		--INTO B20_06_IT_THE_OTHERS_DOCS
		--FROM B20_01_TT_SALE_DOCUMENTS AS A
		--WHERE A.VBAK_VBTYP NOT IN ('A', 'B', 'C', 'G') AND A.VBAK_VGTYP = 'C' AND A.VBAK_VGBEL <> ''

	/*
		Step 7: Create a temporary table contain all delivery documents from LIKP and LIPS
				which relate to a specific sale order or do not and exclude the other delivery types like 'V' delivery of purchase order
	*/

		EXEC SP_REMOVE_TABLES 'B20_07_IT_DELIVERY_DOCS'
		SELECT
			LIKP_MANDT,
			LIKP_VBELN,
			LIPS_POSNR,
			LIKP_ERNAM,
			IIF(HEADER_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, LIKP_ERNAM, CONCAT(LIKP_ERNAM, ' - ', HEADER_USR_INFO.V_USERNAME_NAME_TEXT)) AS LIKP_ERNAM_AND_NAME_TEXT,
			LIKP_ERDAT,
			LIKP_BLDAT,
			LIKP_VKORG,
			TVKOT_VTEXT,
			LIKP_BZIRK,
			T171T_BZTXT,
			LIKP_LFART,
			TVLKT_VTEXT,
			LIKP_KODAT,
			LIKP_LFDAT,
			LIKP_KDGRP,
			T151T_KTEXT,
			LIKP_KUNNR,
			KNA1_NAME1,
			LIKP_WAERK,
			LIKP_VSART,
			T173T_BEZEI,
			LIPS_ERNAM,
			IIF(ITEM_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, LIPS_ERNAM, CONCAT(LIPS_ERNAM, ' - ', ITEM_USR_INFO.V_USERNAME_NAME_TEXT)) AS LIPS_ERNAM_AND_NAME_TEXT,
			LIPS_ERDAT,
			LIPS_PSTYV,
			LIPS_MATNR,
			LIPS_ARKTX,
			LIPS_MATKL,
			T023T_WGBEZ,
			LIPS_LFIMG,
			LIPS_VGBEL,
			LIPS_VGPOS,
			LIKP_VBTYP,
			B00_DD07T_VBTYP.DD07T_DDTEXT ZF_VBTYP_DESC,
			LIPS_VGTYP,
			B00_DD07T_VGTYP.DD07T_DDTEXT ZF_VGTYP_DESC,
			KNA1_ERDAT,
			KNA1_ERNAM,

			   CONCAT(LIKP_MANDT,'|',LIKP_VBELN,'|',CAST(LIPS_POSNR AS INT)) ZF_SALE_DELIVERY_DOC_KEY

		INTO B20_07_IT_DELIVERY_DOCS
		FROM A_LIKP
		INNER JOIN A_LIPS
		ON LIKP_VBELN = LIPS_VBELN

		--Only keep all sale organization relate to company code in the BKPF/BSEG cube
		INNER JOIN B00_TVKO
		ON LIKP_VKORG = TVKO_VKORG

		--Get customer information
		LEFT JOIN A_KNA1
		ON LIKP_KUNNR = KNA1_KUNNR

		LEFT JOIN A_TVKOT
		ON TVKOT_SPRAS IN ('E', 'EN')
		AND LIKP_VKORG = TVKOT_VKORG

		LEFT JOIN A_T171T
		ON T171T_SPRAS IN ('E', 'EN')
		AND T171T_BZIRK = LIKP_BZIRK

		LEFT JOIN A_TVLKT
		ON  TVLKT_SPRAS IN ('E', 'EN')
		AND TVLKT_LFART = LIKP_LFART														

		LEFT JOIN A_T151T
		ON  T151T_SPRAS IN ('E', 'EN')
		AND LIKP_KDGRP = T151T_KDGRP
		
		LEFT JOIN A_T173T
		ON  T173T_SPRAS IN ('E', 'EN')
		AND T173T_VSART = LIKP_VSART

		LEFT JOIN A_T023T
		ON  T023T_SPRAS IN ('E', 'EN')
		AND T023T_MATKL = LIPS_MATKL

		LEFT JOIN A_V_USERNAME HEADER_USR_INFO
		ON  HEADER_USR_INFO.V_USERNAME_BNAME = LIKP_ERNAM

		LEFT JOIN A_V_USERNAME ITEM_USR_INFO
		ON  ITEM_USR_INFO.V_USERNAME_BNAME = LIPS_ERNAM

		LEFT JOIN B00_DD07T_VBTYP B00_DD07T_VGTYP
		ON B00_DD07T_VGTYP.DD07T_DOMVALUE_L = LIPS_VGTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		----Get SD document categroy
		LEFT JOIN B00_DD07T_VBTYP
		ON B00_DD07T_VBTYP.DD07T_DOMVALUE_L = LIKP_VBTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		WHERE EXISTS(SELECT TOP 1 1 FROM A_VBAK WHERE VBAK_VBELN = LIPS_VGBEL)

	/*
		Step 8: Get all material documents from MKPF/MSEG table base on VFBA sale document flow table
	*/
		EXEC SP_REMOVE_TABLES 'B20_08_IT_MATERIAL_DOCS'
		SELECT 
			MKPF_MANDT,
			MKPF_MBLNR,
			MKPF_MJAHR,
			MSEG_BUKRS,
			T001_BUTXT,
			MSEG_SAKTO,
			SKAT_TXT20,
			MSEG_ZEILE,
			MKPF_VGART,
			T158W_LTEXT,
			MKPF_BLART,
			T003T_LTEXT,
			MKPF_BLDAT,
			MKPF_BUDAT,
			MKPF_CPUDT,
			MKPF_AEDAT,
			MKPF_USNAM,
			IIF(A_V_USERNAME.V_USERNAME_NAME_TEXT IS NULL, MKPF_USNAM, CONCAT(MKPF_USNAM, ' - ', A_V_USERNAME.V_USERNAME_NAME_TEXT)) AS MKPF_USNAM_AND_NAME_TEXT,
			MKPF_TCODE,
			MKPF_XBLNR,
			MKPF_BKTXT,
			MSEG_BWART,
			MSEG_XAUTO,
			IIF(LEN(DD07T_DDTEXT) > 0 , DD07T_DDTEXT, 'No automatically created item') ZF_XAUTO_DESC, -- Auto generate indicator desc
			MSEG_MATNR,
			MAKT_MAKTX,
			MSEG_KUNNR,
			KNA1_NAME1,
			MSEG_SHKZG,
			MSEG_KOSTL,
			CSKT_LTEXT,
			MSEG_PRCTR,
			CEPCT_LTEXT,
			MSEG_WAERS,
			@CURRENCY ZF_CUSTOM_CURRENCY,
			T001_WAERS,
			(MSEG_DMBTR)*ISNULL(TCURX_FACTOR,1) ZF_MSEG_DMBTR_S, -- Amount in local currency
		    (MSEG_DMBTR)*ISNULL(TCURX_FACTOR,1)*COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) ZF_MSEG_DMBTR_S_CUC, -- Amount in local currency,
			MSEG_MENGE,
			MSEG_SGTXT,
			VBFA_VBELV,
			VBFA_POSNV,
			   CONCAT(MKPF_MANDT,'|',MKPF_MJAHR,'|',MKPF_MBLNR,'|',CAST(MSEG_ZEILE AS INT)) ZF_SALE_MATERIAL_DOC_KEY
		INTO B20_08_IT_MATERIAL_DOCS
		FROM A_MKPF 
		INNER JOIN A_MSEG
		ON MKPF_MBLNR = MSEG_MBLNR
		AND MKPF_MJAHR = MSEG_MJAHR

		--Get material desc
		LEFT JOIN A_MAKT
		ON  MAKT_SPRAS IN ('E', 'EN')
		AND MSEG_MATNR = MAKT_MATNR 

		--Get customer desc
		LEFT JOIN A_KNA1
		ON  KNA1_KUNNR = MSEG_KUNNR

		--Get auto generate indicator desc
		LEFT JOIN B00_DD07T_MB_XAUTO
		ON MSEG_XAUTO = B00_DD07T_MB_XAUTO.DD07T_DOMVALUE_L  COLLATE SQL_Latin1_General_CP1_CS_AS

		--Transaction type desc
		LEFT JOIN A_T158W
		ON T158W_SPRAS IN ('E', 'EN')
		AND T158W_VGART = MKPF_VGART

		--Document type desc
		LEFT JOIN A_T003T
		ON  T003T_SPRAS IN ('E', 'EN')
		AND MKPF_BLART = T003T_BLART

		--Get comapany info
		LEFT JOIN A_T001
		ON  T001_BUKRS = MSEG_BUKRS

		-- Get factor for amount in local currency
		LEFT JOIN B00_TCURX
		ON TCURX_CURRKEY = T001_WAERS

			-- Add currency factor from company currency to USD

		LEFT JOIN B00_IT_TCURF TCURF_CUC
		ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
		AND TCURF_CUC.TCURF_TCURR  = @currency  
		AND TCURF_CUC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = @currency  AND
					B00_IT_TCURF.TCURF_GDATU <= MKPF_BUDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)
		-- Add exchange rate from company currency to USD
		LEFT JOIN B00_IT_TCURR TCURR_CUC
			ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
			AND TCURR_CUC.TCURR_TCURR  = @currency  
			AND TCURR_CUC.TCURR_GDATU = (
				SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
				FROM B00_IT_TCURR
				WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
						B00_IT_TCURR.TCURR_TCURR  = @currency  AND
						B00_IT_TCURR.TCURR_GDATU <= MKPF_BUDAT
				ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
				) 


		LEFT JOIN A_SKAT
		ON  T001_KTOPL = SKAT_KTOPL
		AND SKAT_SPRAS IN ('E', 'EN')
		AND SKAT_SAKNR = MSEG_SAKTO 

		LEFT JOIN A_V_USERNAME
		ON  A_V_USERNAME.V_USERNAME_BNAME = MKPF_USNAM

		--Get cost center desc
		LEFT JOIN A_CSKT
		ON  CSKT_KOKRS = MSEG_KOKRS
		AND CSKT_SPRAS IN ('E', 'EN')
		AND CSKT_KOSTL = MSEG_KOSTL
		AND CSKT_DATBI = (
			SELECT TOP 1 CSKT_DATBI
			FROM A_CSKT
			WHERE  CSKT_KOKRS = MSEG_KOKRS
			AND CSKT_SPRAS IN ('E', 'EN')
			AND CSKT_KOSTL = MSEG_KOSTL
			AND CSKT_DATBI >= MKPF_BLDAT
			ORDER BY CSKT_DATBI ASC
		)

		--Get profit center center desc
		LEFT JOIN A_CEPCT
		ON  CEPCT_KOKRS = MSEG_KOKRS
		AND CEPCT_SPRAS IN ('E', 'EN')
		AND CEPCT_PRCTR = MSEG_PRCTR
		AND CEPCT_DATBI = (
			SELECT TOP 1 CEPCT_DATBI
			FROM A_CEPCT
			WHERE  CEPCT_KOKRS = MSEG_KOKRS
			AND CEPCT_SPRAS IN ('E', 'EN')
			AND CEPCT_PRCTR = MSEG_PRCTR
			AND CEPCT_DATBI >= MKPF_BLDAT
			ORDER BY CEPCT_DATBI ASC
		)


		--Base on VBFA table to get the preceding document nr
		LEFT JOIN A_VBFA
		ON  MKPF_MJAHR = YEAR(VBFA_ERDAT)
		AND MKPF_MBLNR = VBFA_VBELN
		AND CAST(MSEG_ZEILE AS INT) = CAST(VBFA_POSNN AS INT)
		AND VBFA_VBTYP_V IN (SELECT DISTINCT B20_05_IT_SALE_ORDER_DOCS.VBAK_VBTYP FROM B20_05_IT_SALE_ORDER_DOCS)
		AND VBFA_STUFE = '01'
		WHERE 
		--Include all material exist in the VBFA sale document flow table
		EXISTS(
			SELECT TOP 1 1 FROM A_VBFA WHERE VBFA_VBELN = MKPF_MBLNR AND CAST(VBFA_POSNN AS INT) = CAST(MSEG_ZEILE AS INT)
		)


	/*
		Step 9: Extract all invoice document from VBRK AND VBRP base on VBFA sale document flow table
	*/
		EXEC SP_REMOVE_TABLES 'B20_09_IT_INVOICE_DOCS'
		SELECT 
			VBRK_MANDT,
            VBRK_VBELN,
			VBRK_BUKRS,
			VBRK_GJAHR,
            VBRP_POSNR,
            VBRK_FKART,
            TVFKT_VTEXT,
            VBRK_FKTYP,
            B00_DD07T_FKTYP.DD07T_DDTEXT ZF_VBRK_FKTYP_DESC, -- Get billing category desc
            VBRP_PSTYV,
            TVAPT_VTEXT,
            @CURRENCY ZF_CUSTOM_CURRENCY,
            VBRK_WAERK,
            VBRK_VKORG,
            TVKOT_VTEXT,
            VBRK_VTWEG,
            TVTWT_VTEXT,
            VBRK_FKDAT,
            VBRK_BZIRK,
            T171T_BZTXT,
            VBRK_ERNAM,
			IIF(HEADER_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, VBRK_ERNAM, CONCAT(VBRK_ERNAM, ' - ', HEADER_USR_INFO.V_USERNAME_NAME_TEXT)) AS VBRK_ERNAM_AND_NAME_TEXT,
            VBRK_ERDAT,
            VBRK_AEDAT,
            VBRK_KUNAG,
            A_KNA1_KUNAG.KNA1_NAME1 ZF_KUNAG_NAME1, -- Name
            VBRK_KUNRG,
            A_KNA1_KUNRG.KNA1_NAME1 ZF_KUNRG_NAME1,
            VBRK_KDGRP,
            T151T_KTEXT,
            VBRP_ERNAM,
			IIF(ITEM_USR_INFO.V_USERNAME_NAME_TEXT IS NULL, VBRP_ERNAM, CONCAT(VBRP_ERNAM, ' - ', ITEM_USR_INFO.V_USERNAME_NAME_TEXT)) AS VBRP_ERNAM_AND_NAME_TEXT,
            VBRP_ERDAT,
            VBRP_MATKL,
            T023T_WGBEZ,
            VBRP_MATNR,
            VBRP_ARKTX,
			VBRP_FKIMG,
			VBRP_FKLMG,
            (VBRP_NETWR)*ISNULL(TCURX_FACTOR,1) ZF_VBRP_NETWR_S, -- Item net value
            (VBRP_NETWR)*ISNULL(TCURX_FACTOR,1) * VBRP_KURSK * COALESCE(TCURF_COC.TCURF_TFACT,1)/COALESCE(TCURF_COC.TCURF_FFACT,1) * COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) ZF_VBRP_NETWR_S_CUC, -- Item net value
            VBRP_VGBEL,
            VBRP_VGPOS,
            VBRP_VGTYP,
            B00_D007T_VGTYP.DD07T_DDTEXT ZF_VBRP_VGTYP_DESC, --Reference document type desc
            VBFA_VBELV,
            VBFA_POSNV,
			CONCAT(VBRK_MANDT,'|',VBRK_VBELN,'|',CAST(VBRP_POSNR AS INT)) ZF_SALE_INVOICE_DOC_KEY
		INTO B20_09_IT_INVOICE_DOCS
		FROM A_VBRK
		INNER JOIN A_VBRP
		ON  VBRK_VBELN = VBRP_VBELN

		--Only keep all sale organization relate to company code in the BKPF/BSEG cube
		INNER JOIN B00_TVKO
		ON VBRK_VKORG = TVKO_VKORG

		-- Get currency factor
		LEFT JOIN B00_TCURX
		ON TCURX_CURRKEY = VBRK_WAERK

		-- Get billing type desc
		LEFT JOIN A_TVFKT
		ON  TVFKT_SPRAS IN ('E', 'EN')
		AND TVFKT_FKART = VBRK_FKART COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get billing category desc
		LEFT JOIN B00_DD07T_FKTYP
		ON B00_DD07T_FKTYP.DD07T_DOMVALUE_L = VBRK_FKTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get billing item category
		LEFT JOIN A_TVAPT
		ON  TVAPT_SPRAS IN ('E', 'EN')
		AND VBRP_PSTYV = TVAPT_PSTYV

		-- Get sale organization desc
		LEFT JOIN A_TVKOT
		ON  TVKOT_SPRAS IN ('E', 'EN')
		AND TVKOT_VKORG = VBRK_VKORG

		--Get distribution channel
		LEFT JOIN A_TVTWT
		ON  TVTWT_SPRAS IN ('E', 'EN')
		AND VBRK_VTWEG = TVTWT_VTWEG

		-- Get sale district desc
		LEFT JOIN A_T171T
		ON  T171T_SPRAS IN ('E', 'EN')
		AND T171T_BZIRK = VBRK_BZIRK

		--Get sold-to-party info
		LEFT JOIN A_KNA1 A_KNA1_KUNAG
		ON  VBRK_KUNAG = A_KNA1_KUNAG.KNA1_KUNNR

		--Get payer info
		LEFT JOIN A_KNA1 A_KNA1_KUNRG
		ON  A_KNA1_KUNRG.KNA1_KUNNR = VBRK_KUNRG

		-- Get customer group
		LEFT JOIN A_T151T
		ON  T151T_SPRAS IN ('E', 'EN')
		AND T151T_KDGRP = VBRK_KDGRP

		--Get material group desc
		LEFT JOIN A_T023T
		ON  T023T_SPRAS IN ('E', 'EN')
		AND T023T_MATKL = VBRP_MATKL

			LEFT JOIN A_T001
		ON  A_T001.T001_BUKRS = A_VBRK.VBRK_BUKRS
		-- Add currency factor from company currency to USD

		LEFT JOIN B00_IT_TCURF TCURF_CUC
		ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
		AND TCURF_CUC.TCURF_TCURR  = @currency  
		AND TCURF_CUC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = @currency  AND
					B00_IT_TCURF.TCURF_GDATU <= VBRK_FKDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)
		-- Add exchange rate from company currency to USD
		LEFT JOIN B00_IT_TCURR TCURR_CUC
			ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
			AND TCURR_CUC.TCURR_TCURR  = @currency  
			AND TCURR_CUC.TCURR_GDATU = (
				SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
				FROM B00_IT_TCURR
				WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
						B00_IT_TCURR.TCURR_TCURR  = @currency  AND
						B00_IT_TCURR.TCURR_GDATU <= VBRK_FKDAT
				ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
				) 

		-- Add currency factor from document currency to local currency

		LEFT JOIN B00_IT_TCURF TCURF_COC
		ON VBRK_WAERK = TCURF_COC.TCURF_FCURR
		AND TCURF_COC.TCURF_TCURR  = T001_WAERS  
		AND TCURF_COC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE VBRK_WAERK = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = T001_WAERS  AND
					B00_IT_TCURF.TCURF_GDATU <= VBRK_FKDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)

		--Get reference document type
		LEFT JOIN B00_DD07T_VBTYP B00_D007T_VGTYP
		ON VBRP_VGTYP = B00_D007T_VGTYP.DD07T_DOMVALUE_L COLLATE SQL_Latin1_General_CP1_CS_AS

		LEFT JOIN A_V_USERNAME HEADER_USR_INFO
		ON  HEADER_USR_INFO.V_USERNAME_BNAME = VBRK_ERNAM

		LEFT JOIN A_V_USERNAME ITEM_USR_INFO
		ON  ITEM_USR_INFO.V_USERNAME_BNAME = VBRP_ERNAM
	

		-- Get preceding document base on VBFA (Sale document flow) table
		LEFT JOIN A_VBFA
		ON  VBFA_VBELN = VBRK_VBELN
		AND CAST(VBFA_POSNN AS INT) = CAST(VBRP_POSNR AS INT)
		AND VBFA_VBTYP_V IN (SELECT DISTINCT B20_05_IT_SALE_ORDER_DOCS.VBAK_VBTYP FROM B20_05_IT_SALE_ORDER_DOCS)
		AND VBFA_STUFE = '01'

		--Only include the material documents which exists in VFBA (Sale document flow table)
		WHERE EXISTS(
			SELECT TOP 1 1 FROM A_VBFA WHERE  VBFA_VBELN = VBRK_VBELN AND CAST(VBFA_POSNN AS INT) = CAST(VBRP_POSNR AS INT)
		)



	/*
		Step 10: Extract all accounting documents from BKPF and BSEG base on invoice documents
	*/
		EXEC SP_REMOVE_TABLES 'B20_10_IT_INVOICE_ACCOUTING_DOCS'
		SELECT
			  B07_04_IT_FIN_AR_INV_PAY_FLAGS.*,
			  BKPF_AWKEY,
			  BKPF_USNAM,
			  IIF(A_V_USERNAME.V_USERNAME_NAME_TEXT IS NULL, BKPF_USNAM, CONCAT(BKPF_USNAM, ' - ', A_V_USERNAME.V_USERNAME_NAME_TEXT)) AS BKPF_USNAM_AND_NAME_TEXT,
			  KNA1_ERNAM,
			  IIF(KNA1_ERNAM_INFO.V_USERNAME_NAME_TEXT IS NULL, KNA1_ERNAM, CONCAT(KNA1_ERNAM, ' - ', KNA1_ERNAM_INFO.V_USERNAME_NAME_TEXT)) AS KNA1_ERNAM_AND_NAME_TEXT,
			  KNA1_NAME1,
			  T001_BUTXT,
			  TSTCT_TTEXT,
			  DD07T_DDTEXT,
			  SKAT_TXT50,
			  CSKT_LTEXT,
			  CEPCT_LTEXT,
			  (B07D_BSAID_WRBTR)*ISNULL(B00_TCURX.TCURX_FACTOR,1) ZF_BSAID_WRBTR_S,
			  CONCAT(BKPF_MANDT,'|',BKPF_AWKEY) ZF_SALE_INVOICE_TO_ACCOUNTING_DOC_KEY
		INTO B20_10_IT_INVOICE_ACCOUTING_DOCS
		FROM B07_04_IT_FIN_AR_INV_PAY_FLAGS
		LEFT JOIN A_BKPF
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_BKPF.BKPF_BUKRS AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_GJAHR = A_BKPF.BKPF_GJAHR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BELNR = A_BKPF.BKPF_BELNR
		
		LEFT JOIN A_BSEG
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_BSEG.BSEG_BUKRS AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_GJAHR = A_BSEG.BSEG_GJAHR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BELNR = A_BSEG.BSEG_BELNR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUZEI = A_BSEG.BSEG_BUZEI

		LEFT JOIN A_KNA1
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KUNNR = A_KNA1.KNA1_KUNNR

		LEFT JOIN A_T001
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_T001.T001_BUKRS

		LEFT JOIN A_TSTCT
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BKPF_TCODE = A_TSTCT.TSTCT_TCODE AND
		   A_TSTCT.TSTCT_SPRSL IN ('E', 'EN')

		LEFT JOIN B00_DD07T_BSTAT
		ON DD07T_DOMVALUE_L = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BSTAT

		LEFT JOIN A_SKAT
		ON A_SKAT.SKAT_SPRAS IN ('E', 'EN')
		AND A_T001.T001_KTOPL = A_SKAT.SKAT_KTOPL
		AND B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_HKONT = A_SKAT.SKAT_SAKNR

		LEFT JOIN B00_TCURX
		ON B00_TCURX.TCURX_CURRKEY = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_WAERS

		LEFT JOIN A_V_USERNAME
		ON A_V_USERNAME.V_USERNAME_BNAME = BKPF_USNAM

		LEFT JOIN A_V_USERNAME KNA1_ERNAM_INFO
		ON KNA1_ERNAM_INFO.V_USERNAME_BNAME = KNA1_ERNAM

		--Get cost center desc
		LEFT JOIN A_CSKT
		ON CSKT_KOKRS = A_BSEG.BSEG_KOKRS
		AND CSKT_SPRAS IN ('E', 'EN')
		AND CSKT_KOSTL = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KOSTL
		AND CSKT_DATBI = (
			SELECT TOP 1 CSKT_DATBI
			FROM A_CSKT
			WHERE CSKT_KOKRS = A_BSEG.BSEG_KOKRS
			AND CSKT_SPRAS IN ('E', 'EN')
			AND CSKT_KOSTL = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KOSTL
			AND CSKT_DATBI >= B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BLDAT
			ORDER BY CSKT_DATBI ASC
		)

		--Get profit center center desc
		LEFT JOIN A_CEPCT
		ON CEPCT_KOKRS = A_BSEG.BSEG_KOKRS
		AND CEPCT_SPRAS IN ('E', 'EN')
		AND CEPCT_PRCTR = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_PRCTR
		AND CEPCT_DATBI = (
			SELECT TOP 1 CEPCT_DATBI
			FROM A_CEPCT
			WHERE CEPCT_KOKRS = A_BSEG.BSEG_KOKRS
			AND CEPCT_SPRAS IN ('E', 'EN')
			AND CEPCT_PRCTR = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_PRCTR
			AND CEPCT_DATBI >= B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BLDAT
			ORDER BY CEPCT_DATBI ASC
		)

		WHERE B07D_BKPF_AWTYP = 'VBRK' AND EXISTS(
			SELECT TOP 1 1 FROM B20_09_IT_INVOICE_DOCS WHERE BKPF_AWKEY = VBRK_VBELN
		)
		
	/*
		Step 11: Create a table to contain all clearing documents relate to VBRK invoice accounting documents
	*/
		EXEC SP_REMOVE_TABLES 'B20_11_IT_OTC_CLEARING_DOCS'
		SELECT B07_04_IT_FIN_AR_INV_PAY_FLAGS.*,
			   BKPF_AWKEY,
			   BKPF_USNAM,
			   IIF(A_V_USERNAME.V_USERNAME_NAME_TEXT IS NULL, BKPF_USNAM, CONCAT(BKPF_USNAM, ' - ', A_V_USERNAME.V_USERNAME_NAME_TEXT)) AS BKPF_USNAM_AND_NAME_TEXT,
			   KNA1_ERNAM,
			   KNA1_NAME1,
			   T001_BUTXT,
			   TSTCT_TTEXT,
			   DD07T_DDTEXT,
			   SKAT_TXT50,
			   CSKT_LTEXT,
			   CEPCT_LTEXT,
			   (B07D_BSAID_WRBTR)*ISNULL(B00_TCURX.TCURX_FACTOR,1) ZF_BSAID_WRBTR_S,
			   CONCAT(BKPF_MANDT,'|',BKPF_BUKRS,'|',BKPF_GJAHR,'|',BKPF_BELNR) ZF_CLEARING_INVOICE_DOC_KEY
		INTO B20_11_IT_OTC_CLEARING_DOCS
		FROM B07_04_IT_FIN_AR_INV_PAY_FLAGS
		LEFT JOIN A_BKPF
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_BKPF.BKPF_BUKRS AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_GJAHR = A_BKPF.BKPF_GJAHR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BELNR = A_BKPF.BKPF_BELNR
		
		LEFT JOIN A_BSEG
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_BSEG.BSEG_BUKRS AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_GJAHR = A_BSEG.BSEG_GJAHR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BELNR = A_BSEG.BSEG_BELNR AND
		   B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUZEI = A_BSEG.BSEG_BUZEI

		LEFT JOIN A_KNA1
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KUNNR = A_KNA1.KNA1_KUNNR

		LEFT JOIN A_T001
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS = A_T001.T001_BUKRS

		LEFT JOIN A_TSTCT
		ON B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BKPF_TCODE = A_TSTCT.TSTCT_TCODE AND
		   A_TSTCT.TSTCT_SPRSL IN ('E', 'EN')

		LEFT JOIN B00_DD07T_BSTAT
		ON DD07T_DOMVALUE_L = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BSTAT

		LEFT JOIN A_SKAT
		ON A_SKAT.SKAT_SPRAS IN ('E', 'EN')
		AND A_T001.T001_KTOPL = A_SKAT.SKAT_KTOPL
		AND B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_HKONT = A_SKAT.SKAT_SAKNR

		LEFT JOIN B00_TCURX
		ON B00_TCURX.TCURX_CURRKEY = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_WAERS

		LEFT JOIN A_V_USERNAME
		ON A_V_USERNAME.V_USERNAME_BNAME = BKPF_USNAM

		--Get cost center desc
		LEFT JOIN A_CSKT
		ON CSKT_KOKRS = A_BSEG.BSEG_KOKRS
		AND CSKT_SPRAS IN ('E', 'EN')
		AND CSKT_KOSTL = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KOSTL
		AND CSKT_DATBI = (
			SELECT TOP 1 CSKT_DATBI
			FROM A_CSKT
			WHERE  CSKT_KOKRS = A_BSEG.BSEG_KOKRS
			AND CSKT_SPRAS IN ('E', 'EN')
			AND CSKT_KOSTL = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_KOSTL
			AND CSKT_DATBI >= B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BLDAT
			ORDER BY CSKT_DATBI ASC
		)

		--Get profit center center desc
		LEFT JOIN A_CEPCT
		ON  CEPCT_KOKRS = A_BSEG.BSEG_KOKRS
		AND CEPCT_SPRAS IN ('E', 'EN')
		AND CEPCT_PRCTR = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_PRCTR
		AND CEPCT_DATBI = (
			SELECT TOP 1 CEPCT_DATBI
			FROM A_CEPCT
			WHERE  CEPCT_KOKRS = A_BSEG.BSEG_KOKRS
			AND CEPCT_SPRAS IN ('E', 'EN')
			AND CEPCT_PRCTR = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_PRCTR
			AND CEPCT_DATBI >= B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BLDAT
			ORDER BY CEPCT_DATBI ASC
		)
	
		WHERE EXISTS (
			SELECT TOP 1 1
			FROM B20_10_IT_INVOICE_ACCOUTING_DOCS
			WHERE B20_10_IT_INVOICE_ACCOUTING_DOCS.B07D_BSAID_BUKRS = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BUKRS
			AND B20_10_IT_INVOICE_ACCOUTING_DOCS.B07D_BSAID_AUGBL = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_BELNR
			AND B20_10_IT_INVOICE_ACCOUTING_DOCS.B07D_BSAID_AUGGJ = B07_04_IT_FIN_AR_INV_PAY_FLAGS.B07D_BSAID_GJAHR
		)

		EXEC SP_UNNAME_FIELD 'B07D_', 'B20_10_IT_INVOICE_ACCOUTING_DOCS'
		EXEC SP_UNNAME_FIELD 'B07D_', 'B20_11_IT_OTC_CLEARING_DOCS'

	/*
		Step 20: Create center cube to link the others cube together. Inquiry, Quotation, Sale order and etc.
				 Create new columns to flag for exception cases

	*/
		EXEC SP_REMOVE_TABLES 'B20_20_CENTER_FACT_TABLE'
		SELECT	DISTINCT 
		--Add sale order keys
		ZF_SALE_ORDER_DOC_KEY B20_05_ZF_SALE_ORDER_DOC_KEY,

		--Add Sale order header/item create user
		B20_05_IT_SALE_ORDER_DOCS.VBAK_KUNNR AS B20_20_VBAK_KUNNR,
		B20_05_IT_SALE_ORDER_DOCS.KNA1_NAME1 AS B20_20_KNA1_NAME1,
		B20_05_IT_SALE_ORDER_DOCS.VBAK_VBELN AS B20_20_VBAK_VBELN,
		B20_05_IT_SALE_ORDER_DOCS.VBAP_POSNR AS B20_20_VBAP_POSNR,
		CONCAT(B20_05_IT_SALE_ORDER_DOCS.VBAK_VKORG, ' - ', B20_05_IT_SALE_ORDER_DOCS.TVKOT_VTEXT) AS B20_20_VBAK_VKORG_AND_VTEXT,
		CONCAT(B20_05_IT_SALE_ORDER_DOCS.VBAP_MATNR, ' - ', B20_05_IT_SALE_ORDER_DOCS.VBAP_ARKTX) AS B20_20_VBAP_MATNR_AND_ARKTX,
		CONCAT(B20_05_IT_SALE_ORDER_DOCS.VBAK_AUART, ' - ', B20_05_IT_SALE_ORDER_DOCS.TVAKT_BEZEI) AS B20_20_VBAK_AUART_AND_BEZEI,
		B20_05_IT_SALE_ORDER_DOCS.VBAP_KWMENG AS B20_20_VBAP_KWMENG,
		B20_05_IT_SALE_ORDER_DOCS.VBAP_WAERK AS B20_20_VBAP_WAERK,
		B20_05_IT_SALE_ORDER_DOCS.ZF_VBAP_NETPR_S AS B20_20_ZF_VBAP_NETPR_S,
		B20_05_IT_SALE_ORDER_DOCS.KNA1_ERNAM AS B20_20_KNA1_ERNAM,
		B20_05_IT_SALE_ORDER_DOCS.VBAK_ERNAM AS B20_20_VBAK_ERNAM,
		B20_05_IT_SALE_ORDER_DOCS.VBAP_ERNAM AS B20_20_VBAP_ERNAM,
		B20_05_IT_SALE_ORDER_DOCS.VBAK_ERDAT AS B20_20_VBAK_ERDAT,
		B20_05_IT_SALE_ORDER_DOCS.VBAP_ERDAT AS B20_20_VBAP_ERDAT,

		--Add delivery keys
		IIF(B20_07_IT_DELIVERY_DOCS.LIKP_MANDT IS NULL, NULL, 
			CONCAT(B20_07_IT_DELIVERY_DOCS.LIKP_MANDT,'|',B20_07_IT_DELIVERY_DOCS.LIKP_VBELN,'|',CAST(B20_07_IT_DELIVERY_DOCS.LIPS_POSNR AS INT))) B20_07_ZF_SALE_DELIVERY_DOC_KEY,

		--Add delivery entry user
		B20_07_IT_DELIVERY_DOCS.LIKP_VBELN AS B20_20_LIKP_VBELN,
		B20_07_IT_DELIVERY_DOCS.LIPS_POSNR AS B20_20_LIPS_POSNR,
		CONCAT(B20_07_IT_DELIVERY_DOCS.LIKP_VBTYP, ' - ', B20_07_IT_DELIVERY_DOCS.ZF_VBTYP_DESC) AS B20_20_LIKP_VBTYP_AND_DESC,
		CONCAT(B20_07_IT_DELIVERY_DOCS.LIKP_LFART, ' - ', B20_07_IT_DELIVERY_DOCS.TVLKT_VTEXT) AS B20_20_LIKP_LFART_AND_VTEXT,
		CONCAT(B20_07_IT_DELIVERY_DOCS.LIKP_KUNNR, ' - ', B20_07_IT_DELIVERY_DOCS.KNA1_NAME1) AS B20_20_LIKP_KUNNR_AND_NAME1,
		CONCAT(B20_07_IT_DELIVERY_DOCS.LIPS_MATNR, ' - ', B20_07_IT_DELIVERY_DOCS.LIPS_ARKTX) AS B20_20_LIPS_MATNR_AND_ARKTX,
		CONCAT(B20_07_IT_DELIVERY_DOCS.LIPS_MATKL, ' - ', B20_07_IT_DELIVERY_DOCS.T023T_WGBEZ) AS B20_20_LIPS_MATKL_AND_WGBEZ,
		B20_07_IT_DELIVERY_DOCS.LIPS_LFIMG AS B20_20_LIPS_LFIMG,

		B20_07_IT_DELIVERY_DOCS.LIKP_ERNAM AS B20_20_LIKP_ERNAM,
		B20_07_IT_DELIVERY_DOCS.LIPS_ERNAM AS B20_20_LIPS_ERNAM,
		B20_07_IT_DELIVERY_DOCS.LIKP_ERDAT AS B20_20_LIKP_ERDAT,
		B20_07_IT_DELIVERY_DOCS.LIPS_ERDAT AS B20_20_LIPS_ERDAT,

		--Add material document keys
		IIF(B20_08_IT_MATERIAL_DOCS.MKPF_MANDT IS NULL, NULL, 
			CONCAT(B20_08_IT_MATERIAL_DOCS.MKPF_MANDT,'|',B20_08_IT_MATERIAL_DOCS.MKPF_MJAHR,'|',B20_08_IT_MATERIAL_DOCS.MKPF_MBLNR,'|',CAST(B20_08_IT_MATERIAL_DOCS.MSEG_ZEILE AS INT))) B20_08_ZF_SALE_MATERIAL_DOC_KEY,

		--Add material entry user
		B20_08_IT_MATERIAL_DOCS.MKPF_MBLNR AS B20_20_MKPF_MBLNR,
		B20_08_IT_MATERIAL_DOCS.MSEG_ZEILE AS B20_20_MSEG_ZEILE,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MKPF_VGART, ' - ', B20_08_IT_MATERIAL_DOCS.T158W_LTEXT) AS B20_20_MKPF_VGART_AND_LTEXT,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_MATNR, ' - ', B20_08_IT_MATERIAL_DOCS.MAKT_MAKTX) AS B20_20_MSEG_MATNR_AND_MAKTX,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_KUNNR, ' - ', B20_08_IT_MATERIAL_DOCS.KNA1_NAME1) AS B20_20_MSEG_KUNNR_AND_NAME1,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_BUKRS, ' - ', B20_08_IT_MATERIAL_DOCS.T001_BUTXT) AS B20_20_MSEG_BUKRS_AND_BUTXT,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_SAKTO, ' - ', B20_08_IT_MATERIAL_DOCS.SKAT_TXT20) AS B20_20_MSEG_SAKTO_AND_TXT20,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_PRCTR, ' - ', B20_08_IT_MATERIAL_DOCS.CEPCT_LTEXT) AS B20_20_MSEG_PRCTR_AND_LTEXT,
		CONCAT(B20_08_IT_MATERIAL_DOCS.MSEG_KOSTL, ' - ', B20_08_IT_MATERIAL_DOCS.CSKT_LTEXT) AS B20_20_MSEG_KOSTL_AND_LTEXT,
		B20_08_IT_MATERIAL_DOCS.MSEG_SHKZG AS B20_20_MSEG_SHKZG,
		B20_08_IT_MATERIAL_DOCS.MSEG_WAERS AS B20_20_MSEG_WAERS,
		B20_08_IT_MATERIAL_DOCS.MSEG_MENGE AS B20_20_MSEG_MENGE,
		B20_08_IT_MATERIAL_DOCS.ZF_MSEG_DMBTR_S AS B20_20_ZF_MSEG_DMBTR_S,
		B20_08_IT_MATERIAL_DOCS.MKPF_USNAM AS B20_20_MKPF_USNAM,
		B20_08_IT_MATERIAL_DOCS.MKPF_CPUDT AS B20_20_MKPF_CPUDT,

		--Add invoice document keys
		IIF(B20_09_IT_INVOICE_DOCS.VBRK_MANDT IS NULL, NULL, 
			CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_MANDT,'|',B20_09_IT_INVOICE_DOCS.VBRK_VBELN,'|',CAST(B20_09_IT_INVOICE_DOCS.VBRP_POSNR AS INT))) B20_09_ZF_SALE_INVOICE_DOC_KEY,

		--Add invoice entry user
		B20_09_IT_INVOICE_DOCS.VBRK_VBELN AS B20_20_VBRK_VBELN,
		B20_09_IT_INVOICE_DOCS.VBRP_POSNR AS B20_20_VBRP_POSNR,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_FKART, ' - ', B20_09_IT_INVOICE_DOCS.TVFKT_VTEXT) AS B20_20_VBRK_FKART_AND_VTEXT,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_VKORG, ' - ', B20_09_IT_INVOICE_DOCS.TVKOT_VTEXT) AS B20_20_VBRK_VKORG_AND_VTEXT,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_KUNAG, ' - ', B20_09_IT_INVOICE_DOCS.ZF_KUNAG_NAME1) AS B20_20_VBRK_KUNAG_AND_NAME1,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_KUNRG, ' - ', B20_09_IT_INVOICE_DOCS.ZF_KUNRG_NAME1) AS B20_20_VBRK_KUNRG_AND_NAME1,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRP_MATKL, ' - ', B20_09_IT_INVOICE_DOCS.T023T_WGBEZ) AS B20_20_VBRP_MATKL_AND_WGBEZ,
		CONCAT(B20_09_IT_INVOICE_DOCS.VBRP_MATNR, ' - ', B20_09_IT_INVOICE_DOCS.VBRP_ARKTX) AS B20_20_VBRP_MATNR_AND_ARKTX,
		B20_09_IT_INVOICE_DOCS.VBRP_FKIMG AS B20_20_VBRP_FKIMG,
		B20_09_IT_INVOICE_DOCS.VBRP_FKLMG AS B20_20_VBRP_FKLMG,
		B20_09_IT_INVOICE_DOCS.VBRK_WAERK AS B20_20_VBRK_WAERK,
		B20_09_IT_INVOICE_DOCS.ZF_VBRP_NETWR_S AS B20_20_ZF_VBRP_NETWR_S,
		B20_09_IT_INVOICE_DOCS.VBRK_ERNAM AS B20_20_VBRK_ERNAM,
		B20_09_IT_INVOICE_DOCS.VBRP_ERNAM AS B20_20_VBRP_ERNAM,
		B20_09_IT_INVOICE_DOCS.VBRK_ERDAT AS B20_20_VBRK_ERDAT,
		B20_09_IT_INVOICE_DOCS.VBRP_ERDAT AS B20_20_VBRP_ERDAT,

		--Add invoice to accounting document keys
		IIF(B20_09_IT_INVOICE_DOCS.VBRK_MANDT IS NULL, NULL, 
			CONCAT(B20_09_IT_INVOICE_DOCS.VBRK_MANDT,'|',B20_09_IT_INVOICE_DOCS.VBRK_VBELN)) B20_09_ZF_SALE_INVOICE_TO_ACCOUNTING_DOC_KEY,

		-- --Add invoice accounting keys
		IIF(B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_MANDT IS NULL, NULL, 
			CONCAT(B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_MANDT,'|',B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_BUKRS,'|',B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_GJAHR,'|',B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_BELNR)) B20_10_ZF_INVOICE_ACCOUNTING_DOC_KEY
	
		,B20_10_IT_INVOICE_ACCOUTING_DOCS.BKPF_USNAM AS B20_20_INV_BKPF_USNAM
		,B20_10_IT_INVOICE_ACCOUTING_DOCS.KNA1_ERNAM AS B20_20_INV_KNA1_ERNAM
		
		--Add invoice accounting keys
		,IIF(B20_11_IT_OTC_CLEARING_DOCS.BSAID_MANDT IS NULL, NULL, 
			CONCAT(B20_11_IT_OTC_CLEARING_DOCS.BSAID_MANDT,'|',B20_11_IT_OTC_CLEARING_DOCS.BSAID_BUKRS,'|',B20_11_IT_OTC_CLEARING_DOCS.BSAID_GJAHR,'|',B20_11_IT_OTC_CLEARING_DOCS.BSAID_BELNR)) B20_11_ZF_CLEARING_INVOICE_DOC_KEY
		,B20_11_IT_OTC_CLEARING_DOCS.BKPF_USNAM AS B20_20_PAYMENT_BKPF_USNAM

	
		INTO B20_20_CENTER_FACT_TABLE
		FROM B20_05_IT_SALE_ORDER_DOCS

		----Get quotation key for sale order key
		--LEFT JOIN B20_03_IT_SALE_QUOTATION_DOCS
		--ON B20_03_IT_SALE_QUOTATION_DOCS.VBAK_VBELN = B20_03_IT_SALE_QUOTATION_DOCS.VBAP_VGBEL
		--AND CAST(B20_03_IT_SALE_QUOTATION_DOCS.VBAP_POSNR AS INT) = CAST(B20_03_IT_SALE_QUOTATION_DOCS.VBAP_VGPOS AS INT)
		--AND B20_03_IT_SALE_QUOTATION_DOCS.VBAK_VGTYP = 'B'

		----Get inquiry key for sale order key
		--LEFT JOIN B20_02_IT_SALE_INQUIRY_DOCS
		--ON B20_02_IT_SALE_INQUIRY_DOCS.VBAK_VBELN = B20_02_IT_SALE_INQUIRY_DOCS.VBAP_VGBEL
		--AND CAST(B20_02_IT_SALE_INQUIRY_DOCS.VBAP_POSNR AS INT) = CAST(B20_02_IT_SALE_INQUIRY_DOCS.VBAP_VGPOS AS INT)
		--AND B20_02_IT_SALE_INQUIRY_DOCS.VBAK_VGTYP = 'A'

		----Get contract nr of sale order nr
		--LEFT JOIN B20_04_IT_SALE_CONTRACT_DOCS
		--ON B20_04_IT_SALE_CONTRACT_DOCS.VBAK_VBELN = B20_05_IT_SALE_ORDER_DOCS.VBAP_VGBEL
		--AND CAST(B20_04_IT_SALE_CONTRACT_DOCS.VBAP_POSNR AS INT) = CAST(B20_05_IT_SALE_ORDER_DOCS.VBAP_VGPOS AS INT)
		--AND B20_05_IT_SALE_ORDER_DOCS.VBAK_VGTYP = 'G'

		--Get delivery key for sale order key
		LEFT JOIN B20_07_IT_DELIVERY_DOCS
		ON B20_07_IT_DELIVERY_DOCS.LIPS_VGBEL = B20_05_IT_SALE_ORDER_DOCS.VBAK_VBELN
		AND CAST(B20_07_IT_DELIVERY_DOCS.LIPS_VGPOS AS INT) = CAST(B20_05_IT_SALE_ORDER_DOCS.VBAP_POSNR AS INT)
	
		--Get good issue (Material) document for delivery document
		LEFT JOIN B20_08_IT_MATERIAL_DOCS
		ON B20_08_IT_MATERIAL_DOCS.VBFA_VBELV = B20_05_IT_SALE_ORDER_DOCS.VBAK_VBELN
		AND CAST(B20_08_IT_MATERIAL_DOCS.VBFA_POSNV AS INT) = CAST(B20_05_IT_SALE_ORDER_DOCS.VBAP_POSNR AS INT)

		--Get invoice document for delivery document
		LEFT JOIN B20_09_IT_INVOICE_DOCS
		ON B20_09_IT_INVOICE_DOCS.VBFA_VBELV = B20_05_IT_SALE_ORDER_DOCS.VBAK_VBELN
		AND CAST(B20_09_IT_INVOICE_DOCS.VBFA_POSNV AS INT) = CAST(B20_05_IT_SALE_ORDER_DOCS.VBAP_POSNR AS INT)

		--Get accounting document for this invoice
		LEFT JOIN B20_10_IT_INVOICE_ACCOUTING_DOCS
		ON B20_10_IT_INVOICE_ACCOUTING_DOCS.BKPF_AWTYP = 'VBRK'
		AND B20_10_IT_INVOICE_ACCOUTING_DOCS.BKPF_AWKEY = B20_09_IT_INVOICE_DOCS.VBRK_VBELN

		-- --Get clearing document of VBRK invoice accounting document
		LEFT JOIN B20_11_IT_OTC_CLEARING_DOCS
		ON B20_11_IT_OTC_CLEARING_DOCS.BSAID_BUKRS = B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_BUKRS
		AND B20_11_IT_OTC_CLEARING_DOCS.BSAID_GJAHR = B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_AUGGJ
		AND B20_11_IT_OTC_CLEARING_DOCS.BSAID_BELNR = B20_10_IT_INVOICE_ACCOUTING_DOCS.BSAID_AUGBL
		ORDER BY ZF_SALE_ORDER_DOC_KEY


		
		/*
			Add column to flag all the row have been in access conflict.
		*/

		-- ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_DOCS_ACCESS_CONFLICT_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_SALE_ORDER_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_DELIVERY_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_GOODISSUE_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_INVOICE_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_FI_INVOICE_RISK_FLAG NVARCHAR(3) DEFAULT 'No'  WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_20_ZF_FI_PAYMENT_RISK_FLAG NVARCHAR(3) DEFAULT 'No'  WITH VALUES;
	


		/* 
			Add some new columns necessary for OTC SOD test type 1: Customer and Sale document testing
		*/

		--	Add a column to flag the documents in exception type 1
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_21_ZF_CUSTOMER_AND_ORDER_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
	
		--	User create sale order header/item and customer is the same. flag
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_21_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_21_ZF_CUSTOMER_AND_ORDER_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;


		/* 
			Add some new columns necessary for OTC SOD test type 2: Customer, sale document, delivery document testing
		*/
		--	Add a column to flag the documents in exception type 2
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_22_ZF_CUSTOMER_ORDER_AND_DELIVERY_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
	

		--	User create customer, sale order header/item and delivery header/item documents is the same. flag
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_22_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_22_ZF_CUSTOMER_ORDER_AND_DELIVERY_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;
	

		--	User create sale order header/item and delivery header/item documents is the same. flag
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_22_ZF_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_22_ZF_ORDER_AND_DELIVERY_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;



		/* 
			Add some new columns necessary for OTC SOD test type 3: Customer, sale document, delivery document, material document testing
		*/

		-- Add a column to flag the documents in exception type 3 
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_CUSTOMER_ORDER_DELIVERY_AND_MATERIAL_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;

		-- User create customer, sale order header/item and material document is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_MKPF_USNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_CUSTOMER_ORDER_AND_MATERIAL_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create customer, sale order header/item, delivery and material document is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_SAME_MKPF_USNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_CUSTOMER_ORDER_DELIVERY_AND_MATERIAL_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create sale order header/item, delivery and material document is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_SAME_MKPF_USNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_ORDER_DELIVERY_AND_MATERIAL_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create sale order header/item ,material document is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_VBAK_VBAP_ERNAM_SAME_MKPF_USNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_23_ZF_ORDER_AND_MATERIAL_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;




		/* 
			Add some new columns necessary for OTC SOD test type 4: Customer, sale document, delivery, matrial document, invoice testing
		*/

		-- Add a column to flag the documents in exception type 4 
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_CUSTOMER_ORDER_DELIVERY_MATERIAL_AND_INVOICE_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;

		-- User create customer, sale order header/item, material document and invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_MKPF_USNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_CUSTOMER_ORDER_MATERIAL_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create sale order header/item, material document and invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_VBAK_VBAP_ERNAM_SAME_MKPF_USNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_ORDER_MATERIAL_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create sale order header/item, delivery, material document and invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_SAME_MKPF_USNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_ORDER_DELIVERY_MATERIAL_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create customer, sale order header/item, delivery, material document and invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_SAME_MKPF_USNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_CUSTOMER_ORDER_DELIVERY_MATERIAL_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create customer, sale order header/item, delivery, invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_CUSTOMER_ORDER_DELIVERY_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create sale order header/item, delivery, invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_VBAK_VBAP_ERNAM_SAME_LIKP_LIPS_ERNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_ORDER_DELIVERY_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create customer, sale order header/item, invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_KNA1_ERNAM_SAME_VBAK_VBAP_ERNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_CUSTOMER_ORDER_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User sale order header/item, invoice header/itm is the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_VBAK_VBAP_ERNAM_SAME_VBRK_VBRP_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_24_ZF_ORDER_AND_INVOICE_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;


		-- /* 
		-- 	Add some new columns necessary for OTC SOD test type 5: Customer, invoice, payment
		-- */

		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_25_ZF_CUSTOMER_FI_INVOICE_AND_FI_PAYMENT_RISK_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;

		-- User create customer, invoice, payment are the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_25_ZF_KNA1_ERNAM_SAME_FI_INVOICE_ERNAM_SAME_FI_PAYMENT_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_25_ZF_CUSTOMER_FI_INVOICE_AND_FI_PAYMENT_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		-- User create invoice, payment are the same
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_25_ZF_FI_INVOICE_ERNAM_SAME_FI_PAYMENT_ERNAM_FLAG NVARCHAR(3) DEFAULT 'No' WITH VALUES;
		ALTER TABLE B20_20_CENTER_FACT_TABLE ADD B20_25_ZF_FI_INVOICE_AND_FI_PAYMENT_RISK_USER NVARCHAR(100) DEFAULT '' WITH VALUES;

		--Add prefix for table
		EXEC SP_RENAME_FIELD 'B20_05_','B20_05_IT_SALE_ORDER_DOCS'
		EXEC SP_RENAME_FIELD 'B20_07_','B20_07_IT_DELIVERY_DOCS'
		EXEC SP_RENAME_FIELD 'B20_08_','B20_08_IT_MATERIAL_DOCS'
		EXEC SP_RENAME_FIELD 'B20_09_','B20_09_IT_INVOICE_DOCS'
		EXEC SP_RENAME_FIELD 'B20_10_','B20_10_IT_INVOICE_ACCOUTING_DOCS'
		EXEC SP_RENAME_FIELD 'B20_11_', 'B20_11_IT_OTC_CLEARING_DOCS'
		EXEC SP_REMOVE_TABLES '%_TT_%'

END
GO
