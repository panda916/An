USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Khoi
-- Create date: <Create Date,,>
-- Description:	Create a global table for process mining
-- =============================================
CREATE   PROCEDURE [dbo].[script_PM01_GLOBAL_TABLE]

AS
--DYNAMIC_SCRIPT_START
/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('_DatabaseLogTable', 'U') IS NULL BEGIN CREATE TABLE [dbo].[_DatabaseLogTable] ([Database] nvarchar(max) NULL,[Object] nvarchar(max) NULL,[Object Type] nvarchar(max) NULL,[User] nvarchar(max) NULL,[Date] date NULL,[Time] time NULL,[Description] nvarchar(max) NULL,[Table] nvarchar(max),[Rows] int) END

--Log start of procedure
INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE 	 
			 @currency nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'currency')
			,@date1 nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'date1')
			,@date2 nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'date2')
			,@downloaddate nvarchar(max)		= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'downloaddate')
			,@exchangeratetype nvarchar(max)	= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'exchangeratetype')
			,@language1 nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'language1')
			,@language2 nvarchar(max)			= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'language2')
			,@year nvarchar(max)				= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'year')
			,@id nvarchar(max)					= (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'id')
			,@ZV_LIMIT nvarchar(max)		    = (SELECT [GLOBALS_VALUE] FROM [AM_GLOBALS] WHERE [GLOBALS_PARAMETER] = 'ZV_LIMIT')
			,@errormsg NVARCHAR(MAX)
			
DECLARE @dateformat varchar(3)
SET @dateformat   = (SELECT dbo.get_param('dateformat'))
SET DATEFORMAT @dateformat;



--Step 1 Create fact table for Process mining test
--Add the changes cube to the fact table
EXEC SP_REMOVE_TABLES 'PM_%'
EXEC SP_DROPTABLE 'TEMP1'
EXEC SP_DROPTABLE 'TEMP2'
EXEC SP_DROPTABLE 'TEMP3'
EXEC SP_DROPTABLE PM_01_IT_GLOBAL_TABLE

SELECT DISTINCT

B25_01_IT_PTP_GLOBAL_TABLE.*,
CONCAT(
		DBO.TRIM(B21_03_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_03_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_03_CDHDR_CHANGENR)) AS ZF_PO_APPR_KEY,
B21_03_CDHDR_USERNAME AS ZF_PO_APPR_USER,
B21_03_V_USERNAME_NAME_TEXT AS ZF_PO_APPR_USERNAME,
B21_03_CDHDR_UDATE AS ZF_PO_APPR_DATE,
IIF(B21_03_CDHDR_OBJECTID IS NOT NULL,EKPO_BUKRS,NULL) AS ZF_PO_APPR_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_05_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_05_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_05_CDHDR_CHANGENR)) AS ZF_PO_PRICE_KEY,
B21_05_CDHDR_USERNAME AS ZF_PO_PRICE_USER,
B21_05_V_USERNAME_NAME_TEXT AS ZF_PO_PRICE_USERNAME,
B21_05_CDHDR_UDATE AS ZF_PO_PRICE_DATE,
IIF(B21_05_CDHDR_OBJECTID IS NOT NULL,EKPO_BUKRS,NULL) AS ZF_PO_PRICE_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_07_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_07_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_07_CDHDR_CHANGENR)) AS ZF_PO_DATE_KEY,
B21_07_CDHDR_USERNAME AS ZF_PO_DATE_USER,
B21_07_V_USERNAME_NAME_TEXT AS ZF_PO_DATE_USERNAME,
B21_07_CDHDR_UDATE AS ZF_PO_DATE_DATE,
IIF(B21_07_CDHDR_OBJECTID IS NOT NULL,EKPO_BUKRS,NULL) AS ZF_PO_DATE_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_09_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_09_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_09_CDHDR_CHANGENR)) AS ZF_PO_AMOUNT_KEY,
B21_09_CDHDR_USERNAME AS ZF_PO_AMOUNT_USER,
B21_09_V_USERNAME_NAME_TEXT AS ZF_PO_AMOUNT_USERNAME,
B21_09_CDHDR_UDATE AS ZF_PO_AMOUNT_DATE,
IIF(B21_09_CDHDR_OBJECTID IS NOT NULL,EKPO_BUKRS,NULL) AS ZF_PO_AMOUNT_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_11_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_11_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_11_CDHDR_CHANGENR)) AS ZF_RELEASE_STRATEGY_KEY,
B21_11_CDHDR_USERNAME AS ZF_RELEASE_STRATEGY_USER,
B21_11_V_USERNAME_NAME_TEXT AS ZF_RELEASE_STRATEGY_USERNAME,
B21_11_CDHDR_UDATE AS ZF_RELEASE_STRATEGY_DATE,
IIF(B21_11_CDHDR_OBJECTID IS NOT NULL,EKPO_BUKRS,NULL) AS ZF_RELEASE_STRATEGY_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_14_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_14_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_14_CDHDR_CHANGENR)) AS ZF_RELEASE_INV_KEY,
B21_14_CDHDR_USERNAME AS ZF_RELEASE_INV_USER,
B21_14_V_USERNAME_NAME_TEXT AS ZF_RELEASE_INV_USERNAME,
B21_14_CDHDR_UDATE AS ZF_RELEASE_INV_DATE,
IIF(B21_14_CDHDR_OBJECTID IS NOT NULL,RSEG_BUKRS,NULL) AS ZF_RELEASE_INV_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_16_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_16_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_16_CDHDR_CHANGENR)) AS ZF_INV_VALUE_KEY,
B21_16_CDHDR_USERNAME AS ZF_INV_VALUE_USER,
B21_16_V_USERNAME_NAME_TEXT AS ZF_INV_VALUE_USERNAME,
B21_16_CDHDR_UDATE AS ZF_INV_VALUE_DATE,
IIF(B21_16_CDHDR_OBJECTID IS NOT NULL,RSEG_BUKRS,NULL) AS ZF_INV_VALUE_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_18_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_18_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_18_CDHDR_CHANGENR)) AS ZF_INV_APPR_KEY,
B21_18_CDHDR_USERNAME AS ZF_INV_APPR_USER,
B21_18_V_USERNAME_NAME_TEXT AS ZF_INV_APPR_USERNAME,
B21_18_CDHDR_UDATE AS ZF_INV_APPR_DATE,
IIF(B21_18_CDHDR_OBJECTID IS NOT NULL,RSEG_BUKRS,NULL) AS ZF_INV_APPR_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_24_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_24_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_24_CDHDR_CHANGENR)) AS ZF_RELEASE_GROUP_KEY,
B21_24_CDHDR_USERNAME AS ZF_RELEASE_GROUP_USER,
B21_24_V_USERNAME_NAME_TEXT AS ZF_RELEASE_GROUP_USERNAME,
B21_24_CDHDR_UDATE AS ZF_RELEASE_GROUP_DATE,
IIF(B21_24_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_RELEASE_GROUP_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_25_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_25_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_25_CDHDR_CHANGENR)) AS ZF_SUPP_BLOCK_KEY,
B21_25_CDHDR_USERNAME AS ZF_SUPP_BLOCK_USER,
B21_25_V_USERNAME_NAME_TEXT AS ZF_SUPP_BLOCK_USERNAME,
B21_25_CDHDR_UDATE AS ZF_SUPP_BLOCK_DATE,
IIF(B21_25_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_SUPP_BLOCK_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_26_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_26_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_26_CDHDR_CHANGENR)) AS ZF_SUPP_PAY_TERMS_KEY,
B21_26_CDHDR_USERNAME AS ZF_SUPP_PAY_TERMS_USER,
B21_26_V_USERNAME_NAME_TEXT AS ZF_SUPP_PAY_TERMS_USERNAME,
B21_26_CDHDR_UDATE AS ZF_SUPP_PAY_TERMS_DATE,
IIF(B21_26_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_SUPP_PAY_TERMS_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_29_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_29_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_29_CDHDR_CHANGENR)) AS ZF_PAY_METHOD_KEY,
B21_29_CDHDR_USERNAME AS ZF_PAY_METHOD_USER,
B21_29_V_USERNAME_NAME_TEXT AS ZF_PAY_METHOD_USERNAME,
B21_29_CDHDR_UDATE AS ZF_PAY_METHOD_DATE,
IIF(B21_29_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_PAY_METHOD_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_31_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_31_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_31_CDHDR_CHANGENR)) AS ZF_PAY_BLOCK_KEY,
B21_31_CDHDR_USERNAME AS ZF_PAY_BLOCK_USER,
B21_31_V_USERNAME_NAME_TEXT AS ZF_PAY_BLOCK_USERNAME,
B21_31_CDHDR_UDATE AS ZF_PAY_BLOCK_DATE,
IIF(B21_31_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_PAY_BLOCK_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_20_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_20_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_20_CDHDR_CHANGENR)) AS ZF_IBAN_CHANGE_KEY,
B21_20_CDHDR_USERNAME AS ZF_IBAN_CHANGE_USER,
B21_20_V_USERNAME_NAME_TEXT AS ZF_IBAN_CHANGE_USERNAME,
B21_20_CDHDR_UDATE AS ZF_IBAN_CHANGE_DATE,
IIF(B21_20_CDHDR_OBJECTID IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_IBAN_CHANGE_COMPANY_CODE,
CONCAT(
		DBO.TRIM(B21_39_CDHDR_OBJECTCLAS),'-',
		DBO.TRIM(B21_39_CDHDR_OBJECTID),'-',
		DBO.TRIM(B21_39_CDHDR_CHANGENR)) AS ZF_FI_INVOICE_VALUE_KEY,
B21_39_CDHDR_USERNAME AS ZF_FI_INVOICE_VALUE_USER,
B21_39_V_USERNAME_NAME_TEXT AS ZF_FI_INVOICE_VALUE_USERNAME,
B21_39_CDHDR_UDATE AS ZF_FI_INVOICE_VALUE_DATE,
IIF(B21_39_CDHDR_OBJECTCLAS IS NOT NULL,BSAIK_BUKRS_INV,NULL) AS ZF_FI_INVOICE_VALUE_COMPANY_CODE,
CASE WHEN  
	EKPO_EBELN IS NOT NULL AND ZF_BSAIK_BUKRS_GJAHR_BELNR_BUZEI_PAY <>'' THEN 'X'
	ELSE '' END  ZF_PAYMENT_HAS_PO_FLAG,
CASE WHEN 
	EKPO_EBELN IS NOT NULL AND ZF_BSAIK_BUKRS_GJAHR_BELNR_BUZEI <>'' THEN 'X'
	ELSE '' END  ZF_INVOICE_HAS_PO_FLAG,
CASE WHEN LEN(EKPO_MATKL)=4 THEN 'X' ELSE '' END ZF_PRODUCT_FLAG,
CASE WHEN 
	EKPO_EBELN IS NOT NULL AND 
	B21_05_CDHDR_OBJECTID IS NOT NULL THEN 'X'
	ELSE '' END ZF_PO_HAS_PRICE_CHANGE
INTO  PM_01_IT_GLOBAL_TABLE
FROM B25_01_IT_PTP_GLOBAL_TABLE
--Add the changes table
--PO approval

LEFT JOIN B21_03_IT_PO_APPROVAL 
	ON B21_03_CDHDR_OBJECTID=EKPO_EBELN

--PO price change

LEFT JOIN B21_05_IT_PO_PRICE_CHANGE 
	ON B21_05_CDHDR_OBJECTID=EKPO_EBELN

--PO date change

LEFT JOIN B21_07_IT_PO_DATE_CHANGE 
	ON B21_07_CDHDR_OBJECTID=EKPO_EBELN

--PO amount change

LEFT JOIN B21_09_IT_PO_AMOUNT_CHANGE 
	ON B21_09_CDHDR_OBJECTID=EKPO_EBELN

-- Release strategy

LEFT JOIN B21_11_IT_RELEASE_STRATEGY
	ON B21_11_CDHDR_OBJECTID=EKPO_EBELN

--Release invoice required

LEFT JOIN B21_14_IT_RELEASE_INVOICE
	ON DBO.TRIM(B21_14_CDHDR_OBJECTID) LIKE CONCAT('%',RSEG_BELNR,RSEG_GJAHR,'%')
AND (ISNULL(RSEG_BELNR,'')<>'' OR ISNULL(RSEG_GJAHR,'')<>'')
--Invoice value changes

LEFT JOIN B21_16_IT_INV_VALUE
	ON DBO.TRIM(B21_16_CDHDR_OBJECTID) LIKE CONCAT('%',RSEG_BELNR,RSEG_GJAHR,'%')
AND (ISNULL(RSEG_BELNR,'')<>'' AND ISNULL(RSEG_GJAHR,'')<>'')
--Invoice approval

LEFT JOIN B21_18_IT_INV_APPROVAL
	ON DBO.TRIM(B21_18_CDHDR_OBJECTID) LIKE CONCAT('%',RSEG_BELNR,RSEG_GJAHR,'%')
AND (ISNULL(RSEG_BELNR,'')<>'' AND ISNULL(RSEG_GJAHR,'')<>'')
--Realse group

LEFT JOIN B21_24_IT_RELEASE_GROUP
	ON 
	   DBO.TRIM(B21_24_CDHDR_OBJECTID)=DBO.TRIM(BSAIK_LIFNR_INV) 
--Supplier block

LEFT JOIN B21_25_IT_SUPP_BLOCK
	ON 
	   DBO.TRIM(B21_25_CDHDR_OBJECTID)=DBO.TRIM(BSAIK_LIFNR_INV) 

--Supplier payment term

LEFT JOIN B21_26_IT_SUPP_PAYMENT_TERMS
	ON
	   DBO.TRIM(B21_26_CDHDR_OBJECTID)=DBO.TRIM(BSAIK_LIFNR_INV) 

--Change to payment method

LEFT JOIN B21_29_IT_PAYMENT_METHOD
	ON DBO.TRIM(B21_29_CDHDR_OBJECTID) LIKE CONCAT('%',DBO.TRIM(BSAIK_BUKRS_INV),DBO.TRIM(BSAIK_BELNR_INV),DBO.TRIM(BSAIK_GJAHR_INV),'%')
	AND (ISNULL(BSAIK_BUKRS_INV,'')<>'' AND ISNULL(BSAIK_BELNR_INV,'')<>'' AND ISNULL(BSAIK_GJAHR_INV,'')<>'')
-- FI invoice price change

LEFT JOIN B21_39_IT_FI_INVOICE_VALUE
	ON DBO.TRIM(B21_39_CDHDR_OBJECTID) LIKE CONCAT('%',DBO.TRIM(BSAIK_BUKRS_PAY),DBO.TRIM(BSAIK_BELNR_PAY),DBO.TRIM(BSAIK_GJAHR_PAY),'%')
	AND (ISNULL(BSAIK_BUKRS_INV,'')<>'' AND ISNULL(BSAIK_BELNR_INV,'')<>'' AND ISNULL(BSAIK_GJAHR_INV,'')<>'')
	AND B21_39_CDHDR_UDATE>=BSAIK_BLDAT_PAY
--Change to payment block

LEFT JOIN B21_31_IT_PAYMENT_BLOCK
	ON DBO.TRIM(B21_31_CDHDR_OBJECTID)LIKE CONCAT('%',DBO.TRIM(BSAIK_BUKRS_INV),DBO.TRIM(BSAIK_BELNR_INV),DBO.TRIM(BSAIK_GJAHR_INV),'%')
	AND (ISNULL(BSAIK_BUKRS_INV,'')<>'' AND ISNULL(BSAIK_BELNR_INV,'')<>'' AND ISNULL(BSAIK_GJAHR_INV,'')<>'')
--Change to IBAN
LEFT JOIN B21_20_IT_CHANGE_IBAN
	ON DBO.TRIM(B21_20_LFBK_LIFNR)=DBO.TRIM(BSAIK_LIFNR_INV)
--Rename the fields
EXEC SP_RENAME_FIELD 'PM_01_', PM_01_IT_GLOBAL_TABLE

GO
