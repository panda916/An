USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[script_DC15_BANK_CHANGE]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
/* Initiate the log */ 
----Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END
 
--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
 
/* Initialize parameters from globals table */
 
     DECLARE  
                      @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
                     ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
                     ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
                     ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
                     ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
                     ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
                     ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
                     ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
                     ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
                     ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
                     ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
					 ,@ZV_SAME_QUARTER_BY_BLDAT NVARCHAR(MAX) = ISNULL((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_SAME_QUARTER_BY_BLDAT'), '')

--Step 1/ Compare values (USD) between table B34_14_IT_REGUP_DETAIL_NEW (use TCURR and TCURF) and table B34_14_IT_REGUP_DETAIL (use AM_EXCHNG)
EXEC SP_DROPTABLE 	'DC15_01_IT_REGUP_DETAIL' 

SELECT 
	A.B34H_REGUP_BUKRS,
	A.B34H_REGUP_BELNR,
	A.B34H_REGUP_GJAHR,
	A.B34H_REGUP_BUZEI,
	A.B34H_REGUP_LAUFD,
	T001_WAERS,
	SUM(A.B34H_REGUP_DMBTR) AS B34H_REGUP_DMBTR,
	SUM(B.B34H_ZF_REGUP_DMBTR_S_CUC) AS B34H_ZF_REGUP_DMBTR_S_CUC_OLD,
	SUM(A.B34H_ZF_REGUP_DMBTR_S_CUC) AS B34H_ZF_REGUP_DMBTR_S_CUC_NEW,
	MAX(AM_EXCHNG.EXCHNG_RATIO) AS EXCH_RATE_OLD,
	MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) * ISNULL(TCURX_COC.TCURX_factor,1)) AS EXCH_RATE_NEW
INTO DC15_01_IT_REGUP_DETAIL
FROM 
(
	SELECT 
		B34H_REGUP_BUKRS,
		B34H_REGUP_BELNR,
		B34H_REGUP_GJAHR,
		B34H_REGUP_BUZEI,
		B34H_REGUP_LAUFD,
		SUM(B34H_REGUP_DMBTR) AS B34H_REGUP_DMBTR,
		SUM(B34H_ZF_REGUP_DMBTR_S_CUC) AS B34H_ZF_REGUP_DMBTR_S_CUC
	FROM B34_14_IT_REGUP_DETAIL_NEW
	--WHERE B34H_REGUP_SHKZG = 'S'
	GROUP BY B34H_REGUP_BUKRS,
		B34H_REGUP_BELNR,
		B34H_REGUP_GJAHR,
		B34H_REGUP_BUZEI,
		B34H_REGUP_LAUFD
) A
INNER JOIN 
(
	SELECT 
		B34H_REGUP_BUKRS,
		B34H_REGUP_BELNR,
		B34H_REGUP_GJAHR,
		B34H_REGUP_BUZEI,
		B34H_REGUP_LAUFD,
		SUM(B34H_REGUP_DMBTR) AS B34H_REGUP_DMBTR,
		SUM (B34H_ZF_REGUP_DMBTR_S_CUC) AS B34H_ZF_REGUP_DMBTR_S_CUC
	FROM B34_14_IT_REGUP_DETAIL
	--WHERE B34H_REGUP_SHKZG = 'S'
	GROUP BY B34H_REGUP_BUKRS,
		B34H_REGUP_BELNR,
		B34H_REGUP_GJAHR,
		B34H_REGUP_BUZEI,
		B34H_REGUP_LAUFD
) B
ON A.B34H_REGUP_BUKRS = B.B34H_REGUP_BUKRS AND
A.B34H_REGUP_BELNR = B.B34H_REGUP_BELNR AND
A.B34H_REGUP_GJAHR = B.B34H_REGUP_GJAHR AND
A.B34H_REGUP_BUZEI = B.B34H_REGUP_BUZEI AND
A.B34H_REGUP_LAUFD = B.B34H_REGUP_LAUFD
LEFT JOIN A_T001
				ON  A.B34H_REGUP_BUKRS = A_T001.T001_BUKRS
LEFT JOIN AM_EXCHNG
ON     (T001_WAERS = AM_EXCHNG.EXCHNG_FROM) AND
		(AM_EXCHNG.EXCHNG_TO = @currency)
	-- Add currency factor for house currency
LEFT JOIN B00_TCURX TCURX_COC
ON T001_WAERS = TCURX_COC.TCURX_CURRKEY

LEFT JOIN B00_IT_TCURF TCURF_CUC
	ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
	AND TCURF_CUC.TCURF_TCURR  = @currency 
	AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B34H_REGUP_LAUFD
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)
-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A.B34H_REGUP_LAUFD
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 
GROUP BY 
	A.B34H_REGUP_BUKRS,
	A.B34H_REGUP_BELNR,
	A.B34H_REGUP_GJAHR,
	A.B34H_REGUP_BUZEI,
	A.B34H_REGUP_LAUFD,
	T001_WAERS

EXEC SP_UNNAME_FIELD 'B34H_',DC15_01_IT_REGUP_DETAIL
EXEC SP_RENAME_FIELD 'DC15_01_',DC15_01_IT_REGUP_DETAIL
GO
