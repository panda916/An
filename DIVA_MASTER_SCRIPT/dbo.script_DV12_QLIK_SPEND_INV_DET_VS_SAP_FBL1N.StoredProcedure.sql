USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 

--ALTER PROCEDURE [dbo].[DV12_DIVA_SPEND_INV_DET_VS_SAP_FBL1N]
CREATE     PROCEDURE [dbo].[script_DV12_QLIK_SPEND_INV_DET_VS_SAP_FBL1N]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN



/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
			

/*Test mode*/

SET ROWCOUNT @LIMIT_RECORDS

/*
    Title            : DV12: Compare DIVA Spend overview Summary of spend by supplier
	                   to SAP FBL1N
    --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |      Who |  Description
    08-08-2017             Nhat        Creation
	24-10-2018             Hung        Naming convention and logic fixes

	
*/


--Step 1/
-- Create table for send message back to DIVA_BULK_IMPORT.jar

	EXEC SP_DROPTABLE 'DV00_RT_USER_FEEDBACK_MESSAGE'

	CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE (OLD_NAME NVARCHAR(MAX), NEW_NAME NVARCHAR(MAX), _LOG NVARCHAR(MAX))

-- Step 2/

-- Adding the row number to help identify records 
-- which have the same Company Code, Vendor Number,Document Number, Document Type and Posting Date
-- Add DIVAQL_ prefix to field names
-- Totals from DIVA data 

	DECLARE @START DATE = (SELECT TOP 1 CONVERT(DATE,START_FROM_FILE_NAME,20) FROM ASAP_FBL1N)
	DECLARE @END DATE = (SELECT TOP 1 CONVERT(DATE,END_FROM_FILE_NAME,20) FROM ASAP_FBL1N)

	EXECUTE SP_DROPTABLE 'DV12_01_TT_DIVAQLPTP_SO'
		SELECT 
		   [Company Code] DIVAQL_BUKRS		
		  ,DBO.REMOVE_LEADING_ZEROES([Documnet number]) DIVAQL_BELNR
		  ,DBO.REMOVE_LEADING_ZEROES([Supplier nr]) DIVAQL_LIFNR
		  ,[Document type] DIVAQL_BLART
		  ,[Posting Date] DIVAQL_BUDAT
		  ,[Fiscal year]  DIVAQL_GJAHR
		  ,SUM(DBO.STRING_TO_NUMBER([Invoice Valuecoc])) DIVAQL_DMBTR
		  ,IIF(DBO.STRING_TO_NUMBER([Invoice Valuecoc]) > 0, 'DEBIT', 'CREDIT') ZF_DIVAQL_SHKZG
		INTO DV12_01_TT_DIVAQLPTP_SO
		FROM AQLIK_PTP_SO_DETAILS
		WHERE [Account Type] = 'K'
		GROUP BY 
			[Company Code]
			,[Documnet number]
			,[Supplier nr]
			,[Document type]
			,[Fiscal year]
			,[Posting Date]
			,IIF(DBO.STRING_TO_NUMBER([Invoice Valuecoc]) > 0, 'DEBIT', 'CREDIT')
		
		EXECUTE SP_DROPTABLE 'DV12_01B_VENDOR_FLAG'
		SELECT B11B_BSAIK_BUKRS, B11B_BSAIK_GJAHR, B11B_BSAIK_BELNR, MAX(B11B_ZF_FLAG_SUMMARY) AS B11B_ZF_VENDOR_FLAG_SUMMARY
		INTO DV12_01B_VENDOR_FLAG
		FROM B11_04_IT_PTP_APA
		GROUP BY B11B_BSAIK_BELNR, B11B_BSAIK_BUKRS, B11B_BSAIK_GJAHR
		ALTER TABLE DV12_01B_VENDOR_FLAG ALTER COLUMN B11B_ZF_VENDOR_FLAG_SUMMARY varchar(100);
		EXEC SP_CREATE_INDEX 'B11B_BSAIK_BUKRS, B11B_BSAIK_GJAHR, B11B_BSAIK_BELNR, B11B_ZF_VENDOR_FLAG_SUMMARY', 'DV12_01B_VENDOR_FLAG'

--Step 3A: adding the row number to help identify records 
--which have the same Company Code, Vendor Number,Document Number, Document Type and Posting Date
--EXEC SP_SAP_REPORT_FIELD_TO_STANDARD 'ASAP_FBL1N'
--Totals from SAP report
--Add SAP_ prefix to field names

EXEC SP_DROPTABLE 'DV12_02_TT_SAP_SO_REPORT'

SELECT 
		 BUKRS SAP_BUKRS
		,DBO.REMOVE_LEADING_ZEROES(BELNR) SAP_BELNR
		,Type SAP_BLART
		,BUDAT SAP_BUDAT
		,DBO.REMOVE_LEADING_ZEROES(VENDOR) SAP_LIFNR
		,YEAR(CONVERT(DATETIME,START_FROM_FILE_NAME,112)) SAP_GJAHR
		,SUM(DMBTR_CONVERTED) SAP_DMBTR
		,IIF(DMBTR_CONVERTED > 0, 'DEBIT', 'CREDIT') ZF_SAP_SHKZG

	INTO DV12_02_TT_SAP_SO_REPORT
	FROM ASAP_FBL1N
	WHERE BELNR <> ''
	GROUP BY BUKRS, BELNR, Type, BUDAT, VENDOR, YEAR(CONVERT(DATETIME,START_FROM_FILE_NAME,112)), IIF(DMBTR_CONVERTED > 0, 'DEBIT', 'CREDIT')

--Step 4/
--Compare totals from Qlik to totals from SAP


	EXECUTE SP_DROPTABLE 'DV12_03_TT_COMP_DIVAQL_SAP_SO'

	SELECT	
		  [DIVAQL_BUKRS]
		  ,[SAP_BUKRS]	  
		  ,[DIVAQL_BELNR]
		  ,[SAP_BELNR]
		  ,[DIVAQL_LIFNR]
		  ,[SAP_LIFNR]
		  ,[DIVAQL_BLART]
		  ,[SAP_BLART]
		  ,SAP_BUDAT
		  ,DIVAQL_BUDAT
		  ,[DIVAQL_GJAHR]
		  ,SAP_GJAHR
		  ,ZF_DIVAQL_SHKZG
		  ,ZF_SAP_SHKZG
		 -- ,B11B_ZF_VENDOR_FLAG_SUMMARY ZF_VENDOR_FLAG_SUMMARY
		  ,ISNULL(DIVAQL_DMBTR, 0) DIVAQL_DMBTR
		  ,ISNULL([SAP_DMBTR], 0) SAP_DMBTR
		  ,ISNULL(DIVAQL_DMBTR, 0) - ISNULL(SAP_DMBTR, 0) AS ZF_DIVAQLMINUS_SAP_AMOUNT,
			CASE WHEN	ISNULL(DIVAQL_LIFNR ,'') <> '' AND
						ISNULL(SAP_LIFNR ,'') = '' 
						OR ISNULL(DIVAQL_GJAHR ,'') <> '' AND
						ISNULL(SAP_GJAHR ,'') = '' 
						OR ISNULL(DIVAQL_BLART ,'') <> '' AND
						ISNULL(SAP_BLART ,'') = '' 
					THEN 'Invoice in DIVA not SAP'
				 WHEN	ISNULL(DIVAQL_LIFNR ,'') = '' AND
						ISNULL(SAP_LIFNR ,'') <> '' 
						OR ISNULL(DIVAQL_GJAHR ,'') = '' AND
						ISNULL(SAP_GJAHR ,'') <> '' 
						OR ISNULL(DIVAQL_BLART ,'') = '' AND
						ISNULL(SAP_BLART ,'') <> '' 
					THEN 'Invoice in SAP not DIVA'
				WHEN	ISNULL(DIVAQL_LIFNR ,'') <> '' AND
						ISNULL(SAP_LIFNR ,'') <> '' 
						OR ISNULL(DIVAQL_GJAHR ,'') <> '' AND
						ISNULL(SAP_GJAHR ,'') <> '' 
						OR ISNULL(DIVAQL_BLART ,'') <> '' AND
						ISNULL(SAP_BLART ,'') <> '' 
					THEN 'Invoice in SAP and DIVA'
				WHEN	ISNULL(DIVAQL_LIFNR ,'') = '' AND
						ISNULL(SAP_LIFNR ,'') = '' 
						OR ISNULL(DIVAQL_GJAHR ,'') = '' AND
						ISNULL(SAP_GJAHR ,'') = '' 
						OR ISNULL(DIVAQL_BLART ,'') = '' AND
						ISNULL(SAP_BLART ,'') = '' 
					THEN 'Invoice not in SAP or DIVA'
				ELSE	'Case not identified'
			END ZF_SUPP_MATCH_CATEGORY
	INTO	DV12_03_TT_COMP_DIVAQL_SAP_SO
	FROM	DV12_01_TT_DIVAQLPTP_SO
		FULL OUTER JOIN DV12_02_TT_SAP_SO_REPORT
			ON	DV12_01_TT_DIVAQLPTP_SO.DIVAQL_BUKRS	= DV12_02_TT_SAP_SO_REPORT.SAP_BUKRS
			AND	DV12_01_TT_DIVAQLPTP_SO.DIVAQL_LIFNR	= DV12_02_TT_SAP_SO_REPORT.SAP_LIFNR
			AND	DV12_01_TT_DIVAQLPTP_SO.DIVAQL_BELNR	= DV12_02_TT_SAP_SO_REPORT.SAP_BELNR
			AND DV12_01_TT_DIVAQLPTP_SO.DIVAQL_BLART	= DV12_02_TT_SAP_SO_REPORT.SAP_BLART
			AND DV12_01_TT_DIVAQLPTP_SO.DIVAQL_GJAHR	= DV12_02_TT_SAP_SO_REPORT.SAP_GJAHR
			AND DV12_01_TT_DIVAQLPTP_SO.ZF_DIVAQL_SHKZG = DV12_02_TT_SAP_SO_REPORT.ZF_SAP_SHKZG
		/*OUTER APPLY (SELECT B11B_ZF_VENDOR_FLAG_SUMMARY FROM DV12_01B_VENDOR_FLAG
			WHERE DBO.REMOVE_LEADING_ZEROES(B11B_BSAIK_BELNR) = SAP_BELNR
			AND B11B_BSAIK_BUKRS = SAP_BUKRS
			AND B11B_BSAIK_GJAHR = SAP_BUDAT) DV12_01B_VENDOR_FLAG*/
	
--Step 5/
--Split the comparison into two tables: Enable independent filtering in QLIK

	EXEC SP_DROPTABLE 'DV12_04_RT_FULL_DIVAQL_SO'

	SELECT	DIVAQL_BUKRS
		  ,DIVAQL_BELNR
		  ,DIVAQL_LIFNR
		  ,DIVAQL_BLART
		  ,DIVAQL_BUDAT
		  ,DIVAQL_GJAHR
		  ,DIVAQL_DMBTR
		  ,DIVAQL_BUKRS + '|' +  DIVAQL_LIFNR + '|' + DIVAQL_BELNR AS ZF_KEY_JOIN_QLIK
	INTO	DV12_04_RT_FULL_DIVAQL_SO
	FROM	DV12_03_TT_COMP_DIVAQL_SAP_SO
	WHERE	DIVAQL_LIFNR IS NOT NULL
	
	EXEC sp_droptable 'DV12_05_RT_FULL_SAP_SO'

	SELECT	SAP_BUKRS
		  ,SAP_BELNR
		  ,SAP_BLART
		  ,SAP_LIFNR
		  ,SAP_GJAHR
		  ,SAP_BUDAT
		  ,SAP_DMBTR
		--  ,ZF_VENDOR_FLAG_SUMMARY
			,SAP_BUKRS + '|' +  SAP_LIFNR + '|' + SAP_BELNR AS ZF_KEY_JOIN_SAP
	INTO	DV12_05_RT_FULL_SAP_SO

	FROM	DV12_03_TT_COMP_DIVAQL_SAP_SO
	WHERE	SAP_LIFNR IS NOT NULL

--Step 6/
--Split the comparison into two discrepancy tables: Enable independent filtering in QLIK

	EXEC SP_DROPTABLE 'DV12_06_RT_DISC_DIVAQL_SAP_SO'
		
	SELECT  
		  DIVAQL_BUKRS
		  ,DIVAQL_BELNR
		  ,DIVAQL_LIFNR
		  ,DIVAQL_BLART
		  ,DIVAQL_BUDAT
		  ,DIVAQL_GJAHR
		  ,DIVAQL_DMBTR
		  ,ZF_DIVAQLMINUS_SAP_AMOUNT
		  ,ZF_SUPP_MATCH_CATEGORY
		  ,DIVAQL_BUKRS + '|' +  DIVAQL_LIFNR + '|' + DIVAQL_BELNR AS ZF_KEY_JOIN_QLIK
	INTO	DV12_06_RT_DISC_DIVAQL_SAP_SO
	FROM	DV12_03_TT_COMP_DIVAQL_SAP_SO
	WHERE
		(ABS(ZF_DIVAQLMINUS_SAP_AMOUNT) > 10 OR 
		ZF_SUPP_MATCH_CATEGORY = 'Invoice in DIVA not SAP' OR ZF_SUPP_MATCH_CATEGORY = 'Case not identified')
		AND NOT(
		ABS(ZF_DIVAQLMINUS_SAP_AMOUNT) > 10 AND 
		ZF_SUPP_MATCH_CATEGORY = 'Invoice in SAP not DIVA')

-- Discrepancy table for spend overview for SAP

	EXEC SP_DROPTABLE 'DV12_07_RT_DISC_SAP_DIVAQL_SO'

	SELECT	SAP_BUKRS
		  ,SAP_BELNR
		  ,SAP_BLART
		  ,SAP_LIFNR
		  ,SAP_GJAHR
		  ,SAP_BUDAT
		  ,SAP_DMBTR
		  ,ZF_DIVAQLMINUS_SAP_AMOUNT
		  ,ZF_SUPP_MATCH_CATEGORY
		  ,SAP_BUKRS + '|' +  SAP_LIFNR + '|' + SAP_BELNR AS ZF_KEY_JOIN_SAP
	INTO	DV12_07_RT_DISC_SAP_DIVAQL_SO
	FROM	DV12_03_TT_COMP_DIVAQL_SAP_SO
	WHERE
		(ABS(ZF_DIVAQLMINUS_SAP_AMOUNT) > 10 OR 
		ZF_SUPP_MATCH_CATEGORY = 'Invoice in SAP not DIVA' OR ZF_SUPP_MATCH_CATEGORY = 'Case not identified')
		AND NOT(
		ABS(ZF_DIVAQLMINUS_SAP_AMOUNT) > 10 AND 
		ZF_SUPP_MATCH_CATEGORY = 'Invoice in DIVA not SAP')

--Step 7/
--Rename field
EXEC SP_RENAME_FIELD 'DV12A_', 'DV12_04_RT_FULL_DIVAQL_SO'
EXEC SP_RENAME_FIELD 'DV12B_', 'DV12_05_RT_FULL_SAP_SO'
EXEC SP_RENAME_FIELD 'DV12C_', 'DV12_06_RT_DISC_DIVAQL_SAP_SO'
EXEC SP_RENAME_FIELD 'DV12D_', 'DV12_07_RT_DISC_SAP_DIVAQL_SO'

--Delete temporary tables
	EXECUTE SP_DROPTABLE 'DV12_01_TT_DIVAQLPTPSO_REPORT'
	EXECUTE SP_DROPTABLE 'DV12_02_TT_SAP_PTPSO_REPORT'
  	--EXECUTE SP_DROPTABLE 'DV12_03_TT_COMP_DIVAQL_SAP_SO'


-- Step 8/
--Send Finish Message for DIVA_BULK_IMPORT.jar: 

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV12 stored procedure has finished.')

/* log cube creation*/

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV12_04_RT_FULL_DIVAQL_SO',(SELECT COUNT(*) FROM DV12_04_RT_FULL_DIVAQL_SO) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV12_05_RT_FULL_SAP_SO',(SELECT COUNT(*) FROM DV12_05_RT_FULL_SAP_SO) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV12_06_RT_DISC_DIVAQL_SAP_SO',(SELECT COUNT(*) FROM DV12_06_RT_DISC_DIVAQL_SAP_SO) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV12_07_RT_DISC_SAP_DIVAQL_SO',(SELECT COUNT(*) FROM DV12_07_RT_DISC_SAP_DIVAQL_SO) 

/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL


END 

GO
