USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ALTER PROCEDURE [dbo].[qry_RULE_OTC-01-AR ageing]
CREATE     PROCEDURE [dbo].[script_B16_OTC_AR_ageing]

WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN

/*
	Title			: [qry_RULE_OTC-01-AR ageing]
	Description	:  
    
	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date			    |	Who			|	Description
	23-05-2017				EG				Initial version
	30-09-2017				HT				Update and standardisation for SID
	23-03-2022			    Thuan			Remove MANDT field in join
*/

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL


	----------------------------------------------------------------------------------------------------------------------------

	--Declare parameters here
      --Declare parameters here 
      DECLARE 	 
			 @currency nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')
			,@date1 nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date1')
			,@date2 nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date2')
			,@downloaddate nvarchar(max)		= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@exchangeratetype nvarchar(max)	= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@language1 nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language1')
			,@language2 nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language2')
			,@year nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'year')
			,@id nvarchar(max)					= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
 
 
/*Test mode*/
SET ROWCOUNT @LIMIT_RECORDS
	--------------------------------------------------------------------------------------------------------------------------
	-- step 1: Create a temp table with all month ends between @date1 and @date2
	DECLARE @STARTDATE date = (SELECT CAST(@date1 AS date))
	DECLARE @ENDDATE date = (SELECT CAST(@date2 AS date))

	EXEC SP_DROPTABLE 'B16_00_TT_SNAPSHOT_DATE'
	CREATE TABLE B16_00_TT_SNAPSHOT_DATE (GLOBALS_SYSTEM nvarchar(max), ZF_MNTH_END date)
	WHILE @STARTDATE <= @ENDDATE
	BEGIN 
		INSERT INTO B16_00_TT_SNAPSHOT_DATE 
		SELECT @id, EOMONTH(@STARTDATE)

		SET @STARTDATE = DATEADD(mm, 1, @STARTDATE)
	END
--	select * from B16_00_TT_SNAPSHOT_DATE
	--step 2: Enrich with compay code, mandant and fiscal year variant
	EXEC SP_DROPTABLE 'B16_01_TT_SNAPSHOT_BUKRS'
	SELECT [T001_MANDT], [T001_BUKRS], [T001_PERIV], ZF_MNTH_END 
	INTO B16_01_TT_SNAPSHOT_BUKRS 
	FROM A_T001
	INNER JOIN AM_SCOPE ON A_T001.T001_BUKRS = AM_SCOPE.SCOPE_CMPNY_CODE
	CROSS JOIN B16_00_TT_SNAPSHOT_DATE

	--step 3: Join T009B to get fiscal year and posting period for each month end in scope
	EXEC SP_DROPTABLE 'B16_02_TT_SNAPSHOT_POSTING_PER'
	SELECT
		B16_01_TT_SNAPSHOT_BUKRS.[T001_BUKRS]
		,ZF_MNTH_END -- AS [Snapshot date]
	INTO B16_02_TT_SNAPSHOT_POSTING_PER
	FROM
		B16_01_TT_SNAPSHOT_BUKRS
	ORDER BY
		[T001_BUKRS], ZF_MNTH_END ASC

	--step 4: link AR details to calculate ageing and determine clearing status as at each mont hend in scope
	EXEC SP_DROPTABLE 'B16_03_TT_AR_AGEING'

	SELECT
		B14_06_IT_ARE.B14_BSAID_MANDT
		,B14_06_IT_ARE.B14_BSAID_BUKRS 
		,B14_06_IT_ARE.B14_BSAID_GJAHR -- FISCAL YEAR
		,B14_06_IT_ARE.B14_BSAID_BELNR --[Document nr]
		,B14_06_IT_ARE.B14_BSAID_BUZEI --[Line item nr]
		,B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END
		,B14_06_IT_ARE.B14_BSAID_AUGDT --[Clearing date]
		,CASE 
			WHEN B14_06_IT_ARE.B14_BSAID_BUDAT > B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END THEN 'N/A'
			WHEN B14_06_IT_ARE.B14_BSAID_AUGDT > B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END AND B14_06_IT_ARE.B14_BSAID_BUDAT <= B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END THEN 'Open'
			WHEN ISNULL(B14_06_IT_ARE.B14_BSAID_AUGDT, '') = '' AND B14_06_IT_ARE.B14_BSAID_BUDAT <= B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END THEN 'Open'
			ELSE 'Cleared'
		END AS ZF_BUDAT_AUGDT_CLR_STATUS
		,B14_06_IT_ARE.B14_ZF_BLDAT_ZFBDT_DUE_DATE 
		,DATEDIFF(dd, B14_06_IT_ARE.B14_ZF_BLDAT_ZFBDT_DUE_DATE, B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END) AS ZF_BLDAT_ZFBDT_AGE_DUE_DATE --[Z_Age (calculated due date)]
		,B14_06_IT_ARE.B14_BSAID_BLDAT -- [Document date]
		,DATEDIFF(dd, B14_06_IT_ARE.B14_BSAID_BLDAT, B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END) AS ZF_BLDAT_AGE_DUE_DATE --[Z_Age (document date)]
		,B14_06_IT_ARE.B14_BSAID_ZFBDT --[Baseline date]
		,DATEDIFF(dd, B14_06_IT_ARE.B14_BSAID_ZFBDT, B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END) AS ZF_ZFBDT_AGE_DUE_DATE --[Z_Age (baseline date)]
		,B14_06_IT_ARE.B14_BSAID_BUDAT --[Posting date]
		,DATEDIFF(dd, B14_06_IT_ARE.B14_BSAID_BUDAT, B16_02_TT_SNAPSHOT_POSTING_PER.ZF_MNTH_END) AS ZF_BUDAT_AGE_DUE_DATE --[Z_Age (posting date)]

	INTO B16_03_TT_AR_AGEING
	FROM B14_06_IT_ARE
	LEFT JOIN B16_02_TT_SNAPSHOT_POSTING_PER
	ON  B14_06_IT_ARE.B14_BSAID_BUKRS = B16_02_TT_SNAPSHOT_POSTING_PER.T001_BUKRS 
		
	----------------------------------------------------------------------------------------------------------------------------

	--step 5: create OTC AR AGEING CUBE

	EXEC SP_DROPTABLE 'B16_04_IT_OTC_AR_AGEING'

	--Enter main select statements below
	SELECT 
		B14_BSAID_MANDT AS BSAID_MANDT
	   ,B14_BSAID_BUKRS AS BSAID_BUKRS
	   ,B14_BSAID_GJAHR AS BSAID_GJAHR
	   ,B14_BSAID_BELNR AS BSAID_BELNR
	   ,B14_BSAID_BUZEI AS BSAID_BUZEI
	   ,ZF_MNTH_END
	   ,B14_BSAID_AUGDT AS BSAID_AUGDT
	   ,ZF_BUDAT_AUGDT_CLR_STATUS
	   ,B14_ZF_BLDAT_ZFBDT_DUE_DATE AS ZF_BLDAT_ZFBDT_DUE_DATE 
	   ,ZF_BLDAT_ZFBDT_AGE_DUE_DATE
	   ,CASE 
		    WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < -360 THEN '1. < -360'
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < -180 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE >= -360 THEN '2. >= -360'
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < -90 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE >= -180 THEN '3. >= -180'
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < -60 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE >= -90 THEN '4. >= -90'	
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < -30 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE >= -60 THEN '5. >= -60'			
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE < 0  AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE >= -30 THEN '6. >= -30' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE = 0 THEN '7. Current (=0)' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 0  AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE <= 30 THEN '8. <= 30' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 30 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE <= 60 THEN '9. <= 60' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 60 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE <= 90 THEN '10. <= 90' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 90 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE <= 180 THEN '11. <= 180' 
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 180 AND ZF_BLDAT_ZFBDT_AGE_DUE_DATE <= 360 THEN '12. <= 360'
			WHEN ZF_BLDAT_ZFBDT_AGE_DUE_DATE > 360 THEN '13. > 360'
			ELSE '0. Unknown'
		END AS ZF_BLDAT_ZFBDT_CALCULATED_DUE_DATE --[Z_Age bucket (calculated due date)]
	   ,B14_BSAID_BLDAT AS BSAID_BLDAT
	   ,ZF_BLDAT_AGE_DUE_DATE
	   ,CASE 
			WHEN ZF_BLDAT_AGE_DUE_DATE < -360 THEN '1. > -360'
			WHEN ZF_BLDAT_AGE_DUE_DATE < -180 AND ZF_BLDAT_AGE_DUE_DATE >= -360 THEN '2. <= --360'
			WHEN ZF_BLDAT_AGE_DUE_DATE < -90 AND ZF_BLDAT_AGE_DUE_DATE >= -180 THEN '3. <= -180'
			WHEN ZF_BLDAT_AGE_DUE_DATE < -60 AND ZF_BLDAT_AGE_DUE_DATE >= -90 THEN '4. <= -90'
			WHEN ZF_BLDAT_AGE_DUE_DATE < -30 AND ZF_BLDAT_AGE_DUE_DATE >= -60 THEN '5. <= -60'
			WHEN ZF_BLDAT_AGE_DUE_DATE < 0 AND ZF_BLDAT_AGE_DUE_DATE >= -30 THEN '6. <= -30' 
 			WHEN ZF_BLDAT_AGE_DUE_DATE = 0 THEN '7. Current (= 0)' 
			WHEN ZF_BLDAT_AGE_DUE_DATE > 0 AND ZF_BLDAT_AGE_DUE_DATE <= 30 THEN '8. <= 30' 
			WHEN ZF_BLDAT_AGE_DUE_DATE > 30 AND ZF_BLDAT_AGE_DUE_DATE <= 60 THEN '9. <= 60' 
			WHEN ZF_BLDAT_AGE_DUE_DATE > 60 AND ZF_BLDAT_AGE_DUE_DATE <= 90 THEN '10. <= 90' 
			WHEN ZF_BLDAT_AGE_DUE_DATE > 90 AND ZF_BLDAT_AGE_DUE_DATE <= 180 THEN '11. <= 180' 
			WHEN ZF_BLDAT_AGE_DUE_DATE > 180 AND ZF_BLDAT_AGE_DUE_DATE <= 360 THEN '12. <= 360'
			WHEN ZF_BLDAT_AGE_DUE_DATE > 360 THEN '13. > 360'
			ELSE '0. Unknown'
		END AS ZF_BLDAT_AGE_BUCKET--[Z_Age bucket (document date)]
	   ,B14_BSAID_ZFBDT AS BSAID_ZFBDT
	   ,ZF_ZFBDT_AGE_DUE_DATE
	   ,CASE 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > -360 THEN '1. < -360'
			WHEN ZF_ZFBDT_AGE_DUE_DATE > -180 AND ZF_ZFBDT_AGE_DUE_DATE >= -360 THEN '2. >= -360'
			WHEN ZF_ZFBDT_AGE_DUE_DATE > -90 AND ZF_ZFBDT_AGE_DUE_DATE >= -180 THEN '3. >= -180' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > -60 AND ZF_ZFBDT_AGE_DUE_DATE >= -90 THEN '4. >= -90' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > -30 AND ZF_ZFBDT_AGE_DUE_DATE >= -60 THEN '5. >= -60' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 0 AND ZF_ZFBDT_AGE_DUE_DATE >= -30 THEN '6. >= -30' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE = 0 THEN '7. Current (= 0)' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 0 AND ZF_ZFBDT_AGE_DUE_DATE <= 30 THEN '8. <= 30' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 30 AND ZF_ZFBDT_AGE_DUE_DATE <= 60 THEN '9. <= 60' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 60 AND ZF_ZFBDT_AGE_DUE_DATE <= 90 THEN '10. <= 90' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 90 AND ZF_ZFBDT_AGE_DUE_DATE <= 180 THEN '11. <= 180' 
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 180 AND ZF_ZFBDT_AGE_DUE_DATE <= 360 THEN '12. <= 360'
			WHEN ZF_ZFBDT_AGE_DUE_DATE > 360 THEN '13. > 360'
			ELSE '0. Unknown'
		END AS ZF_ZFBDT_AGE_BUCKET--[Z_Age bucket (baseline date)]
	   ,B14_BSAID_BUDAT AS BSAID_BUDAT
	   ,ZF_BUDAT_AGE_DUE_DATE
	   ,CASE 
			WHEN ZF_BUDAT_AGE_DUE_DATE > -360 THEN '1. < -360'
			WHEN ZF_BUDAT_AGE_DUE_DATE > -180 AND ZF_BUDAT_AGE_DUE_DATE <= -360 THEN '2. >= -360'
			WHEN ZF_BUDAT_AGE_DUE_DATE > -90 AND ZF_BUDAT_AGE_DUE_DATE <= -180 THEN '3. >= -180' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > -60 AND ZF_BUDAT_AGE_DUE_DATE <= -90 THEN '4. >= -90'
			WHEN ZF_BUDAT_AGE_DUE_DATE > -30 AND ZF_BUDAT_AGE_DUE_DATE <= -60 THEN '5. >= -60' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 0 AND ZF_BUDAT_AGE_DUE_DATE <= -30 THEN '6. >= -30' 
			WHEN ZF_BUDAT_AGE_DUE_DATE = 0 THEN '7. Current (= 0)' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 0 AND ZF_BUDAT_AGE_DUE_DATE <= 30 THEN '8. <= 30' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 30 AND ZF_BUDAT_AGE_DUE_DATE <= 60 THEN '9. <= 60' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 60 AND ZF_BUDAT_AGE_DUE_DATE <= 90 THEN '10. <= 90' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 90 AND ZF_BUDAT_AGE_DUE_DATE <= 180 THEN '11. <= 180' 
			WHEN ZF_BUDAT_AGE_DUE_DATE > 180 AND ZF_BUDAT_AGE_DUE_DATE <= 360 THEN '12. <= 360'
			WHEN ZF_BUDAT_AGE_DUE_DATE > 360 THEN '13. > 360'	
			ELSE '0. Unknown'
		END AS ZF_BUDAT_AGE_BUCKET--[Z_Age bucket (posting date)]

	INTO B16_04_IT_OTC_AR_AGEING
	
	FROM B16_03_TT_AR_AGEING

	WHERE ZF_BUDAT_AUGDT_CLR_STATUS = 'Open' ;

	/*Insert missing documents which can be open and close in the same period*/
	INSERT INTO B16_04_IT_OTC_AR_AGEING
	SELECT DISTINCT 
		B14_BSAID_MANDT,
		B14_BSAID_BUKRS,
		B14_BSAID_GJAHR,
		B14_BSAID_BELNR,
		B14_BSAID_BUZEI,
		NULL,
		B14_BSAID_AUGDT,
		0,
		B14_ZF_BLDAT_ZFBDT_DUE_DATE,
		0,
		0,
		B14_BSAID_BLDAT,
		0,
		0,
		B14_BSAID_ZFBDT,
		0,
		0,
		B14_BSAID_BUDAT,
		0,
		0
	FROM B14_06_IT_ARE
	WHERE NOT EXISTS (
		SELECT *
		FROM B16_04_IT_OTC_AR_AGEING 
		WHERE B14_06_IT_ARE.B14_BSAID_BUKRS = B16_04_IT_OTC_AR_AGEING.BSAID_BUKRS AND
			  B14_06_IT_ARE.B14_BSAID_GJAHR = B16_04_IT_OTC_AR_AGEING.BSAID_GJAHR AND
			  B14_06_IT_ARE.B14_BSAID_BELNR = B16_04_IT_OTC_AR_AGEING.BSAID_BELNR AND
			  B14_06_IT_ARE.B14_BSAID_BUZEI = B16_04_IT_OTC_AR_AGEING.BSAID_BUZEI
	)
	EXEC sp_RENAME_FIELD 'B16_', 'B16_04_IT_OTC_AR_AGEING'

	/*
		Step 6: Create AR ageing summary cube for entities with huge data
	*/

	--Step 6.1: Get more detail and summary
	EXEC SP_REMOVE_TABLES 'B16_05_TT_AR_AGEING_SUMMARY_TEMP'
	SELECT DISTINCT
			B16_04_IT_OTC_AR_AGEING.B16_ZF_MNTH_END,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_MANDT,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_BUKRS,
			CAST(B14_06_IT_ARE.B14_SCOPE_BUSINESS_DMN_L1 AS NVARCHAR(50)) B14_SCOPE_BUSINESS_DMN_L1,
			CAST(B14_06_IT_ARE.B14_SCOPE_BUSINESS_DMN_L2 AS NVARCHAR(50)) B14_SCOPE_BUSINESS_DMN_L2,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_GJAHR,
			B14_06_IT_ARE.B14_ZF_GJAHR_MONAT,
			B14_06_IT_ARE.B14_ZF_BSAID_MONAT_FQ,
			B14_06_IT_ARE.B14_BSAID_BLART,
			B14_06_IT_ARE.B14_BSAID_BSCHL,
			B14_06_IT_ARE.B14_BKPF_TCODE,
			B14_06_IT_ARE.B14_BKPF_AWTYP,
			B14_06_IT_ARE.B14_BSAID_UMSKZ,
			B14_06_IT_ARE.B14_BSAID_KUNNR,
			B14_06_IT_ARE.B14_KNA1_KTOKD,
			B14_06_IT_ARE.B14_BSAID_ZTERM,
			B14_06_IT_ARE.B14_ZF_ENTRY_TYPE,
			CAST(B14_06_IT_ARE.B14_ZF_AR_DOC_TYPE_BUCKET AS NVARCHAR(50)) AS B14_ZF_AR_DOC_TYPE_BUCKET,
			B14_06_IT_ARE.B14_BSAID_HKONT,
			B14_06_IT_ARE.B14_ZF_BSAID_SHKZG_DESC,
			B14_06_IT_ARE.B14_BKPF_USNAM,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_AUGDT,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BLDAT_ZFBDT_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BLDAT_ZFBDT_AGE_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BLDAT_ZFBDT_CALCULATED_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_BLDAT,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BLDAT_AGE_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BLDAT_AGE_BUCKET,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_ZFBDT,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_ZFBDT_AGE_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_ZFBDT_AGE_BUCKET,
			B16_04_IT_OTC_AR_AGEING.B16_BSAID_BUDAT,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BUDAT_AGE_DUE_DATE,
			B16_04_IT_OTC_AR_AGEING.B16_ZF_BUDAT_AGE_BUCKET
	INTO B16_05_TT_AR_AGEING_SUMMARY_TEMP
	FROM B16_04_IT_OTC_AR_AGEING
	LEFT JOIN B14_06_IT_ARE
	ON B16_04_IT_OTC_AR_AGEING.B16_BSAID_BUKRS = B14_06_IT_ARE.B14_BSAID_BUKRS AND
	   B16_04_IT_OTC_AR_AGEING.B16_BSAID_GJAHR = B14_06_IT_ARE.B14_BSAID_GJAHR AND
	   B16_04_IT_OTC_AR_AGEING.B16_BSAID_BELNR = B14_06_IT_ARE.B14_BSAID_BELNR AND
	   B16_04_IT_OTC_AR_AGEING.B16_BSAID_BUZEI = B14_06_IT_ARE.B14_BSAID_BUZEI

	EXEC SP_UNNAME_FIELD 'B14_', 'B16_05_TT_AR_AGEING_SUMMARY_TEMP'
	EXEC SP_UNNAME_FIELD 'B16_', 'B16_05_TT_AR_AGEING_SUMMARY_TEMP'
	EXEC SP_RENAME_FIELD 'B16_', 'B16_05_TT_AR_AGEING_SUMMARY_TEMP'

	--Step 6.2: Group AR ageing cube to decrease the size of cube
	EXEC SP_REMOVE_TABLES 'B16_06_TT_AR_AGEING_SUMMARY'
	SELECT DISTINCT B16_BSAID_MANDT,
		   B16_BSAID_BUKRS,
		   B16_SCOPE_BUSINESS_DMN_L1,
		   B16_SCOPE_BUSINESS_DMN_L2,
		   B16_BSAID_GJAHR,
		   B16_ZF_GJAHR_MONAT,
		   B16_ZF_BSAID_MONAT_FQ,
		   B16_BSAID_BLART,
		   B16_BSAID_BSCHL,
		   B16_BKPF_TCODE,
		   B16_BKPF_AWTYP,
		   B16_BSAID_UMSKZ,
		   B16_BSAID_KUNNR,
		   B16_KNA1_KTOKD,
		   B16_BSAID_ZTERM,
		   B16_ZF_ENTRY_TYPE,
		   B16_ZF_AR_DOC_TYPE_BUCKET,
		   B16_BSAID_HKONT,
		   B16_ZF_BSAID_SHKZG_DESC,
		   B16_BKPF_USNAM,
		   B16_BSAID_AUGDT,
		   B16_ZF_BLDAT_ZFBDT_DUE_DATE,
		   B16_BSAID_BLDAT,
		   B16_BSAID_ZFBDT,
		   B16_BSAID_BUDAT
	INTO B16_06_TT_AR_AGEING_SUMMARY
	FROM B16_05_TT_AR_AGEING_SUMMARY_TEMP

	--Step 6.3: Create ar ageing summary key
	EXEC SP_REMOVE_TABLES 'B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY'
	SELECT *,
			ROW_NUMBER() OVER (ORDER BY B16_BSAID_MANDT) B16_ZF_AR_AGEING_SUMMARY_KEY
	INTO B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY
	FROM B16_06_TT_AR_AGEING_SUMMARY

	--/*
	--	Create index to increase the joining time
	--*/
	CREATE CLUSTERED INDEX B16_07_INDEX ON B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY(B16_BSAID_MANDT,
	B16_BSAID_BUKRS, B16_SCOPE_BUSINESS_DMN_L1, B16_SCOPE_BUSINESS_DMN_L2, B16_BSAID_GJAHR,
	B16_ZF_GJAHR_MONAT,	B16_ZF_BSAID_MONAT_FQ, B16_BSAID_BLART,	B16_BSAID_BSCHL, B16_BKPF_TCODE,
	B16_BKPF_AWTYP, B16_BSAID_UMSKZ, B16_BSAID_KUNNR, B16_KNA1_KTOKD, B16_BSAID_ZTERM,
	B16_ZF_ENTRY_TYPE, B16_ZF_AR_DOC_TYPE_BUCKET, B16_BSAID_HKONT, B16_ZF_BSAID_SHKZG_DESC,
	B16_BKPF_USNAM, B16_BSAID_AUGDT, B16_ZF_BLDAT_ZFBDT_DUE_DATE, B16_BSAID_BLDAT, B16_BSAID_ZFBDT,	B16_BSAID_BUDAT)

	BEGIN TRY
		DROP INDEX B14_02_INDEX ON B14_06_IT_ARE
	END TRY
	BEGIN CATCH
		PRINT 'DROP INDEX Statement have been skipped because the B14_INDEX_02 does not exist.'
	END CATCH
	BEGIN TRY
		DROP INDEX B14_06_IT_ARE_INX ON B14_06_IT_ARE
	END TRY
	BEGIN CATCH
		PRINT 'DROP INDEX Statement have been skipped because the B14_INDEX_02 does not exist.'
	END CATCH

	ALTER TABLE B14_06_IT_ARE ALTER COLUMN B14_SCOPE_BUSINESS_DMN_L1 NVARCHAR(50) NULL
	ALTER TABLE B14_06_IT_ARE ALTER COLUMN B14_SCOPE_BUSINESS_DMN_L2 NVARCHAR(50) NULL
	ALTER TABLE B14_06_IT_ARE ALTER COLUMN B14_ZF_AR_DOC_TYPE_BUCKET NVARCHAR(50) NULL
	CREATE CLUSTERED INDEX B14_06_IT_ARE_INX ON B14_06_IT_ARE(B14_BSAID_MANDT, B14_BSAID_BUKRS, B14_SCOPE_BUSINESS_DMN_L1, B14_SCOPE_BUSINESS_DMN_L2, B14_BSAID_GJAHR, B14_ZF_GJAHR_MONAT,
																B14_ZF_BSAID_MONAT_FQ, B14_BSAID_BLART, B14_BSAID_BSCHL, B14_BKPF_TCODE, B14_BKPF_AWTYP, B14_BSAID_UMSKZ, B14_BSAID_KUNNR,
																B14_KNA1_KTOKD, B14_BSAID_ZTERM, B14_ZF_ENTRY_TYPE, B14_ZF_AR_DOC_TYPE_BUCKET, B14_BSAID_HKONT, B14_ZF_BSAID_SHKZG_DESC,
																B14_BKPF_USNAM, B14_BSAID_AUGDT, B14_ZF_BLDAT_ZFBDT_DUE_DATE, B14_BSAID_BLDAT, B14_BSAID_ZFBDT, B14_BSAID_BUDAT)

	CREATE CLUSTERED INDEX B16_08_INDEX ON B16_05_TT_AR_AGEING_SUMMARY_TEMP(B16_BSAID_MANDT,
	B16_BSAID_BUKRS, B16_SCOPE_BUSINESS_DMN_L1, B16_SCOPE_BUSINESS_DMN_L2, B16_BSAID_GJAHR,
	B16_ZF_GJAHR_MONAT,	B16_ZF_BSAID_MONAT_FQ, B16_BSAID_BLART,	B16_BSAID_BSCHL, B16_BKPF_TCODE,
	B16_BKPF_AWTYP, B16_BSAID_UMSKZ, B16_BSAID_KUNNR, B16_KNA1_KTOKD, B16_BSAID_ZTERM,
	B16_ZF_ENTRY_TYPE, B16_ZF_AR_DOC_TYPE_BUCKET, B16_BSAID_HKONT, B16_ZF_BSAID_SHKZG_DESC,
	B16_BKPF_USNAM, B16_BSAID_AUGDT, B16_ZF_BLDAT_ZFBDT_DUE_DATE, B16_BSAID_BLDAT, B16_BSAID_ZFBDT,	B16_BSAID_BUDAT)
	 
	--Step 6.4: Pass the ageing summary key to AR cube.
	EXEC SP_REMOVE_TABLES 'B14_08_IT_ARE_WITH_AGEING_SUMMARY_KEY'

	SELECT B14_06_IT_ARE.*, B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_AR_AGEING_SUMMARY_KEY B14_ZF_AR_AGEING_SUMMARY_KEY
	INTO B14_08_IT_ARE_WITH_AGEING_SUMMARY_KEY
	FROM B14_06_IT_ARE
	LEFT JOIN B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY
	ON ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BUKRS, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_BUKRS, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_SCOPE_BUSINESS_DMN_L1, '') = ISNULL(B14_06_IT_ARE.B14_SCOPE_BUSINESS_DMN_L1, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_SCOPE_BUSINESS_DMN_L2, '') = ISNULL(B14_06_IT_ARE.B14_SCOPE_BUSINESS_DMN_L2, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_GJAHR, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_GJAHR, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_GJAHR_MONAT, '') = ISNULL(B14_06_IT_ARE.B14_ZF_GJAHR_MONAT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BSAID_MONAT_FQ, '') = ISNULL(B14_06_IT_ARE.B14_ZF_BSAID_MONAT_FQ, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BLART, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_BLART, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BSCHL, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_BSCHL, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_TCODE, '') = ISNULL(B14_06_IT_ARE.B14_BKPF_TCODE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_AWTYP, '') = ISNULL(B14_06_IT_ARE.B14_BKPF_AWTYP, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_UMSKZ, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_UMSKZ, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_KUNNR, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_KUNNR, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_KNA1_KTOKD, '') = ISNULL(B14_06_IT_ARE.B14_KNA1_KTOKD, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_ZTERM, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_ZTERM, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_ENTRY_TYPE, '') = ISNULL(B14_06_IT_ARE.B14_ZF_ENTRY_TYPE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_AR_DOC_TYPE_BUCKET, '') = ISNULL(B14_06_IT_ARE.B14_ZF_AR_DOC_TYPE_BUCKET, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_HKONT, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_HKONT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BSAID_SHKZG_DESC, '') = ISNULL(B14_06_IT_ARE.B14_ZF_BSAID_SHKZG_DESC, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_USNAM, '') = ISNULL(B14_06_IT_ARE.B14_BKPF_USNAM, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_AUGDT, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_AUGDT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BLDAT_ZFBDT_DUE_DATE, '') = ISNULL(B14_06_IT_ARE.B14_ZF_BLDAT_ZFBDT_DUE_DATE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BLDAT, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_BLDAT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_ZFBDT, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_ZFBDT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BUDAT, '') = ISNULL(B14_06_IT_ARE.B14_BSAID_BUDAT, '')

		
	--Step 6.5: Pass the ageing summary key to AR ageing summary cube.
	EXEC SP_REMOVE_TABLES 'B16_08_IT_AR_AGEING_SUMMARY'
	SELECT B16_05_TT_AR_AGEING_SUMMARY_TEMP.*, B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_AR_AGEING_SUMMARY_KEY
	INTO B16_08_IT_AR_AGEING_SUMMARY
	FROM B16_05_TT_AR_AGEING_SUMMARY_TEMP
	LEFT JOIN B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY
	ON ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BUKRS, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_BUKRS, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_SCOPE_BUSINESS_DMN_L1, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_SCOPE_BUSINESS_DMN_L1, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_SCOPE_BUSINESS_DMN_L2, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_SCOPE_BUSINESS_DMN_L2, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_GJAHR, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_GJAHR, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_GJAHR_MONAT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_GJAHR_MONAT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BSAID_MONAT_FQ, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_BSAID_MONAT_FQ, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BLART, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_BLART, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BSCHL, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_BSCHL, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_TCODE, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BKPF_TCODE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_AWTYP, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BKPF_AWTYP, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_UMSKZ, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_UMSKZ, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_KUNNR, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_KUNNR, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_KNA1_KTOKD, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_KNA1_KTOKD, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_ZTERM, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_ZTERM, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_ENTRY_TYPE, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_ENTRY_TYPE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_AR_DOC_TYPE_BUCKET, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_AR_DOC_TYPE_BUCKET, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_HKONT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_HKONT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BSAID_SHKZG_DESC, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_BSAID_SHKZG_DESC, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BKPF_USNAM, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BKPF_USNAM, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_AUGDT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_AUGDT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_ZF_BLDAT_ZFBDT_DUE_DATE, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_ZF_BLDAT_ZFBDT_DUE_DATE, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BLDAT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_BLDAT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_ZFBDT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_ZFBDT, '') AND
	   ISNULL(B16_07_TT_AR_AGEING_SUMMARY_WITH_KEY.B16_BSAID_BUDAT, '') = ISNULL(B16_05_TT_AR_AGEING_SUMMARY_TEMP.B16_BSAID_BUDAT, '')

	--EXEC SP_REMOVE_TABLES '%_TT_%'

END
GO
