USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE     PROC [dbo].[script_DV11_QLIK_GL_DETAIL_VS_SAP_FBL3N]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN
 

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL


/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			--,@ZV_LIMIT NVARCHAR(MAX)		    = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_LIMIT')
			

DECLARE @DATEFORMAT VARCHAR(3)
SET @DATEFORMAT   = (SELECT DBO.GET_PARAM('dateformat'))
SET DATEFORMAT @DATEFORMAT;



/*
    Title            :  DV11: Data Validation dashboard 
    Description      :  Compares the RTR GL Detail report with SAP  report table
       --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |     Who		|  Description
    22-08-2017             Anh         Creation
	24-10-2018             Hung        Naming convention and logic fixes
*/


-- Step 1/ Set up the code that will enable message to be sent back to the user of the Java app
	-- that decides to run the script
	--CREATE log table TO RETURN RESULTS FOR USERS
	-- Variables for user message for feedback
	-- First two columns are used for SP_QlikNamingClassifier,
	-- Third column is only one used for sending messages to user for progress of DV scripts


	DECLARE @MSG NVARCHAR(MAX)
	EXEC SP_DROPTABLE 'DV00_RT_USER_FEEDBACK_MESSAGE'
	CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE         
		 (OLD_NAME NVARCHAR(MAX), NEW_NAME NVARCHAR(MAX), _LOG NVARCHAR(MAX))

	-- The following code can be put wherever we want and whenever we want to send a message back to the user
	-- that has pressed Java Upload app button for running this script.

	--SET @MSG = '<Feedback message for user>' --print back status for users
	--INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', @MSG)

-- Step 2/
-- Load data from Qlik Report 
-- Calculate the total value per FY, Company, and GL account
-- At the same time, renaming with table name as prefix

	
	EXECUTE sp_droptable 'DV11_01_TT_DIVAQL_RTR_GL_DET'
	
	SELECT	
			[Company code] DIVAQL_BUKRS,
			[Fiscal year]  DIVAQL_GJAHR,
			[Document Type] DIVAQL_BLART,
			[GL account] DIVAQL_HKONT,   
			DBO.REMOVE_LEADING_ZEROES([Document nr]) DIVAQL_BELNR,  
			DC ZF_DIVAQL_SHKZG,
			SUM(DBO.STRING_TO_NUMBER([Value COC])) DIVAQL_DMBTR
	INTO DV11_01_TT_DIVAQL_RTR_GL_DET
	FROM AQLIK_RTR_GL_DETAIL
	GROUP BY [Company Code], [Fiscal year], [Document Type], [Document nr], [GL account], DC

-- Step 3/
-- Load data from SAP report
-- At the same time renaming with the SAP report table prefix
-- Calculate the total value per GL account for the SAP report
-- At the same time renaming with the SAP report table prefix

EXEC SP_SAP_REPORT_FIELD_TO_STANDARD 'ASAP_FBL3N'
	
	EXECUTE sp_droptable 'DV11_02_TT_SAP_RTR_GL_DET'
	SELECT Type SAP_BLART,
		DBO.REMOVE_LEADING_ZEROES(ACCT_FROM_FILE_NAME) SAP_HKONT,
		DBO.REMOVE_LEADING_ZEROES(BELNR) SAP_BELNR,
		BUKRS_FROM_FILE_NAME SAP_BUKRS,
		FY_FROM_FILE_NAME as SAP_GJAHR,
		SUM(DBO.STRING_TO_NUMBER(DMBTR_CONVERTED)) SAP_DMBTR,
		IIF(DMBTR_CONVERTED < 0, 'Credit', 'Debit') ZF_SAP_SHKZG
	INTO DV11_02_TT_SAP_RTR_GL_DET
	FROM ASAP_FBL3N
	GROUP BY BUKRS_FROM_FILE_NAME, FY_FROM_FILE_NAME, Type, DBO.REMOVE_LEADING_ZEROES(ACCT_FROM_FILE_NAME), BELNR, IIF(DMBTR_CONVERTED < 0, 'Credit', 'Debit')

--Step 4/Company Code from File Name
--Merge Data from Qlik and SAP report
--Calculate missing gl or business area or document type or document number from SAP and QLIK

	EXECUTE sp_droptable 'DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR'

	SELECT	
			DIVAQL_BUKRS,
			DIVAQL_GJAHR,
			DIVAQL_BLART,
			DIVAQL_HKONT,   
			DIVAQL_BELNR,  
			ZF_DIVAQL_SHKZG,
			ISNULL(DIVAQL_DMBTR,0) AS DIVAQL_DMBTR,
			
			SAP_BLART,
			SAP_HKONT,
			SAP_BELNR,
			SAP_BUKRS,
			SAP_GJAHR,
			ZF_SAP_SHKZG,
			
			ISNULL(SAP_DMBTR, 0) SAP_DMBTR,
			ISNULL (DIVAQL_DMBTR, 0)	- ISNULL(SAP_DMBTR, 0) ZF_DIVAQL_MINUS_SAP_DMBTR,
			CASE WHEN	ISNULL(DIVAQL_BELNR ,'')	= '' AND
						ISNULL(SAP_BELNR ,'')	<> '' 
					THEN 'G/L Account Type in SAP not DIVA'
				 WHEN	ISNULL(DIVAQL_BELNR ,'')	<> '' AND
						ISNULL(SAP_BELNR,'') = '' 
					THEN 'G/L Account Type in DIVA not SAP'
				WHEN	ISNULL(DIVAQL_BELNR, '')	<> '' AND
						ISNULL(SAP_BELNR, '')	<> ''
					THEN 'G/L Account Type not missing'			
				ELSE	'Case not identified'
			END ZF_BELNR_MISSING					
	INTO DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR
	FROM DV11_01_TT_DIVAQL_RTR_GL_DET
	FULL OUTER JOIN DV11_02_TT_SAP_RTR_GL_DET
		ON DIVAQL_BUKRS = SAP_BUKRS
		AND DIVAQL_GJAHR = SAP_GJAHR
		AND DIVAQL_BELNR = SAP_BELNR
		AND ZF_DIVAQL_SHKZG = ZF_SAP_SHKZG
--Step 5/
--Split the comparison into two tables so that we can be able to filter them separately

	EXEC sp_droptable 'DV11_04_RT_FULL_DIVAQL_RTR_DET'
	SELECT	
			DIVAQL_BUKRS, 
			DIVAQL_GJAHR,
			DIVAQL_BLART,
			DIVAQL_HKONT,   
			DIVAQL_BELNR,  
			DIVAQL_DMBTR,
			ZF_DIVAQL_SHKZG,
			DIVAQL_BUKRS + '|' + DIVAQL_BLART + '|' +DIVAQL_HKONT + '|' + DIVAQL_BELNR ZF_KEY_JOIN_QLIK
	INTO	DV11_04_RT_FULL_DIVAQL_RTR_DET
	FROM	DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR
	WHERE	ISNULL(DIVAQL_HKONT, '') <> ''
	
	EXEC sp_droptable 'DV11_05_RT_FULL_SAP_RTR_DET'
	SELECT	
			SAP_BUKRS,
			SAP_GJAHR,
			SAP_BLART,
			SAP_HKONT,
			SAP_BELNR, 
			SAP_DMBTR,
			ZF_SAP_SHKZG,
			SAP_BUKRS  + '|' + SAP_BLART + '|' + SAP_HKONT + '|' + SAP_BELNR ZF_KEY_JOIN_SAP
	INTO	DV11_05_RT_FULL_SAP_RTR_DET
	FROM	DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR
	WHERE	ISNULL(SAP_HKONT, '') <> ''
	
--Step 6/
--Split the comparison into two discrepancy tables so that we can be able to filter them separately
--06/06/2019 by Thuan ADD more code "AND NOT	(ABS(ZF_DIVAQL_MINUS_SAP_DMBTR)>10 AND 
--		ZF_BELNR_MISSING = 'G/L Account Type in SAP not DIVA')"

	EXEC sp_droptable 'DV11_06_RT_DISC_DIVAQL_RTR'
	SELECT	DIVAQL_BUKRS,
			DIVAQL_GJAHR,
			DIVAQL_BLART,
			DIVAQL_HKONT,
			ZF_DIVAQL_SHKZG,   
			DIVAQL_BELNR,  
			DIVAQL_DMBTR,
			ZF_DIVAQL_MINUS_SAP_DMBTR,

			ZF_BELNR_MISSING,
			
			DIVAQL_BUKRS  + '|' + DIVAQL_BLART + '|' + DIVAQL_HKONT + '|' + DIVAQL_BELNR AS ZF_KEY_JOIN_QLIK	
	INTO	DV11_06_RT_DISC_DIVAQL_RTR
	FROM	DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR
	WHERE	(ABS(ZF_DIVAQL_MINUS_SAP_DMBTR) > 10
		OR ZF_BELNR_MISSING IN ('G/L Account Type in DIVA not SAP', 'Case not identified'))
		AND NOT	(
			ABS(ZF_DIVAQL_MINUS_SAP_DMBTR)>10 AND 
			ZF_BELNR_MISSING = 'G/L Account Type in SAP not DIVA'
		)

	EXEC sp_droptable 'DV11_07_RT_DISC_SAP_RTR_DET'
	SELECT	
	
			SAP_BUKRS,
			SAP_GJAHR,
			SAP_BLART,
			SAP_HKONT,
			ZF_SAP_SHKZG,
			SAP_BELNR, 
			SAP_DMBTR,
			ZF_DIVAQL_MINUS_SAP_DMBTR,
			
			ZF_BELNR_MISSING,
			
			SAP_BUKRS + '|' +SAP_BLART + '|' +SAP_HKONT + '|' + SAP_BELNR	AS ZF_KEY_JOIN_SAP
	INTO	DV11_07_RT_DISC_SAP_RTR_DET
	FROM	DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR
	WHERE	ABS(ZF_DIVAQL_MINUS_SAP_DMBTR) > 10
		OR ZF_BELNR_MISSING IN ('G/L Account Type in SAP not DIVA', 'Case not identified')	
		AND NOT	(ABS(ZF_DIVAQL_MINUS_SAP_DMBTR)>10 AND 
		ZF_BELNR_MISSING = 'G/L Account Type in DIVA not SAP')	 			

--Step 7/
--Rename field
EXEC SP_RENAME_FIELD 'DV11A_', 'DV11_04_RT_FULL_DIVAQL_RTR_DET'
EXEC SP_RENAME_FIELD 'DV11B_', 'DV11_05_RT_FULL_SAP_RTR_DET'
EXEC SP_RENAME_FIELD 'DV11C_', 'DV11_06_RT_DISC_DIVAQL_RTR'
EXEC SP_RENAME_FIELD 'DV11D_', 'DV11_07_RT_DISC_SAP_RTR_DET'

--Delete temporary tables
	--EXECUTE sp_droptable 'DV11_01_TT_DIVAQL_RTR_GL_DET'
	--EXECUTE sp_droptable 'DV11_02_TT_SAP_RTR_GL_DET'
 -- 	EXECUTE sp_droptable 'DV11_03_TT_COMP_DIVAQL_RTR_SAPRTR'
--Send Finish Message for the tool

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV11_COMP_QLIK_GL_DE_SAP_GL has finished')

/* log cube creation*/

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV11_04_RT_FULL_DIVAQL_RTR_DET',(SELECT COUNT(*) FROM DV11_04_RT_FULL_DIVAQL_RTR_DET) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV11_05_RT_FULL_SAP_RTR_DET',(SELECT COUNT(*) FROM DV11_05_RT_FULL_SAP_RTR_DET) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV11_06_RT_DISC_DIVAQL_RTR',(SELECT COUNT(*) FROM DV11_06_RT_DISC_DIVAQL_RTR) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV11_07_RT_DISC_SAP_RTR_DET',(SELECT COUNT(*) FROM DV11_07_RT_DISC_SAP_RTR_DET) 

/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure finished',NULL,NULL

END

GO
