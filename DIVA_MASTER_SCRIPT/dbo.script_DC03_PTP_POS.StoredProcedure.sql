USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[script_DC03_PTP_POS]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
/* Initiate the log */ 
----Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END
 
--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
 
/* Initialize parameters from globals table */
 
     DECLARE  
                      @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
                     ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
                     ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
                     ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
                     ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
                     ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
                     ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
                     ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
                     ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
                     ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
                     ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
					 ,@ZV_SAME_QUARTER_BY_BLDAT NVARCHAR(MAX) = ISNULL((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_SAME_QUARTER_BY_BLDAT'), '')

--Step 1/ Compare values (USD) between table B09_13_IT_PTP_POS_NEW (use TCURR and TCURF) and table B09_13_IT_PTP_POS (use AM_EXCHNG)
EXEC SP_DROPTABLE 	'DC03_01_IT_PTP_POS' 

SELECT 
	A.B09_EKKO_EBELN,
	A.B09_EKPO_BUKRS,
	A_T001.T001_WAERS,
	MAX(A.B09_EKKO_BEDAT) AS B09_EKKO_BEDAT,
	SUM(B.B09_ZF_EKPO_NETWR_TCURFA) AS B09_ZF_EKPO_NETWR_TCURFA,
	SUM(B.B09_ZF_EKPO_NETWR_CUC) AS B09_ZF_EKPO_NETWR_CUC_OLD,
	SUM(A.B09_ZF_EKPO_NETWR_CUC) AS B09_ZF_EKPO_NETWR_CUC_NEW,
	MAX(COALESCE(AM_EXCHNG_CUC.EXCHNG_RATIO,1)) AS EXCH_RATE_CUC_OLD,
	MAX(A.B09_EKKO_WKURS * COALESCE(TCURF_COC.TCURF_TFACT,1)/COALESCE(TCURF_COC.TCURF_FFACT,1) * COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS EXCH_RATE_CUC_NEW
INTO DC03_01_IT_PTP_POS
FROM 
	(	
		SELECT 
			B09_EKKO_EBELN,
			B09_EKPO_BUKRS,
			MAX(B09_EKKO_WKURS) AS B09_EKKO_WKURS,
			MAX(B09_EKKO_BEDAT) AS B09_EKKO_BEDAT,
			MAX(B09_EKKO_WAERS) AS B09_EKKO_WAERS,
			SUM(B09_ZF_EKPO_NETWR_CUC) AS B09_ZF_EKPO_NETWR_CUC,
			SUM(B09_ZF_EKPO_NETWR_TCURFA) AS B09_ZF_EKPO_NETWR_TCURFA
		FROM 
		B09_13_IT_PTP_POS_NEW
		GROUP BY 
		B09_EKKO_EBELN,
		B09_EKPO_BUKRS
	) AS A
INNER JOIN 
(
		SELECT 
			B09_EKKO_EBELN,
			B09_EKPO_BUKRS,
	--		MAX(B09_EKKO_WKURS) AS B09_EKKO_WKURS,
			MAX(B09_EKKO_BEDAT) AS B09_EKKO_BEDAT,
			MAX(B09_EKKO_WAERS) AS B09_EKKO_WAERS,
			SUM(B09_ZF_EKPO_NETWR_CUC) AS B09_ZF_EKPO_NETWR_CUC,
			SUM(B09_ZF_EKPO_NETWR_TCURFA) AS B09_ZF_EKPO_NETWR_TCURFA
		FROM 
		B09_13_IT_PTP_POS
		GROUP BY 
		B09_EKKO_EBELN,
		B09_EKPO_BUKRS
)
AS B
	ON A.B09_EKKO_EBELN = B.B09_EKKO_EBELN
	AND A.B09_EKPO_BUKRS = B.B09_EKPO_BUKRS
LEFT JOIN A_T001
	ON  A.B09_EKPO_BUKRS = A_T001.T001_BUKRS	   
	-- Exchange rates for currency conversion: from house currency to custom currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_CUC  
	ON AM_EXCHNG_CUC.EXCHNG_FROM = A.B09_EKKO_WAERS
	AND AM_EXCHNG_CUC.EXCHNG_TO = @currency

-- Add the currency conversion factor: for document currency
LEFT JOIN B00_TCURX TCURX_DOC
	ON 
		A.B09_EKKO_WAERS = TCURX_DOC.TCURX_CURRKEY

-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B09_EKKO_BEDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)
-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A.B09_EKKO_BEDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 

-- Add currency factor from document currency to local currency

LEFT JOIN B00_IT_TCURF TCURF_COC
ON A.B09_EKKO_WAERS = TCURF_COC.TCURF_FCURR
AND TCURF_COC.TCURF_TCURR  = T001_WAERS  
AND TCURF_COC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A.B09_EKKO_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = T001_WAERS  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B09_EKKO_BEDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)
GROUP BY A.B09_EKKO_EBELN,
	A.B09_EKPO_BUKRS,
	A_T001.T001_WAERS

EXEC SP_UNNAME_FIELD 'B09_',DC03_01_IT_PTP_POS
EXEC SP_RENAME_FIELD 'DC03_01_',DC03_01_IT_PTP_POS


-- Step 2: Compare values (USD) between table B14_19_IT_T4_OUTPUT (use TCURR and TCURF) and table B14_19_IT_T4_OUTPUT (use AM_EXCHNG) 		


EXEC SP_DROPTABLE 	'DC03_02_IT_GR_HIST'
SELECT A.B09_PO_GR_key,
	   A.B09_ZF_GR_EKBE_WAERS,
	   A.B09_ZF_EKBE_BELNR_NUM_GRS,
	   A_T001.T001_WAERS,
	   MAX(COALESCE(AM_EXCHNG_CUC.EXCHNG_RATIO,1)) AS EXCH_RATE_CUC_OLD,
	   MAX(COALESCE(AM_EXCHNG_DOC.EXCHNG_RATIO,1)) AS EXCH_RATE_DOC_OLD,
	   MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS EXCH_RATE_CUC_NEW,
	   SUM(A.B09_ZF_EKBE_MENGE_GR_S) AS B09_ZF_EKBE_MENGE_GR_S,
	   SUM(A.B09_ZF_EKBE_DMBTR_GR_S) B09_ZF_EKBE_DMBTR_GR_S,
	   SUM(B.B09_ZF_EKBE_DMBTR_GR_S_CUC) AS B09_ZF_EKBE_DMBTR_GR_S_CUC_OLD,
	   SUM(A.B09_ZF_EKBE_DMBTR_GR_S_CUC) AS B09_ZF_EKBE_DMBTR_GR_S_CUC_NEW,
	   SUM(A.B09_ZF_EKBE_WRBTR_GR_S) AS B09_ZF_EKBE_WRBTR_GR_S,
	   SUM(B.B09_ZF_EKBE_WRBTR_GR_S_CUC) AS B09_ZF_EKBE_WRBTR_GR_S_CUC_OLD,
	   SUM(A.B09_ZF_EKBE_WRBTR_GR_S_CUC) AS B09_ZF_EKBE_WRBTR_GR_S_CUC_NEW
INTO DC03_02_IT_GR_HIST
FROM B09_14_IT_GR_HIST_NEW A
INNER JOIN B09_14_IT_GR_HIST B
	ON A.B09_PO_GR_key = B.B09_PO_GR_key AND
	   A.B09_ZF_GR_EKBE_WAERS = B.B09_ZF_GR_EKBE_WAERS AND
	   A.B09_ZF_EKBE_BELNR_NUM_GRS = B.B09_ZF_EKBE_BELNR_NUM_GRS
LEFT JOIN A_EKPO
	ON A.B09_PO_GR_key = A_EKPO.EKPO_EBELN + A_EKPO.EKPO_EBELP
LEFT JOIN A_EKBE 
    ON A_EKPO.EKPO_EBELN = A_EKBE.EKBE_EBELN AND A_EKPO.EKPO_EBELP = A_EKBE.EKBE_EBELP
LEFT JOIN A_T001
	ON  A_EKPO.EKPO_BUKRS = A_T001.T001_BUKRS
	-- Exchange rates for currency conversion: from house currency to custom currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_CUC  
	ON AM_EXCHNG_CUC.EXCHNG_FROM = A_T001.T001_WAERS 
	AND AM_EXCHNG_CUC.EXCHNG_TO = @currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_DOC  
	ON AM_EXCHNG_DOC.EXCHNG_FROM = A.B09_ZF_GR_EKBE_WAERS
	AND AM_EXCHNG_DOC.EXCHNG_TO = @currency

-- Add currency factor for house currency
LEFT JOIN B00_TCURX TCURX_CC 
ON 
	A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY   

-- Add currency factor for document currency
LEFT JOIN B00_TCURX TCURX_DOC 
ON 
	A.B09_ZF_GR_EKBE_WAERS = TCURX_DOC.TCURX_CURRKEY   

	-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
	ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
	AND TCURF_CUC.TCURF_TCURR  = @currency  
	AND TCURF_CUC.TCURF_GDATU = (
		SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
		FROM B00_IT_TCURF
		WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
				B00_IT_TCURF.TCURF_TCURR  = @currency  AND
				B00_IT_TCURF.TCURF_GDATU <= A_EKBE.EKBE_BUDAT
		ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
		)
	-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A_EKBE.EKBE_BUDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
			) 
GROUP BY A.B09_PO_GR_key,
	   A.B09_ZF_GR_EKBE_WAERS,
	   A.B09_ZF_EKBE_BELNR_NUM_GRS,
	   A_T001.T001_WAERS

EXEC SP_UNNAME_FIELD 'B09_',DC03_02_IT_GR_HIST
EXEC SP_RENAME_FIELD 'DC03_02_',DC03_02_IT_GR_HIST

-- Step 3: Compare values (USD) between table B09_15_IT_INV_HIST (use TCURR and TCURF) and table B09_15_IT_INV_HIST (use AM_EXCHNG)  

EXEC SP_DROPTABLE   'DC03_03_IT_INV_HIST'
SELECT A.B09_PO_INV_key,
       A.B09_ZF_INV_EKBe_WAERS,
       A.B09_ZF_EKBE_BELNR_NUM_INVS,
	   A_T001.T001_WAERS,
       MAX(COALESCE(AM_EXCHNG_CUC.EXCHNG_RATIO,1)) AS EXCH_RATE_CUC_OLD,
       MAX(COALESCE(AM_EXCHNG_DOC.EXCHNG_RATIO,1)) AS EXCH_RATE_DOC_OLD,
       MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS EXCH_RATE_CUC_NEW,
       SUM(A.B09_ZF_EKBE_MENGE_INV_S) AS B09_ZF_EKBE_MENGE_INV_S,
       SUM(A.B09_ZF_EKBE_DMBTR_INV_S) B09_ZF_EKBE_DMBTR_INV_S,
       SUM(B.B09_ZF_EKBE_DMBTR_INV_S_CUC) AS B09_ZF_EKBE_DMBTR_INV_S_CUC_OLD,
       SUM(A.B09_ZF_EKBE_DMBTR_INV_S_CUC) AS B09_ZF_EKBE_DMBTR_INV_S_CUC_NEW,
       SUM(A.B09_ZF_EKBE_WRBTR_INV_S) AS B09_ZF_EKBE_WRBTR_INV_S,
       SUM(B.B09_ZF_EKBE_WRBTR_INV_S_CUC) AS B09_ZF_EKBE_WRBTR_INV_S_CUC_OLD,
       SUM(A.B09_ZF_EKBE_WRBTR_INV_S_CUC) AS B09_ZF_EKBE_WRBTR_INV_S_CUC_NEW
INTO DC03_03_IT_INV_HIST
FROM B09_15_IT_INV_HIST_NEW A
INNER JOIN B09_15_IT_INV_HIST B
    ON A.B09_PO_INV_key = B.B09_PO_INV_key AND
       A.B09_ZF_INV_EKBe_WAERS = B.B09_ZF_INV_EKBe_WAERS AND
       A.B09_ZF_EKBE_BELNR_NUM_INVS = B.B09_ZF_EKBE_BELNR_NUM_INVS
LEFT JOIN A_EKPO
    ON A.B09_PO_INV_key = A_EKPO.EKPO_EBELN + A_EKPO.EKPO_EBELP
LEFT JOIN A_EKBE 
    ON A_EKPO.EKPO_EBELN = A_EKBE.EKBE_EBELN AND A_EKPO.EKPO_EBELP = A_EKBE.EKBE_EBELP
LEFT JOIN A_T001
    ON  A_EKPO.EKPO_BUKRS = A_T001.T001_BUKRS
    -- Exchange rates for currency conversion: from house currency to custom currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_CUC  
    ON AM_EXCHNG_CUC.EXCHNG_FROM = A_T001.T001_WAERS 
    AND AM_EXCHNG_CUC.EXCHNG_TO = @currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_DOC  
    ON AM_EXCHNG_DOC.EXCHNG_FROM = A.B09_ZF_INV_EKBe_WAERS
    AND AM_EXCHNG_DOC.EXCHNG_TO = @currency

-- Add currency factor for house currency
LEFT JOIN B00_TCURX TCURX_CC 
ON 
    A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY   

-- Add currency factor for document currency
LEFT JOIN B00_TCURX TCURX_DOC 
ON 
    A.B09_ZF_INV_EKBe_WAERS = TCURX_DOC.TCURX_CURRKEY   

    -- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
    ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
    AND TCURF_CUC.TCURF_TCURR  = @currency  
    AND TCURF_CUC.TCURF_GDATU = (
        SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
        FROM B00_IT_TCURF
        WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
                B00_IT_TCURF.TCURF_TCURR  = @currency  AND
                B00_IT_TCURF.TCURF_GDATU <= A_EKBE.EKBE_BUDAT
        ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
        )
    -- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
    ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
    AND TCURR_CUC.TCURR_TCURR  = @currency  
    AND TCURR_CUC.TCURR_GDATU = (
        SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
        FROM B00_IT_TCURR
        WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
                B00_IT_TCURR.TCURR_TCURR  = @currency  AND
                B00_IT_TCURR.TCURR_GDATU <= A_EKBE.EKBE_BUDAT
        ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
            ) 
GROUP BY A.B09_PO_INV_key,
       A.B09_ZF_INV_EKBe_WAERS,
       A.B09_ZF_EKBE_BELNR_NUM_INVS,
	   A_T001.T001_WAERS

EXEC SP_UNNAME_FIELD 'B09_',DC03_03_IT_INV_HIST
EXEC SP_RENAME_FIELD 'DC03_03_',DC03_03_IT_INV_HIST

-- Step 4: Compare values (USD) between table B09_07_IT_MAPP_POS_INVS (use TCURR and TCURF) and table B09_07_IT_MAPP_POS_INVS (use AM_EXCHNG)
 

EXEC SP_DROPTABLE 'DC03_04_IT_MAPP_POS_INVS'

SELECT A.B09B_EKBE_EBELN,
       A.B09B_EKBE_EBELP,
	   A.B09B_EKBE_GJAHR,
	   A.B09B_EKBE_BELNR,
	   A.B09B_EKBE_BUZEI,
	   A_T001.T001_WAERS,
	   MAX(A.B09B_EKBE_BUDAT) AS B09B_EKBE_BUDAT,
	   MAX(COALESCE(AM_EXCHNG_CUC.EXCHNG_RATIO,1)) AS EXCH_RATE_CUC_OLD,
	   MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS EXCH_RATE_CUC_NEW,
	   SUM(A.B09B_ZF_EKBE_DMBTR_INV_S) AS B09B_ZF_EKBE_DMBTR_INV_S,
	   SUM(B.B09B_ZF_EKBE_DMBTR_INV_S_CUC) AS B09B_ZF_EKBE_DMBTR_INV_S_CUC_OLD,
	   SUM(A.B09B_ZF_EKBE_DMBTR_INV_S_CUC) AS B09B_ZF_EKBE_DMBTR_INV_S_CUC_NEW
INTO DC03_04_IT_MAPP_POS_INVS
FROM 
(
	SELECT DISTINCT 
	   B09B_EKBE_EBELN,
       B09B_EKBE_EBELP,
	   B09B_EKBE_GJAHR,
	   B09B_EKBE_BELNR,
	   B09B_EKBE_BUZEI,
	   MAX(B09B_EKBE_BUDAT) AS B09B_EKBE_BUDAT,
	   SUM(B09B_ZF_EKBE_DMBTR_INV_S) AS B09B_ZF_EKBE_DMBTR_INV_S,
	   SUM(B09B_ZF_EKBE_DMBTR_INV_S_CUC) AS B09B_ZF_EKBE_DMBTR_INV_S_CUC
	FROM B09_07_IT_MAPP_POS_INVS_NEW
	GROUP BY B09B_EKBE_EBELN,
       B09B_EKBE_EBELP,
	   B09B_EKBE_GJAHR,
	   B09B_EKBE_BELNR,
	   B09B_EKBE_BUZEI
) A
LEFT JOIN 
(
	SELECT DISTINCT 
	   B09B_EKBE_EBELN,
       B09B_EKBE_EBELP,
	   B09B_EKBE_GJAHR,
	   B09B_EKBE_BELNR,
	   B09B_EKBE_BUZEI,
	   MAX(B09B_EKBE_BUDAT) AS B09B_EKBE_BUDAT,
	   SUM(B09B_ZF_EKBE_DMBTR_INV_S) AS B09B_ZF_EKBE_DMBTR_INV_S,
	   SUM(B09B_ZF_EKBE_DMBTR_INV_S_CUC) AS B09B_ZF_EKBE_DMBTR_INV_S_CUC
	FROM B09_07_IT_MAPP_POS_INVS
	GROUP BY B09B_EKBE_EBELN,
       B09B_EKBE_EBELP,
	   B09B_EKBE_GJAHR,
	   B09B_EKBE_BELNR,
	   B09B_EKBE_BUZEI

) B
ON A.B09B_EKBE_EBELN = B.B09B_EKBE_EBELN
   AND A.B09B_EKBE_EBELP = B.B09B_EKBE_EBELP
   AND A.B09B_EKBE_GJAHR = B.B09B_EKBE_GJAHR
   AND A.B09B_EKBE_BELNR = B.B09B_EKBE_BELNR
   AND A.B09B_EKBE_BUZEI = B.B09B_EKBE_BUZEI

LEFT JOIN A_EKPO
	ON A.B09B_EKBE_EBELN = A_EKPO.EKPO_EBELN AND A.B09B_EKBE_EBELP = A_EKPO.EKPO_EBELP
LEFT JOIN A_T001
	ON  A_EKPO.EKPO_BUKRS = A_T001.T001_BUKRS

	-- Add exchange rate from company currency to custom currency

LEFT JOIN AM_EXCHNG AS AM_EXCHNG_CUC  
	ON AM_EXCHNG_CUC.EXCHNG_FROM = A_T001.T001_WAERS
	AND AM_EXCHNG_CUC.EXCHNG_TO = @currency

	-- Add currency conversion factors for company code currency

LEFT JOIN B00_TCURX TCURX_DOC
    ON 
        A_T001.T001_WAERS = TCURX_DOC.TCURX_CURRKEY
	-- Add currency factor from company currency to USD

	LEFT JOIN B00_IT_TCURF TCURF_CUC
	ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
	AND TCURF_CUC.TCURF_TCURR  = @currency  
	AND TCURF_CUC.TCURF_GDATU = (
		SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
		FROM B00_IT_TCURF
		WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
				B00_IT_TCURF.TCURF_TCURR  = @currency  AND
				B00_IT_TCURF.TCURF_GDATU <= A.B09B_EKBE_BUDAT
		ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
		)
	-- Add exchange rate from company currency to USD
	LEFT JOIN B00_IT_TCURR TCURR_CUC
		ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
		AND TCURR_CUC.TCURR_TCURR  = @currency  
		AND TCURR_CUC.TCURR_GDATU = (
			SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
			FROM B00_IT_TCURR
			WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
					B00_IT_TCURR.TCURR_TCURR  = @currency  AND
					B00_IT_TCURR.TCURR_GDATU <= A.B09B_EKBE_BUDAT
			ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
			) 
GROUP BY A.B09B_EKBE_EBELN,
       A.B09B_EKBE_EBELP,
	   A.B09B_EKBE_GJAHR,
	   A.B09B_EKBE_BELNR,
	   A.B09B_EKBE_BUZEI,
	   A_T001.T001_WAERS

EXEC SP_UNNAME_FIELD 'B09B_',DC03_04_IT_MAPP_POS_INVS
EXEC SP_RENAME_FIELD 'DC03_04_',DC03_04_IT_MAPP_POS_INVS

-- Step 5: Compare values (USD) between table B09_03_IT_MAPP_POS_GRS (use TCURR and TCURF) and table B09_03_IT_MAPP_POS_GRS (use AM_EXCHNG)

EXEC SP_DROPTABLE 'DC03_05_IT_MAPP_POS_GRS'

SELECT A.B09C_ZF_MAPP_PO_GR,
	   A.B09C_ZF_EKBE_INV_REF,
	   A_T001.T001_WAERS,
	   MAX(A.B09C_EKBE_BUDAT) AS B09C_EKBE_BUDAT,
       MAX(COALESCE(AM_EXCHNG.EXCHNG_RATIO,1)) AS DC03_05_EXCH_RATE_CUC_OLD,
       MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) AS DC03_05_EXCH_RATE_CUC_NEW,
       SUM(A.B09C_ZF_EKBE_DMBTR_GR_S) AS B09C_ZF_EKBE_DMBTR_GR_S,
       SUM(B.B09C_ZF_EKBE_DMBTR_GR_S_CUC) AS B09C_ZF_EKBE_DMBTR_GR_S_CUC_OLD,
       SUM(A.B09C_ZF_EKBE_DMBTR_GR_S_CUC) AS B09C_ZF_EKBE_DMBTR_GR_S_CUC_NEW
INTO DC03_05_IT_MAPP_POS_GRS
FROM B09_03_IT_MAPP_POS_GRS_NEW A
INNER JOIN B09_03_IT_MAPP_POS_GRS B
    ON A.B09C_ZF_MAPP_PO_GR = B.B09C_ZF_MAPP_PO_GR AND
	   A.B09C_ZF_EKBE_INV_REF = B.B09C_ZF_EKBE_INV_REF
LEFT JOIN A_EKPO
    ON A.B09C_ZF_MAPP_PO_GR =  CONCAT( A_EKPO.EKPO_EBELN, '|', A_EKPO.EKPO_EBELP)
LEFT JOIN A_T001
    ON  A_EKPO.EKPO_BUKRS = A_T001.T001_BUKRS

    -- Exchange rates for currency conversion: from house currency to custom currency
	-- Add currency conversion factors for company code currency
LEFT JOIN B00_TCURX TCURX_CC 
on
	A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY   

-- Add exchange rate from company currency to custom currency
LEFT JOIN AM_EXCHNG 
ON A_T001.T001_WAERS = AM_EXCHNG.EXCHNG_FROM AND
	AM_EXCHNG.EXCHNG_TO = @currency
-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
    SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
    FROM B00_IT_TCURF
    WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
            B00_IT_TCURF.TCURF_TCURR  = @currency  AND
            B00_IT_TCURF.TCURF_GDATU <= A.B09C_EKBE_BUDAT
    ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
    )
-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
    ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
    AND TCURR_CUC.TCURR_TCURR  = @currency  
    AND TCURR_CUC.TCURR_GDATU = (
        SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
        FROM B00_IT_TCURR
        WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
                B00_IT_TCURR.TCURR_TCURR  = @currency  AND
                B00_IT_TCURR.TCURR_GDATU <= A.B09C_EKBE_BUDAT
        ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
        ) 
GROUP BY A.B09C_ZF_MAPP_PO_GR,
	   A.B09C_ZF_EKBE_INV_REF,
	   A_T001.T001_WAERS

EXEC SP_UNNAME_FIELD 'B09C_',DC03_05_IT_MAPP_POS_GRS
EXEC SP_RENAME_FIELD 'DC03_05_',DC03_05_IT_MAPP_POS_GRS
GO
