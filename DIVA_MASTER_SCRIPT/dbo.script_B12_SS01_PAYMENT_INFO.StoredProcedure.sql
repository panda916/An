USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE     PROCEDURE [dbo].[script_B12_SS01_PAYMENT_INFO]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
/* Initialize parameters from globals table */


   

-- Step 1: From processed items from payment program table (REGUP)
-- Get some information from BSEG and BKPF tables
-- Get document type desc from T003T table.

-- CREATE INDEX  REGUP_BUKRS_GJHAR_BELNR_BUZEI ON A_REGUP (REGUP_BUKRS,REGUP_GJAHR,REGUP_BELNR,REGUP_BUZEI);
-- CREATE INDEX  GL_BUKRS_GJHAR_BELNR_BUZEI ON B04_11_IT_FIN_GL(B04_BSEG_BUKRS,B04_BSEG_GJAHR,B04_BSEG_BELNR,B04_BSEG_BUZEI);
-- CREATE INDEX  REGUP_BUKRS_GJHAR_BELNR ON A_REGUP (REGUP_BUKRS,REGUP_GJAHR,REGUP_BELNR);
-- CREATE INDEX  BKPF_BUKRS_GJHAR_BELNR ON A_BKPF (BKPF_BUKRS,BKPF_GJAHR,BKPF_BELNR);
-- CREATE INDEX  REGUP_BLART ON A_REGUP (REGUP_BLART);
-- CREATE INDEX  T003T_BLART ON A_T003T (T003T_BLART);

   
DECLARE  
@CURRENCY NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
	


EXEC SP_DROPTABLE 'B12A_SS01_01_IT_REGUP_PAYMENT_INFO'

SELECT DISTINCT   A.*, B.*, D.T003T_LTEXT,
CONVERT(money,A.REGUP_DMBTR * (CASE WHEN (REGUP_SHKZG = 'S') THEN 1 ELSE -1 END) * COALESCE(CAST(B00_IT_TCURR.TCURR_UKURS AS FLOAT),1) * COALESCE(B00_IT_TCURF.TCURF_TFACT,1) / COALESCE(B00_IT_TCURF.TCURF_FFACT,1) * ISNULL(TCURX_COC.TCURX_factor,1)) AS ZF_REGUP_DMBTR_S_CUC   ,
CONVERT(money,A.REGUP_DMBTR  * COALESCE(CAST(B00_IT_TCURR.TCURR_UKURS AS FLOAT),1) * COALESCE(B00_IT_TCURF.TCURF_TFACT,1) / COALESCE(B00_IT_TCURF.TCURF_FFACT,1) * ISNULL(TCURX_COC.TCURX_factor,1)) AS ZF_REGUP_DMBTR_CUC   
INTO B12A_SS01_01_IT_REGUP_PAYMENT_INFO
FROM A_REGUP A
LEFT JOIN B04_11_IT_FIN_GL B ON A.REGUP_BUKRS = B.B04_BSEG_BUKRS AND A.REGUP_GJAHR = B.B04_BSEG_GJAHR AND A.REGUP_BELNR = B.B04_BSEG_BELNR AND A.REGUP_BUZEI = B.B04_BSEG_BUZEI
--LEFT JOIN A_BKPF C ON A.REGUP_BUKRS = C.BKPF_BUKRS AND A.REGUP_GJAHR = C.BKPF_GJAHR AND A.REGUP_BELNR = C.BKPF_BELNR
LEFT JOIN A_T003T D ON REGUP_BLART = T003T_BLART
LEFT JOIN A_T001
ON A.REGUP_BUKRS = A_T001.T001_BUKRS
-- Add currency factor from company currency to USD

	LEFT JOIN B00_IT_TCURF
	ON A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR
	AND B00_IT_TCURF.TCURF_TCURR  = @currency  
	AND B00_IT_TCURF.TCURF_GDATU = (
		SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
		FROM B00_IT_TCURF
		WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
				B00_IT_TCURF.TCURF_TCURR  = @currency  AND
				B00_IT_TCURF.TCURF_GDATU <= REGUP_BUDAT
		ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
		)
	-- Add exchange rate from company currency to USD
	LEFT JOIN B00_IT_TCURR
		ON A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR
		AND B00_IT_TCURR.TCURR_TCURR  = @currency  
		AND B00_IT_TCURR.TCURR_GDATU = (
			SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
			FROM B00_IT_TCURR
			WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
					B00_IT_TCURR.TCURR_TCURR  = @currency  AND
					B00_IT_TCURR.TCURR_GDATU <= REGUP_BUDAT
			ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
			) 

    -- Add currency factor for house currency
LEFT JOIN B00_TCURX TCURX_COC
ON T001_WAERS = TCURX_COC.TCURX_CURRKEY
------check with thuan remove below
---- Add currency factor for document currency   
--LEFT JOIN B00_TCURX TCURX_DOC
--ON     
--	T001_WAERS = TCURX_DOC.TCURX_CURRKEY
	-------------------
WHERE REGUP_XVORL = ''

-- Add REGUP DMBTR CUC

EXEC SP_UNNAME_FIELD 'B04_', 'B12A_SS01_01_IT_REGUP_PAYMENT_INFO'
EXEC SP_RENAME_FIELD 'B12A_SS01_', 'B12A_SS01_01_IT_REGUP_PAYMENT_INFO'

-- Step 2. Get distinct BUKRS, AUGBL, AUGGJ and BLDAT, DMBTR from REGUP (when exists in AP).

EXEC SP_DROPTABLE 'B12A_SS01_02_TT_REGUP_AUGBL_AUGGJ_BLDAT'

SELECT DISTINCT B12A_SS01_BSEG_AUGBL,B12A_SS01_BSEG_AUGGJ, B12A_SS01_REGUP_BLDAT, B12A_SS01_REGUP_DMBTR, B12A_SS01_REGUP_BUKRS
INTO B12A_SS01_02_TT_REGUP_AUGBL_AUGGJ_BLDAT
FROM B12A_SS01_01_IT_REGUP_PAYMENT_INFO
WHERE EXISTS 
(
	SELECT TOP 1 1 FROM B11_04_IT_PTP_APA
	WHERE B11B_BSAIK_AUGBL	 = B12A_SS01_BSEG_AUGBL
	AND B11B_BSAIK_AUGGJ = B12A_SS01_BSEG_AUGGJ
	AND B11B_BSAIK_BUKRS = B12A_SS01_BSEG_BUKRS
)



-- Step 3 : From Electronic bank statements
-- Get some information from BSEG 
-- Note : Manual payments might not be in REGUH/REGUP
-- Create index

-- CREATE INDEX FEBEP_KUKEY ON A_FEBEP(FEBEP_KUKEY);
-- CREATE INDEX FEBEP_FEBKO ON A_FEBKO(FEBKO_KUKEY);

EXEC SP_DROPTABLE 'B12_SS01_03_TT_FEBEP_PAYMENT_INFO'
SELECT DISTINCT B04_BSEG_AUGBL, B04_BSEG_AUGGJ, B04_BKPF_BLDAT, B04_BSEG_BUKRS   
INTO B12_SS01_03_TT_FEBEP_PAYMENT_INFO
FROM A_FEBEP A
LEFT JOIN A_FEBKO B ON FEBEP_KUKEY = FEBKO_KUKEY
LEFT JOIN B04_11_IT_FIN_GL C ON B04_BSEG_BUKRS = FEBKO_BUKRS AND B04_BSEG_GJAHR = FEBEP_GJAHR AND B04_BSEG_BELNR = FEBEP_BELNR

EXEC SP_UNNAME_FIELD 'B04_', 'B12_SS01_03_TT_FEBEP_PAYMENT_INFO'
EXEC SP_RENAME_FIELD 'B12B_SS01_', 'B12_SS01_03_TT_FEBEP_PAYMENT_INFO'


-- Step 5 From AP table 
-- Create 1 column payment date 
-- Create 1 column invoice come from.

ALTER TABLE B12_02_IT_PTP_AP ALTER COLUMN ZF_PAYMENT_DATE DATE;
ALTER TABLE B12_02_IT_PTP_AP ALTER COLUMN ZF_INV_SOURCE NVARCHAR(20);


UPDATE B12_02_IT_PTP_AP
SET ZF_PAYMENT_DATE = 
(
	CASE 
	WHEN B.B12A_SS01_REGUP_BLDAT IS NOT NULL  THEN B.B12A_SS01_REGUP_BLDAT
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NOT NULL THEN C.B12A_SS01_REGUP_BLDAT
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NOT NULL THEN D.B12B_SS01_BKPF_BLDAT
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NULL AND E.B11E_BSAIK_BLDAT IS NOT NULL THEN E.B11E_BSAIK_BLDAT
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NULL AND E.B11E_BSAIK_BLDAT IS NULL AND F.B11E_BSAIK_DMBTR IS NOT NULL THEN F.B11E_BSAIK_BLDAT
	ELSE ''

END 
)
,
ZF_INV_SOURCE = 
(
	CASE 
	WHEN B.B12A_SS01_REGUP_BLDAT IS NOT NULL  THEN 'REGUP'
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NOT NULL THEN 'REGUP'
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NOT NULL THEN 'FEBEP'
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NULL AND E.B11E_BSAIK_BLDAT IS NOT NULL THEN 'AP payment'
	WHEN B.B12A_SS01_REGUP_BLDAT IS NULL AND C.B12A_SS01_REGUP_BLDAT IS NULL AND D.B12B_SS01_BKPF_BLDAT IS NULL AND E.B11E_BSAIK_BLDAT IS NULL AND F.B11E_BSAIK_DMBTR IS NOT NULL THEN 'AP payment'
	ELSE ''

END
)
FROM B12_02_IT_PTP_AP AS A

-- Get invoice lines from BSAK(flag is payment) table base on AUGBL, AUGGJ 
-- Same AUGBL, AUGGJ, DMBTR
LEFT JOIN B11_08_IT_PTP_PAY E ON A.B11_BSAIK_BUKRS = E.B11E_BSAIK_BUKRS
			AND A.B11_BSAIK_AUGBL = E.B11E_BSAIK_AUGBL 
			AND A.B11_BSAIK_AUGGJ = E.B11E_BSAIK_AUGGJ
			AND A.B11_BSAIK_DMBTR + E.B11E_BSAIK_DMBTR = 0

-- Same AUGBL, AUGGJ not same DMBTR

LEFT JOIN B11_08_IT_PTP_PAY F ON E.B11E_BSAIK_AUGBL IS NULL
			AND A.B11_BSAIK_BUKRS = F.B11E_BSAIK_BUKRS
			AND A.B11_BSAIK_AUGBL = F.B11E_BSAIK_AUGBL 
			AND A.B11_BSAIK_AUGGJ = F.B11E_BSAIK_AUGGJ

-- Get invoice lines from REGUP table base on AUGBL, AUGGJ (same DMBTR or not)
-- Same AUGBL, AUGGJ, DMBTR

LEFT JOIN B12A_SS01_02_TT_REGUP_AUGBL_AUGGJ_BLDAT B ON E.B11E_BSAIK_AUGBL IS NULL AND F.B11E_BSAIK_AUGBL IS NULL
		AND A.B11_BSAIK_BUKRS = B.B12A_SS01_REGUP_BUKRS 
		AND A.B11_BSAIK_AUGBL = B.B12A_SS01_BSEG_AUGBL 
		AND A.B11_BSAIK_AUGGJ = B.B12A_SS01_BSEG_AUGGJ 
		AND ABS(A.B11_BSAIK_DMBTR) = ABS(B.B12A_SS01_REGUP_DMBTR)

-- Same AUGBL, AUGGJ not same DMBTR

LEFT JOIN B12A_SS01_02_TT_REGUP_AUGBL_AUGGJ_BLDAT C ON E.B11E_BSAIK_AUGBL IS NULL AND F.B11E_BSAIK_AUGBL IS NULL AND B.B12A_SS01_BSEG_AUGBL IS NULL 
			AND A.B11_BSAIK_BUKRS = C.B12A_SS01_REGUP_BUKRS
			AND A.B11_BSAIK_AUGBL = C.B12A_SS01_BSEG_AUGBL 
			AND A.B11_BSAIK_AUGGJ = C.B12A_SS01_BSEG_AUGGJ

-- Get invoice lines from FEBEP table base on AUGBL, AUGGJ 
LEFT JOIN B12_SS01_03_TT_FEBEP_PAYMENT_INFO D ON E.B11E_BSAIK_AUGBL IS NULL AND F.B11E_BSAIK_AUGBL IS NULL AND B.B12A_SS01_BSEG_AUGBL IS NULL AND C.B12A_SS01_BSEG_AUGBL IS NULL
			AND D.B12B_SS01_BSEG_BUKRS = A.B11_BSAIK_BUKRS
			AND D.B12B_SS01_BSEG_AUGBL = A.B11_BSAIK_AUGBL
			AND D.B12B_SS01_BSEG_AUGGJ = A.B11_BSAIK_AUGGJ

WHERE (B11_ZF_FLAG_SUMMARY = 'Supplier invoice' OR  B11_ZF_FLAG_SUMMARY = 'Supplier invoice cancellation' )



UPDATE B12_02_IT_PTP_AP
SET ZF_INV_SOURCE = 'Other'
WHERE ZF_INV_SOURCE  = ''


EXEC SP_REMOVE_TABLES '%_TT_%'





GO
