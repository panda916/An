USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE     PROC [dbo].[script_B07_FIN_AR_AUTO_MAPPING]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE   
       @CURRENCY NVARCHAR(MAX)      = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
      ,@DATE1 NVARCHAR(MAX)       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
      ,@DATE2 NVARCHAR(MAX)       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
      ,@DOWNLOADDATE NVARCHAR(MAX)    = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
      ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
      ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
      ,@LANGUAGE1 NVARCHAR(MAX)     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
      ,@LANGUAGE2 NVARCHAR(MAX)     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
      ,@YEAR NVARCHAR(MAX)        = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
      ,@ID NVARCHAR(MAX)          = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
      ,@LIMIT_RECORDS INT               = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
      ,@ZV_LFA1_KTOKK_PERS INT                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_LFA1_KTOKK_PERS')
	  ,@ZV_KNA1_KTOKD_PERS INT                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_KNA1_KTOKD_PERS')


  /*Change history comments*/

  /*
    Title     : [B07B_FIN_AP_DOC_TYPES_FILL_BUCKET]
    Description     : Table updated by this script: B07_02_RT_FIN_AP_INV_PAY_FLAGS
              - DV06 should be reloaded after running this script
              Table produced by this script: B07_02_IT
              Table is used to create the P2P cube
    
    --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date          | Who     | Description
    DD-MM-YYYY        Initials    Initial version
    27-11-2020        Vinh Le     Create first version of AR mapping automatically
  */

 

	  /*Test mode*/

	  SET ROWCOUNT @LIMIT_RECORDS

	  /*
		  Step 1: Create a summary table before we flag the AP document with categories to we can check the mapping easier because it have less record than full AR documents tables.
	  */
	  EXEC SP_REMOVE_TABLES 'B07_01_TT_FIN_AR_INV_PAY_FLAGS'
	  SELECT DISTINCT
			B04B_BSAID_BUKRS BSAID_BUKRS,
			B04B_BSAID_BLART BSAID_BLART,
			B04B_ZF_DOC_CLEARING_FLAG ZF_DOC_CLEARING_FLAG,
			B04B_BKPF_TCODE BKPF_TCODE,
			B04B_BKPF_AWTYP BKPF_AWTYP,
			B04B_KNA1_KTOKD KNA1_KTOKD,
			B04B_BSAID_XANET BSAID_XANET,
			B04B_BSAID_KUNNR BSAID_KUNNR,
			B04B_BSAID_SHKZG BSAID_SHKZG,
			B04B_ZF_DEBIT_ACCOUNT_TYPES ZF_DEBIT_ACCOUNT_TYPES,
			B04B_ZF_CREDIT_ACCOUNT_TYPES ZF_CREDIT_ACCOUNT_TYPES,
			B04B_ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST,
			B04B_ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST,
			B04B_ZF_DEBIT_SKA1_GVTYP_FLAG_LIST ZF_DEBIT_SKA1_GVTYP_FLAG_LIST,
			B04B_ZF_CREDIT_SKA1_GVTYP_FLAG_LIST ZF_CREDIT_SKA1_GVTYP_FLAG_LIST,
			B04B_ZF_LIFNR_KUNNR_IS_SAME_FLAG ZF_LIFNR_KUNNR_IS_SAME_FLAG,
			'Y' AS UNCLASSIFIED_FLAG
	  INTO B07_01_TT_FIN_AR_INV_PAY_FLAGS
	  FROM B04_12_IT_BSAD_BSID_AR_ACC_SCH

	  /*
		Step 2: Add AR document type columns with default value is "Other". It will be update later
	  */

		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_AR_LIFE_CYCLE_BUCKET_TYPE NVARCHAR(1) DEFAULT 'G' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_AR_LIFE_CYCLE_MAPPING_LABEL NVARCHAR(100) DEFAULT 'Others' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_AR_DOC_TYPE_BUCKET NVARCHAR(100) DEFAULT 'Others' WITH  VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_CUS_INV NVARCHAR(1) DEFAULT '' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_CUS_INV_CANC NVARCHAR(1) DEFAULT '' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_CUS_PYMT NVARCHAR(1) DEFAULT '' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_CUS_PYMT_CANC NVARCHAR(1) DEFAULT '' WITH VALUES;
		ALTER TABLE B07_01_TT_FIN_AR_INV_PAY_FLAGS ADD ZF_OTHERS NVARCHAR(1) DEFAULT '' WITH VALUES;


	  /*
		Step 3: Update the AR document type base on ACL logic from Claire
	  */

		  /*
			Step 3.1: Flag ar documents which have document type (BLART = ___ ) to Others bucket
		  */
			--Wating condition


		  /*
			Step 3.2: Flag all documents have
							Credit on account type 'D'
							Debit on (SKA1_GVTYP_BSEG<> "" OR  BSEG_KOART = S) AND NOT(ZF_BSEG_HKONT_PAYFLAG) AND BSAK_XANET ="" 
							BELNR = AUGBL
							AWTYP <> 'VBRK'
						 to "Others" bucket 
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Others', ZF_OTHERS = 'X', UNCLASSIFIED_FLAG = ''
		  WHERE UNCLASSIFIED_FLAG = 'Y' 
				AND (
						LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'D' 
						AND (
								LEFT(ZF_DEBIT_SKA1_GVTYP_FLAG_LIST, 1) <> '_' OR 
								LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'S'
							)
						AND LEFT(ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) <> 'Y'
						AND ISNULL(BSAID_XANET, '') = ''
						AND ZF_DOC_CLEARING_FLAG = 1
						AND BKPF_AWTYP <> 'VBRK'

					 )
	  
		  /*
			Step 3.3: Flag all documents have
							Discuss with Claire if we should not get the customer equal to vendor number rule reinstated for KOART D/K postings
						 to "Others" bucket 
					  Meeting with Jesper on 26-03-2021
					  Add a new rule from Sony's daily meeting on Monday, 29 March 2021. We should flag all documents credit on 'K' and vendor number is blank to "Others"
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Others', ZF_OTHERS = 'X', UNCLASSIFIED_FLAG = ''
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'D' 
						AND (
								(
									LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'K'
									AND ZF_LIFNR_KUNNR_IS_SAME_FLAG = 'Y'
								)
								OR
								ISNULL(BSAID_KUNNR, '') = ''
						   )
						 
					 )


		  /*
			Step 3.4: Flag all documents have
							Credit on (SKA1_GVTYP_BSEG <> "" OR  BSEG_KOART = S) AND NOT(ZF_BSEG_HKONT_PAYFLAG) AND BSAK_XANET ="" 
							Debit on account type 'D'
							BELNR <> AUGBL
							AWTYP = 'VBRK'
						  to Customer invoice
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Customer invoice',
			  ZF_CUS_INV = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'B',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Open Invoices'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						(
							LEFT(ZF_CREDIT_SKA1_GVTYP_FLAG_LIST, 1) <> '_' OR
							LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'S'
						)
						AND LEFT(ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) <> 'Y'
						AND LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'D'
						AND ISNULL(BSAID_XANET, '') = ''
						AND ZF_DOC_CLEARING_FLAG = 0
						AND BKPF_AWTYP = 'VBRK'
					
				 )

		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Customer invoice',
			  ZF_CUS_INV = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'B',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Open Invoices'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						BSAID_SHKZG = 'S'
						AND ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST NOT LIKE '%Y%'
						AND ISNULL(BSAID_XANET, '') = ''
						AND ZF_DOC_CLEARING_FLAG = 0
						AND BKPF_AWTYP = 'VBRK'
					
				 )

		  /*
			Step 3.5: Flag all documents have
							Credit on account type 'D'
							Debit on (SKA1_GVTYP_BSEG<> "" OR  BSEG_KOART = S) AND NOT(ZF_BSEG_HKONT_PAYFLAG) AND BSAK_XANET ="" 
							AUGBL <> BELNR
							AWTYP = VBRK
						  to Customer invoice cancellation/Credit note
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Credit note',
			  ZF_CUS_INV_CANC = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'E',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Credit note'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'D'
						AND (
							LEFT(ZF_DEBIT_SKA1_GVTYP_FLAG_LIST, 1) <> '_' OR
							LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'S'
						)
						AND LEFT(ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) <> 'Y'
						AND ISNULL(BSAID_XANET, '') = ''
						AND ZF_DOC_CLEARING_FLAG = 0
						AND BKPF_AWTYP = 'VBRK'
				 )

		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Credit note',
			  ZF_CUS_INV_CANC = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'E',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Credit note'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						BSAID_SHKZG = 'H'
						AND ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST NOT LIKE '%Y%'
						AND ISNULL(BSAID_XANET, '') = ''
						AND ZF_DOC_CLEARING_FLAG = 0
						AND BKPF_AWTYP = 'VBRK'
				 )

		  /*
			Step 3.6: Flag all documents have
							Credit on BSEG_KOART = D
							Debit on ZF_BSEG_HKONT_PAYFLAG OR BSAK_XANET <> ""
							AWTYP <> VBRK
						  to Supplier payment
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Customer payment',
		      ZF_CUS_PYMT = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'D',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Cash payment'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
					LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'D'
					AND (
							LEFT(ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) = 'Y'
							OR ISNULL(BSAID_XANET, '') <> ''
						)
					AND BKPF_AWTYP <> 'VBRK'
					
				)


		  /*
			Step 3.7: Flag all documents have
							Credit on ZF_BSEG_HKONT_PAYFLAG OR BSAK_XANET <> "" 
							Debit on BSEG_KOART = D
							AWTYP <> VBRK
						  to Customer payment cancellation
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Customer payment cancellation',
		      ZF_CUS_PYMT_CANC = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'F',
			  ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Deductions'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
					    (
							LEFT(ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) = 'Y'
							OR ISNULL(BSAID_XANET, '') <> ''
						)
						AND LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1 ) = 'D'
						AND BKPF_AWTYP <> 'VBRK'
					
				)
		  /*
			Step 3.8: Flag all documents have
							Credit on (SKA1_GVTYP_BSEG <> "" OR  BSEG_KOART = S) AND NOT(ZF_BSEG_HKONT_PAYFLAG) AND BSAK_XANET ="" 
							Debit on account type 'D'
						  to Customer invoice
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Customer invoice',
		      ZF_CUS_INV = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'B',
		      ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Open Invoices'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						(
							LEFT(ZF_CREDIT_SKA1_GVTYP_FLAG_LIST, 1) <> '_' OR
							LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'S'
						)
						AND LEFT(ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) <> 'Y'
						AND LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'D'
						AND ZF_DOC_CLEARING_FLAG = 0
						AND ISNULL(BSAID_XANET, '') = ''
					
				 )

		  /*
			Step 3.5: Flag all documents have
							Credit on account type 'D'
							Debit on (SKA1_GVTYP_BSEG<> "" OR  BSEG_KOART = S) AND NOT(ZF_BSEG_HKONT_PAYFLAG) AND BSAK_XANET ="" 
						  to Customer invoice cancellation/Credit note
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Credit note',
		      ZF_CUS_INV_CANC = 'X',
			  UNCLASSIFIED_FLAG = '',
			  ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'E',
		      ZF_AR_LIFE_CYCLE_MAPPING_LABEL = 'Credit note'
		  WHERE UNCLASSIFIED_FLAG = 'Y'
				AND (
						LEFT(ZF_CREDIT_ACCOUNT_TYPES, 1) = 'D'
						AND (
							LEFT(ZF_DEBIT_SKA1_GVTYP_FLAG_LIST, 1) <> '_' OR
							LEFT(ZF_DEBIT_ACCOUNT_TYPES, 1) = 'S'
						)
						AND LEFT(ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, 1) <> 'Y'
						AND ZF_DOC_CLEARING_FLAG = 0
						AND ISNULL(BSAID_XANET, '') = ''
				 )

		  /*
			Step 3.10: Flag the rest documents to others
		  */
		  UPDATE B07_01_TT_FIN_AR_INV_PAY_FLAGS
		  SET ZF_AR_DOC_TYPE_BUCKET = 'Others', ZF_OTHERS = 'X'
		  WHERE  UNCLASSIFIED_FLAG = 'Y'

	/*
		Step 4: Join the summary table after flaged all AR docuement to categories back to full AR document cube.
	*/

	EXEC SP_REMOVE_TABLES 'B07_04_IT_FIN_AR_INV_PAY_FLAGS'

	SELECT 
			B04_12_IT_BSAD_BSID_AR_ACC_SCH.*,
			ZF_AR_LIFE_CYCLE_BUCKET_TYPE,
			ZF_AR_LIFE_CYCLE_MAPPING_LABEL,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_AR_DOC_TYPE_BUCKET,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CUS_INV,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CUS_INV_CANC,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CUS_PYMT,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CUS_PYMT_CANC,
			B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_OTHERS
	INTO B07_04_IT_FIN_AR_INV_PAY_FLAGS
	FROM B07_01_TT_FIN_AR_INV_PAY_FLAGS
	LEFT JOIN B04_12_IT_BSAD_BSID_AR_ACC_SCH
	ON 
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BSAID_BUKRS, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BSAID_BUKRS, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BSAID_BLART, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BSAID_BLART, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_DOC_CLEARING_FLAG, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_DOC_CLEARING_FLAG, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BKPF_TCODE, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BKPF_TCODE, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BKPF_AWTYP, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BKPF_AWTYP, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.KNA1_KTOKD, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_KNA1_KTOKD, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BSAID_XANET, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BSAID_XANET, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BSAID_KUNNR, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BSAID_KUNNR, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.BSAID_SHKZG, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_BSAID_SHKZG, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_DEBIT_ACCOUNT_TYPES, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_DEBIT_ACCOUNT_TYPES, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CREDIT_ACCOUNT_TYPES, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_CREDIT_ACCOUNT_TYPES, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_DEBIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_CREDIT_T012K_FEBKO_SKB1_HBKID_XGKON_FLAG_LIST, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_DEBIT_SKA1_GVTYP_FLAG_LIST, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_DEBIT_SKA1_GVTYP_FLAG_LIST, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_CREDIT_SKA1_GVTYP_FLAG_LIST, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_CREDIT_SKA1_GVTYP_FLAG_LIST, '') AND
		ISNULL(B07_01_TT_FIN_AR_INV_PAY_FLAGS.ZF_LIFNR_KUNNR_IS_SAME_FLAG, '') = ISNULL(B04_12_IT_BSAD_BSID_AR_ACC_SCH.B04B_ZF_LIFNR_KUNNR_IS_SAME_FLAG, '')

	EXEC SP_UNNAME_FIELD 'B04B_', 'B07_04_IT_FIN_AR_INV_PAY_FLAGS'
	EXEC SP_RENAME_FIELD 'B07D_', 'B07_04_IT_FIN_AR_INV_PAY_FLAGS'
	EXEC SP_REMOVE_TABLES '%_TT_%'
GO
