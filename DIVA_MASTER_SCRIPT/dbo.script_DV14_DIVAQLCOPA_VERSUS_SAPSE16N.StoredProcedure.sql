USE [DIVA_MASTER_SCRIPT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


  
--ALTER PROC [dbo].[DV14_DIVAQLCOPA_VERSUS_SAPSE16N]
CREATE     PROC [dbo].[script_DV14_DIVAQLCOPA_VERSUS_SAPSE16N]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN



/* Initiate the log */
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL


/* Initialize parameters from globals table */

     DECLARE
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)


/*Test mode*/

--SET ROWCOUNT @LIMIT_RECORDS

/*Change history comments*/


/*
    Title            :  DV014: DV14_DIVAQLCOPA_VERSUS_SAPSE16N
    Description      : Compares the SAP SE16N report to the DIVA COPA transaction details table
       --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |      Who |  Description

	OCT-01-2018             NP      CREATION

*/


--Step 0: Executing the subscripts first, specific for COPA data validation only

--EXEC script_DV14_SS01_DIVAQLCOPA_VERSUS_SAPSE16N

-- Step 1/ Set up the code that will enable message to be sent back to the user of the Java app
-- that decides to run the script
--CREATE log table TO RETURN RESULTS FOR USERS
-- Variables for user message for feedback
-- First two columns are used for SP_QlikNamingClassifier,
-- Third column is only one used for sending messages to user for progress of DV scripts


DECLARE @MSG NVARCHAR(MAX)
EXEC SP_DROPTABLE 'DV00_RT_USER_FEEDBACK_MESSAGE'
CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE
     (OLD_NAME NVARCHAR(MAX), NEW_NAME NVARCHAR(MAX), _LOG NVARCHAR(MAX))



-- The following code can be put wherever we want and whenever we want to send a message back to the user
-- that has pressed Java Upload app button for running this script.

--SET @MSG = '<Feedback message for user>' --print back status for users
--INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', @MSG)

-- Step 2/ Totals on data exported from DIVA dashboard
-- Calculate the total value per FY, Company, and Document number and Value fields from COPA detail table
-- At the same time, renaming with table name as prefix
	

EXECUTE SP_DROPTABLE 'DV14_01_TT_DIVAQLCOPA_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR'



SELECT
       [Company Code]  DIVAQLCOPA_COMPANY
	  ,[Fiscal year] DIVAQLCOPA_FY
	  ,[Posting date] DIVAQLCOPA_POSTING_DATE
      ,DBO.REMOVE_LEADING_ZEROES([COPA doc nr])  DIVAQLCOPA_BILLING_DOC_NR
	  ,SUM(DBO.STRING_TO_NUMBER([Gross Sales])) ZF_DIVAQLCOPA_SUM_GROSS_SALES
	  ,SUM(DBO.STRING_TO_NUMBER([Sales Reduction])) ZF_DIVAQLCOPA_SUM_SALE_REDUCTION
	  ,SUM(DBO.STRING_TO_NUMBER([Net Sales])) ZF_DIVAQLCOPA_SUM_NET_SALES
	  ,SUM(DBO.STRING_TO_NUMBER([COGS])) ZF_DIVAQLCOPA_SUM_COGS
   	  ,SUM(DBO.STRING_TO_NUMBER([Gross Profit])) ZF_DIVAQLCOPA_SUM_GROSS_PROFIT 



	--  Calculated fields are made in this step with ZF_<DIVAQLXX/DIVASQLXX>_<ACTION>_<TECH_FIELDNAME>

	  INTO  DV14_01_TT_DIVAQLCOPA_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR

	  FROM AQLIK_COPA_TRANS_DETAILS

	  
GROUP BY
          [Company Code]
		 ,[Fiscal year]
		 ,[Posting date]
         ,[COPA doc nr]

-- Step 3/
-- Value for the SAP report SE16N


EXECUTE SP_DROPTABLE 'DV14_02_TT_SAPSE16N_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR'

SELECT
       BUKRS SAP_BUKRS
      ,GJAHR SAP_GJAHR

	  ,BUDAT SAP_BUDAT
      ,PAOBJNR SAP_PAOBJNR
     
      
       

	  ,SUM(DBO.STRING_TO_NUMBER(ISNULL([Gross Sales],0)))				ZF_SAPSE16N_SUM_GROSS_SALES
	  ,SUM(DBO.STRING_TO_NUMBER(ISNULL([Sales Reductions],0)))*-1		ZF_SAPSE16N_SUM_SALE_REDUCTIONS
	  ,SUM(DBO.STRING_TO_NUMBER(ISNULL([Gross Sales],0))) 
		- SUM(DBO.STRING_TO_NUMBER([Sales Reductions]))*-1
																		ZF_SAPSE16N_SUM_NET_SALES
	  ,SUM(DBO.STRING_TO_NUMBER(ISNULL(COGS,0)))						ZF_SAPSE16N_SUM_COGS
      ,SUM(DBO.STRING_TO_NUMBER(ISNULL([Gross Sales],0))) 
		- SUM(DBO.STRING_TO_NUMBER(ISNULL([Sales Reductions],0))) *-1
		- SUM(DBO.STRING_TO_NUMBER(ISNULL(COGS,0)))					ZF_SAPSE16N_SUM_GROSS_PROFIT 


	  
	
INTO
       DV14_02_TT_SAPSE16N_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR
	   
FROM
	   [DV14_SS01_04_TT_FULL_SAPSE16N_HIERARCHY_LEVEL1_PIVOTED]

GROUP BY
       BUKRS
      ,GJAHR
	  ,BUDAT
      ,PAOBJNR

 

--Step 4/
--Compare the total per COPA sap field name from DIVA QLIK data to the COPA sap field name from the SAP report


EXECUTE SP_DROPTABLE 'DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N'

SELECT
	  -- Key fields:
		DIVAQLCOPA_COMPANY,
		SAP_BUKRS,

		DIVAQLCOPA_FY,
		SAP_GJAHR,

		DIVAQLCOPA_POSTING_DATE,
		SAP_BUDAT,
	
		
		
    -- String comparison field (CHECK field):
      DIVAQLCOPA_BILLING_DOC_NR,
      SAP_PAOBJNR
	  ,CASE
	     WHEN ISNULL(DIVAQLCOPA_BILLING_DOC_NR, '') = '' AND ISNULL(SAP_PAOBJNR, '')<>'' THEN 'Billing Doc Nr in SAP not DIVA'
		 WHEN ISNULL(DIVAQLCOPA_BILLING_DOC_NR, '') <> '' AND ISNULL(SAP_PAOBJNR, '') = '' THEN 'Billing Doc Nr in DIVA not SAP'
		 WHEN ISNULL(DIVAQLCOPA_BILLING_DOC_NR, '') <> '' AND ISNULL(SAP_PAOBJNR, '') <> '' THEN 'Billing Doc Nr in DIVA and SAP'
		 ELSE 'Case not identified'
      END  ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA
	  
	  -- Numeric comparison field:
		-- gross sales
		,ZF_DIVAQLCOPA_SUM_GROSS_SALES
		,ZF_SAPSE16N_SUM_GROSS_SALES
	
      ,ISNULL(ZF_DIVAQLCOPA_SUM_GROSS_SALES,0) - ISNULL(ZF_SAPSE16N_SUM_GROSS_SALES,0) ZF_DIVAQLCOPA_GS_MINUS_SAPCOPA_GS
	  
		-- sale reduction

	
		,ZF_DIVAQLCOPA_SUM_SALE_REDUCTION
		,ZF_SAPSE16N_SUM_SALE_REDUCTIONS
		,ISNULL(ZF_DIVAQLCOPA_SUM_SALE_REDUCTION,0) - ISNULL(ZF_SAPSE16N_SUM_SALE_REDUCTIONS,0) ZF_DIVAQLCOPA_SR_MINUS_SAPCOPA_SR
		
		-- net sales
		
		,ZF_DIVAQLCOPA_SUM_NET_SALES
		,ZF_SAPSE16N_SUM_NET_SALES
	  ,ISNULL(ZF_DIVAQLCOPA_SUM_NET_SALES,0) - ISNULL(ZF_SAPSE16N_SUM_NET_SALES,0) ZF_DIVAQLCOPA_NS_MINUS_SAPCOPA_NS
	 
		-- cogs
		,ZF_DIVAQLCOPA_SUM_COGS
		,ZF_SAPSE16N_SUM_COGS
	  ,ISNULL(ZF_DIVAQLCOPA_SUM_COGS,0) - ISNULL(ZF_SAPSE16N_SUM_COGS,0) ZF_DIVAQLCOPA_COGS_MINUS_SAPCOPA_COGS
		
		--gross profit

		,ZF_DIVAQLCOPA_SUM_GROSS_PROFIT
		,ZF_SAPSE16N_SUM_GROSS_PROFIT

	  ,ISNULL(ZF_DIVAQLCOPA_SUM_GROSS_PROFIT,0) - ISNULL(ZF_SAPSE16N_SUM_GROSS_PROFIT,0) ZF_DIVAQLCOPA_GP_MINUS_SAPCOPA_GP


	  
	  
INTO DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N

FROM DV14_01_TT_DIVAQLCOPA_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR

FULL OUTER JOIN DV14_02_TT_SAPSE16N_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR
	ON  DIVAQLCOPA_COMPANY = SAP_BUKRS
	AND DIVAQLCOPA_FY = SAP_GJAHR
	AND DBO.REMOVE_LEADING_ZEROES(DIVAQLCOPA_BILLING_DOC_NR) = DBO.REMOVE_LEADING_ZEROES(SAP_PAOBJNR)
	
--Step 5/
--Split the comparison into two tables so that we can be able to filter them separately on the QLIK dashboard

-- Step 5.1: QLIK full table

EXEC SP_DROPTABLE 'DV14_04_RT_FULL_DIVAQLCOPA'

SELECT *
	   

INTO DV14_04_RT_FULL_DIVAQLCOPA

FROM DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N

WHERE DIVAQLCOPA_COMPANY IS NOT NULL

-- 5.2 Create DV14_05_RT_FULL_SAPCOPA

EXEC SP_DROPTABLE 'DV14_05_RT_FULL_SAPCOPA'

SELECT *
	 

INTO DV14_05_RT_FULL_SAPCOPA

FROM DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N

WHERE SAP_BUKRS IS NOT NULL


--Step 6/
--Split the comparison into two discrepancy tables so that we can filter them separately

-- 6.1/ QLIK discrepancy table

EXEC SP_DROPTABLE 'DV14_06_RT_DISC_DIVAQL'

SELECT *
	  

INTO DV14_06_RT_DISC_DIVAQL

FROM DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N

WHERE
	  ( (ABS(ZF_DIVAQLCOPA_GS_MINUS_SAPCOPA_GS)>10 OR
		ABS(ZF_DIVAQLCOPA_SR_MINUS_SAPCOPA_SR)>10 OR
		ABS(ZF_DIVAQLCOPA_NS_MINUS_SAPCOPA_NS)>10 OR
		ABS(ZF_DIVAQLCOPA_COGS_MINUS_SAPCOPA_COGS)>10 OR
		ABS(ZF_DIVAQLCOPA_GP_MINUS_SAPCOPA_GP)>10 ) 

		OR ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Billing Doc Nr in DIVA not SAP'
		
		OR ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Case not identified')

		AND NOT (
		
		(ABS(ZF_DIVAQLCOPA_GS_MINUS_SAPCOPA_GS)>10 OR
		ABS(ZF_DIVAQLCOPA_SR_MINUS_SAPCOPA_SR)>10 OR
		ABS(ZF_DIVAQLCOPA_NS_MINUS_SAPCOPA_NS)>10 OR
		ABS(ZF_DIVAQLCOPA_COGS_MINUS_SAPCOPA_COGS)>10 OR
		ABS(ZF_DIVAQLCOPA_GP_MINUS_SAPCOPA_GP)>10 ) 
		
		AND ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Billing Doc Nr in SAP not DIVA'

		)

		
		
-- 6.2/ SAP discrepancy table

EXEC SP_DROPTABLE 'DV14_07_RT_DISC_SAPCOPA'

SELECT *
	  

INTO DV14_07_RT_DISC_SAPCOPA

FROM DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N

WHERE
	   
	   ( (ABS(ZF_DIVAQLCOPA_GS_MINUS_SAPCOPA_GS)>10 OR
		ABS(ZF_DIVAQLCOPA_SR_MINUS_SAPCOPA_SR)>10 OR
		ABS(ZF_DIVAQLCOPA_NS_MINUS_SAPCOPA_NS)>10 OR
		ABS(ZF_DIVAQLCOPA_COGS_MINUS_SAPCOPA_COGS)>10 OR
		ABS(ZF_DIVAQLCOPA_GP_MINUS_SAPCOPA_GP)>10 ) 

		OR ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Billing Doc Nr in SAP not DIVA'
		
		OR ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Case not identified')

		AND NOT (
		
		(ABS(ZF_DIVAQLCOPA_GS_MINUS_SAPCOPA_GS)>10 OR
		ABS(ZF_DIVAQLCOPA_SR_MINUS_SAPCOPA_SR)>10 OR
		ABS(ZF_DIVAQLCOPA_NS_MINUS_SAPCOPA_NS)>10 OR
		ABS(ZF_DIVAQLCOPA_COGS_MINUS_SAPCOPA_COGS)>10 OR
		ABS(ZF_DIVAQLCOPA_GP_MINUS_SAPCOPA_GP)>10 ) 
		
		AND ZF_CHECK_PAOBJNR_IN_DIVAQLCOPA_AND_SAPCOPA = 'Billing Doc Nr in DIVA not SAP'

		)


-- Step 7/ User feedback message

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV14_DIVAQLCOPA_VERSUS_SAPSE16N')

--Step 8/ Delete temporary tables
--EXECUTE SP_DROPTABLE 'DV14_01_TT_DIVAQLCOPA_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR'
--EXECUTE SP_DROPTABLE 'DV14_02_TT_SAPSE16N_TOT_BUKRS_GJAHR_BUDAT_PAOBJNR'


--Step 9/ Rename fields for QLIK

EXEC SP_RENAME_FIELD 'DV14A_', 'DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N'
EXEC SP_RENAME_FIELD 'DV14B_', 'DV14_04_RT_FULL_DIVAQLCOPA'
EXEC SP_RENAME_FIELD 'DV14C_', 'DV14_05_RT_FULL_SAPCOPA'
EXEC SP_RENAME_FIELD 'DV14D_', 'DV14_06_RT_DISC_DIVAQL'
EXEC SP_RENAME_FIELD 'DV14E_', 'DV14_07_RT_DISC_SAPCOPA'

-- Log cube creation


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N',(SELECT COUNT(*) FROM DV14_03_RT_COMP_DIVAQLCOPA_SAPSE16N)
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV14_04_RT_FULL_DIVAQLCOPA',(SELECT COUNT(*) FROM DV14_04_RT_FULL_DIVAQLCOPA)
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV14_05_RT_FULL_SAPCOPA',(SELECT COUNT(*) FROM DV14_05_RT_FULL_SAPCOPA)
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV14_06_RT_DISC_DIVAQL',(SELECT COUNT(*) FROM DV14_06_RT_DISC_DIVAQL)
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV14_07_RT_DISC_SAPCOPA',(SELECT COUNT(*) FROM DV14_07_RT_DISC_SAPCOPA)

/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure finished',NULL,NULL
END
GO
