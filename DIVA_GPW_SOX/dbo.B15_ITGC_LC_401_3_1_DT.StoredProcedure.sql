USE [DIVA_GPW_SOX]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[B15_ITGC_LC_401_3_1_DT]
AS

-- Step 1: Add column ZF_NEW_LEFT_EMPLOY to get new employee and recently left Employee
-- Add column ZF_CHANGE_ACCESS_FLAG to get Employee changed access

EXEC SP_DROPTABLE 'B15_01_TT_EMPLOYEE_TEMP'

	SELECT 
		A.*,
		B.PA0001_STELL,
		B.PA0001_PLANS,
		B.PA0001_BUKRS,
		B.PA0001_WERKS,
		B.PA0001_PERSG,
		B.PA0001_PERSK,
		B.PA0001_BTRTL,
		B.PA0001_MSTBR,
		B.PA0001_SNAME,
		B.PA0001_KOKRS,
		B.PA0001_KOSTL,
		B.PA0001_ORGEH,
		B.PA0001_OTYPE,
		B.PA0001_ENAME,
		B.PA0001_SBMOD,
		B.PA0001_SACHZ,
		B.PA0001_ANSVH,
		A_PA0105.PA0105_USRID AS BNAME,
		A_T501T.T501T_PTEXT AS EMPLOY_GROUP_DESC,
		A_T503T.T503T_PTEXT AS EMPLOY_SUBGROUP_DESC,
		A_T529T.T529T_MNTXT AS ZF_ACCTION_DESC,
		D.T528T_PLSTX AS ZF_POSITION_DESC,
		F.T513S_STLTX AS ZF_JOB_DESC,
		-- Add flag to show person that left the company
		(CASE WHEN PA0000_MASSN = '10' or PA0000_MASSN = '22' THEN 'YES' ELSE 'NO'  END ) ZF_LEFT_EMPLOY,
		-- Add flag to show person that change job - ok
		(CASE WHEN  A.PA0000_PERNR IN 
			(
				SELECT PA0001_PERNR FROM A_PA0001
				GROUP BY PA0001_PERNR 
				HAVING COUNT(DISTINCT  PA0001_STELL)>1
			)
			THEN 'YES'
			ELSE 'NO'
			END
		) AS ZF_EMPLOY_CHANGE_JOB_FLAG,
		-- Add flag to show person that change position
		(CASE WHEN  A.PA0000_PERNR IN 
			(
				SELECT PA0001_PERNR FROM A_PA0001
				GROUP BY PA0001_PERNR 
				HAVING COUNT(DISTINCT  PA0001_PLANS)>1
			)
			THEN 'YES' 
			ELSE 'NO'
			END
		) AS ZF_EMPLOY_CHANGE_POS_FLAG
	INTO B15_01_TT_EMPLOYEE_TEMP
	FROM A_PA0000 AS A
	LEFT JOIN A_PA0001 AS B
	ON A.PA0000_PERNR = B.PA0001_PERNR
	LEFT JOIN A_T501T 
	ON B.PA0001_PERSG = T501T_PERSG
	LEFT JOIN A_T503T 
	ON B.PA0001_PERSK = T503T_PERSK
	LEFT JOIN A_T529T 
	ON T529T_MASSN = A.PA0000_MASSN
	LEFT JOIN A_PA0105
	ON PA0000_PERNR = PA0105_PERNR
	-- Left join with T528T table and just get the newest position title in one position code
	LEFT JOIN (SELECT * FROM 
					(
						SELECT * FROM A_T528T
						WHERE T528T_PLANS+CONVERT(NVARCHAR,YEAR(T528T_ENDDA)) IN
						(
							SELECT T528T_PLANS+CONVERT(nvarchar,MAX(YEAR(T528T_ENDDA)))  FROM A_T528T
							GROUP BY T528T_PLANS
						)
					)AS C )AS D
	ON D.T528T_PLANS = PA0001_PLANS
	-- Left join with T528T table and just get the newest job title in one job code
	LEFT JOIN (SELECT * FROM 
					(
						SELECT * FROM A_T513S
						WHERE T513S_STELL+CONVERT(nvarchar,YEAR(T513S_ENDDA)) IN
						(
							SELECT T513S_STELL+CONVERT(nvarchar,MAX(YEAR(T513S_ENDDA)))  FROM A_T513S
							GROUP BY T513S_STELL
						)
					) AS A ) AS F
	ON F.T513S_STELL = B.PA0001_STELL
	WHERE PA0105_SUBTY = '0001'


-- Step 2: Remove duplicate value 
EXEC SP_DROPTABLE 'B15_02_IT_EMPLOYEE'

	SELECT DISTINCT A.*,
		T530T_MGTXT AS ZF_REASON_ACTION
	INTO B15_02_IT_EMPLOYEE 
	FROM B15_01_TT_EMPLOYEE_TEMP AS A
	LEFT JOIN A_T530T
	ON A.PA0000_MASSG = T530T_MASSG
	AND A.PA0000_MASSN = T530T_MASSN



-- Step 2.1: Add previous job field to personal table
ALTER TABLE B15_02_IT_EMPLOYEE 
ADD ZF_PREVIOUS_JOB VARCHAR(100)

UPDATE B15_02_IT_EMPLOYEE
SET ZF_PREVIOUS_JOB = PREVIOUS_JOB
FROM B15_02_IT_EMPLOYEE AS A
LEFT JOIN 
(
SELECT
      PA0000_PERNR
    , STUFF((
          SELECT distinct', ' + CONVERT(nvarchar,  T.PA0001_STELL+
		  CASE WHEN ZF_JOB_DESC IS NULL
		  THEN ''
		  ELSE ' - '+ZF_JOB_DESC
		  END ) 
          FROM B15_02_IT_EMPLOYEE T
		  where A.PA0000_PERNR = T.PA0000_PERNR
		  AND YEAR(T.PA0000_ENDDA) <> 9999
				
          FOR XML PATH('')), 1, 1, '') AS PREVIOUS_JOB
FROM B15_02_IT_EMPLOYEE A
WHERE ZF_EMPLOY_CHANGE_JOB_FLAG = 'YES' 
GROUP BY  PA0000_PERNR
) AS B
ON A.PA0000_PERNR = B.PA0000_PERNR

-- Step 2.3: Add employment status description to B15_02_IT_EMPLOYEE table 
ALTER TABLE B15_02_IT_EMPLOYEE 
ADD ZF_EMPLOYMENT_STATUS_DESC VARCHAR(100)

UPDATE B15_02_IT_EMPLOYEE
SET ZF_EMPLOYMENT_STATUS_DESC = A.TEXT1
FROM B15_02_IT_EMPLOYEE 
LEFT JOIN 
	(SELECT STATV,TEXT1 FROM A_T529U
		WHERE STATN = 2 AND SPRSL = 'EN'
	)AS A
ON PA0000_STAT2 = A.STATV

-- Step 2.4: Add special payment description to B15_02_IT_EMPLOYEE table 

ALTER TABLE B15_02_IT_EMPLOYEE 
ADD ZF_SPECIAL_PAYMENT_DESC VARCHAR(100)

UPDATE B15_02_IT_EMPLOYEE
SET ZF_SPECIAL_PAYMENT_DESC = A.TEXT1
FROM B15_02_IT_EMPLOYEE 
LEFT JOIN 
	(SELECT STATV,TEXT1 FROM A_T529U
		WHERE STATN = 3 AND SPRSL = 'EN'
	)AS A
ON PA0000_STAT3 = A.STATV

-- Step 2.5: Add flag for user change job

ALTER TABLE B15_02_IT_EMPLOYEE
ADD ZF_USER_CHANGE_JOB VARCHAR(3)

UPDATE B15_02_IT_EMPLOYEE
SET ZF_USER_CHANGE_JOB =
	CASE WHEN  BNAME IN 
		(
			SELECT BNAME FROM B15_02_IT_EMPLOYEE
			GROUP BY BNAME 
			HAVING COUNT(DISTINCT  PA0001_STELL)>1
		)
		AND BNAME <> ''
		THEN 'YES'
		ELSE 'NO'
	END

-- Step 2.6: Add flag for user change position
ALTER TABLE B15_02_IT_EMPLOYEE
ADD ZF_USER_CHANGE_POS VARCHAR(3)

UPDATE B15_02_IT_EMPLOYEE
SET ZF_USER_CHANGE_POS =
	CASE WHEN  BNAME IN 
		(
			SELECT BNAME FROM B15_02_IT_EMPLOYEE
			GROUP BY BNAME 
			HAVING COUNT(DISTINCT  PA0001_PLANS)>1
		)
		AND BNAME <>''
		THEN 'YES' 
		ELSE 'NO'
	END
-- Step 3: Create table that Users doing transport


EXEC SP_DROPTABLE 'B15_03_IT_USER_TRANSPORT'

	SELECT 
		A.*,
		(CASE WHEN A.USR02_BNAME IN (SELECT DISTINCT E070_AS4USER FROM A_E070 ) THEN 'YES' ELSE 'NO' END ) ZF_USER_TRANSPORT,
		(CASE WHEN A.USR02_BNAME IN (SELECT DISTINCT USERNAME FROM A_DBTABLOG ) THEN 'YES' ELSE 'NO' END ) ZF_USER_SENSI_TCODE,
		USER_ADDR_NAME_TEXTC,
		USER_ADDR_DEPARTMENT,
		B.CDHDR_CHANGE_IND,
		USER_ADDR_CITY1,

		(CASE WHEN  A.USR02_BNAME IN 
			(
				SELECT USER_ADDR_BNAME FROM A_USER_ADDR
				GROUP BY USER_ADDR_BNAME 
				HAVING COUNT(DISTINCT  USER_ADDR_DEPARTMENT)>1
			)
			THEN 'YES' 
			ELSE 'NO'
			END
		) AS ZF_DEPARTMENT_FLAG
	INTO B15_03_IT_USER_TRANSPORT
	FROM A_USR02 AS A
	-- Left join with A_USER_ADDR table to get department 
	LEFT JOIN A_USER_ADDR
	ON USER_ADDR_BNAME = A.USR02_BNAME
	-- Left join with A_CDHDR table to get application object change type
	LEFT JOIN ( SELECT DISTINCT CDHDR_USERNAME,CDHDR_CHANGE_IND FROM A_CDHDR) AS B
	ON USR02_BNAME = B.CDHDR_USERNAME
	
-- Step 3.1: Add disable user access flag

ALTER TABLE B15_03_IT_USER_TRANSPORT
ADD ZF_DISABLE_ACCESS_FLAG VARCHAR(3)

UPDATE B15_03_IT_USER_TRANSPORT
SET ZF_DISABLE_ACCESS_FLAG = 
	(
	CASE
		WHEN USR02_CLASS = 'DISABLED_AD' OR USR02_CLASS = 'HR TERMINATE' THEN 'YES'
		ELSE 'NO'
	END
	)

-- Step 3.2: Add sap user deactivation flag

ALTER TABLE B15_03_IT_USER_TRANSPORT
ADD ZF_USER_DEACT_FLAG VARCHAR(3)

UPDATE B15_03_IT_USER_TRANSPORT
SET ZF_USER_DEACT_FLAG =
	(
	CASE
		WHEN USR02_CLASS = 'DISABLED_DOR' THEN 'YES'
		ELSE 'NO'
	END
	)
-- Step 4: Add flag to show user is disable or over valid date but still do task

-- Step 4.1: Add sap user deactivation or disable but still do tasks/requests flag

ALTER TABLE B01_01_IT_EO7O_ADD_FIELD_DESC
ADD ZF_USER_DEACT_DO_TASKS_FLAG  VARCHAR(3)
DEFAULT 'NO' 
WITH VALUES

UPDATE B01_01_IT_EO7O_ADD_FIELD_DESC
SET ZF_USER_DEACT_DO_TASKS_FLAG = 'YES'
FROM B01_01_IT_EO7O_ADD_FIELD_DESC
INNER JOIN B15_03_IT_USER_TRANSPORT
ON USR02_BNAME = E070_AS4USER
AND USR02_GLTGB < E070_AS4DATE
AND (ZF_USER_DEACT_FLAG = 'YES' OR ZF_DISABLE_ACCESS_FLAG = 'YES')

-- Step 4.2: Add flag for user whose valid date has passed but still do task
ALTER TABLE B01_01_IT_EO7O_ADD_FIELD_DESC
ADD ZF_USER_INVALID_DATE_DO_TASK VARCHAR(3)
DEFAULT 'NO' 
WITH VALUES

UPDATE B01_01_IT_EO7O_ADD_FIELD_DESC
SET ZF_USER_INVALID_DATE_DO_TASK = 'YES'
FROM B01_01_IT_EO7O_ADD_FIELD_DESC
INNER JOIN B15_03_IT_USER_TRANSPORT
ON USR02_BNAME = E070_AS4USER
AND USR02_GLTGB < E070_AS4DATE

-- Step 5: select distinct user id, auth, object from B22_09_TT_UST10S_AGR_PROFILE_OBJCT_AUTH_FIELD_VALUE table

EXEC SP_DROPTABLE 'B15_04_IT_AUTH_OBJCT'
SELECT DISTINCT USR02_BNAME,ZF_AGR_UST12_AUTH, ZF_AGR_UST12_OBJCT 
INTO B15_04_IT_AUTH_OBJCT
FROM B22_09_TT_UST10S_AGR_PROFILE_OBJCT_AUTH_FIELD_VALUE

-- Step 6: Add flag to show users that have access to sensitive transactions concerning the opening/ closing of periods 
EXEC SP_DROPTABLE 'B15_05_IT_SOD'

SELECT A.* ,B.ZF_USER_ACCESS_OPEN_CLOSE_PERIODS
INTO B15_05_IT_SOD
FROM B02_00_LAST_RESULT AS A
LEFT JOIN
(
	SELECT DISTINCT B02A_USR02_BNAME,B02A_ZF_AGR_UST12_VON, 'YES' AS ZF_USER_ACCESS_OPEN_CLOSE_PERIODS FROM B02_00_LAST_RESULT
	WHERE B02A_USR02_BNAME IN
	(
		SELECT DISTINCT USR02_BNAME FROM B15_04_IT_AUTH_OBJCT
		WHERE ZF_AGR_UST12_OBJCT = 'S_DEVELOP'
	) AND B02A_ZF_AGR_UST12_VON = 'MMRV' OR B02A_ZF_AGR_UST12_VON = 'MMPV'
		OR B02A_ZF_AGR_UST12_VON = 'OB52' OR B02A_ZF_AGR_UST12_VON = 'OKP1'
		OR B02A_ZF_AGR_UST12_VON = 'F.80'
)AS B
ON A.B02A_USR02_BNAME = B.B02A_USR02_BNAME
AND A.B02A_ZF_AGR_UST12_VON = B.B02A_ZF_AGR_UST12_VON

UPDATE B15_05_IT_SOD 
SET ZF_USER_ACCESS_OPEN_CLOSE_PERIODS = 'NO'
WHERE ZF_USER_ACCESS_OPEN_CLOSE_PERIODS IS NULL

ALTER TABLE B15_05_IT_SOD
ADD ZF_FF_FLAG VARCHAR(3)
DEFAULT 'NO' 
WITH VALUES

UPDATE B15_05_IT_SOD
SET ZF_FF_FLAG = 'YES'
WHERE B02A_USR02_BNAME IN
	(
		SELECT DISTINCT USR02_BNAME FROM B15_03_IT_USER_TRANSPORT
		WHERE USR02_CLASS = 'FIRE_FIGHTER'
	)


--  Log Records of Table Changes
EXEC SP_DROPTABLE 'B15_06_IT_DB_TAB'
SELECT *
INTO B15_06_IT_DB_TAB
FROM A_DBTABLOG

-- DB Buffer for ALOG File
EXEC SP_DROPTABLE 'B15_07_IT_ALOG_TAB'
SELECT *
INTO B15_07_IT_ALOG_TAB
FROM A_TPALOG

-- Step 6.1: Add field description about who put the transport in production in A_TPALOG table

	ALTER TABLE B15_07_IT_ALOG_TAB
	ADD ZF_STEP_DESC VARCHAR(100) 

	UPDATE B15_07_IT_ALOG_TAB
	SET ZF_STEP_DESC =(CASE WHEN TRSTEP = 'I' THEN 'Main import'
							WHEN TRSTEP = 'L' THEN 'CMD Import'
							WHEN TRSTEP = 'P' THEN 'Test import'
						END
						)

-- Step 7: Add import status 

ALTER TABLE B01_01_IT_EO7O_ADD_FIELD_DESC
ADD ZF_IMPORT_STATUS VARCHAR(100)

UPDATE B01_01_IT_EO7O_ADD_FIELD_DESC
SET ZF_IMPORT_STATUS = TRSTEP+' - '+ZF_STEP_DESC
FROM B01_01_IT_EO7O_ADD_FIELD_DESC
LEFT JOIN B15_07_IT_ALOG_TAB
ON E070_AS4USER = TRUSER
AND E070_TRKORR = TRKORR

-- Unname fiels of tables
EXEC SP_UNNAME_FIELD 'B02A_',  B15_05_IT_SOD


-- Rename fields of all tables
EXEC SP_RENAME_FIELD 'B01_01_', B01_01_IT_EO7O_ADD_FIELD_DESC
EXEC SP_RENAME_FIELD 'B01_02_', B01_02_IT_PAT03

EXEC SP_RENAME_FIELD 'B15_02_', B15_02_IT_EMPLOYEE
EXEC SP_RENAME_FIELD 'B15_03_', B15_03_IT_USER_TRANSPORT
EXEC SP_RENAME_FIELD 'B15_04_', B15_04_IT_AUTH_OBJCT
EXEC SP_RENAME_FIELD 'B15_05_', B15_05_IT_SOD
EXEC SP_RENAME_FIELD 'B15_06_', B15_06_IT_DB_TAB
EXEC SP_RENAME_FIELD 'B15_07_', B15_07_IT_ALOG_TAB

-------------
GO
