USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--ALTER PROCEDURE [dbo].[B06_FIN_GL_SUMMARY] 
CREATE     PROC [dbo].[script_B06_FIN_GL_SUMMARY]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('_DatabaseLogTable', 'U') IS NULL BEGIN CREATE TABLE [dbo].[_DatabaseLogTable] ([Database] nvarchar(max) NULL,[Object] nvarchar(max) NULL,[Object Type] nvarchar(max) NULL,[User] nvarchar(max) NULL,[Date] date NULL,[Time] time NULL,[Description] nvarchar(max) NULL,[Table] nvarchar(max),[Rows] int) END

--Log start of procedure
INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure started',NULL,NULL


	/* Initialize parameters from globals table */
    DECLARE  
				@CURRENCY NVARCHAR(3)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
				,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
				,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
				,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
				,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
				,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
				,@LANGUAGE1 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
				,@LANGUAGE2 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
				,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
				,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
				,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')
                 SET DATEFORMAT @DATEFORMAT;
 
 
/*Test mode*/
 
SET ROWCOUNT @LIMIT_RECORDS

      
/*Change history comments*/

/*
	Title			: [[script_B06_FIN_GL_SUMMARY]]
	Description	    : JE Summary by manual and regular postings 
    
	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date			    |	Who			|	Description
	30-07-2019			|	Vinh Le		|	Apply S4HANA logic

*/


    /*--Step 1
    -- Create a summary version of the GL in order to be able to load essential GL information into Qlik
    -- (because entire GL would be too heavy)
    -- Rows are being removed due to the following filters (WHERE): 
    --     Journal entry status (BKPF_BSTAT) is blank (meaning that it is Normal, and not pre-posting, parked or noted)
    --     The journal entry was posted in the period (BKPF_BUDAT is between the start and end dates 
    --     found in the globals table
    -- Fields are being calculated mentioned in the SELECT statement below
    */
	BEGIN TRY
		DROP INDEX GL_DETAIL_INDEX ON B04_08_IT_FIN_GL
	END TRY
	BEGIN CATCH
		PRINT 'DROP INDEX Statement have been skipped because the GL_DETAIL_INDEX does not exist.'
	END CATCH
	CREATE NONCLUSTERED INDEX GL_DETAIL_INDEX ON B04_08_IT_FIN_GL(B04_GL_ACDOCA_RBUKRS, 
																B04_GL_ACDOCA_KOKRS,
																B04_GL_ACDOCA_GJAHR, 
                                                                B04_GL_ACDOCA_BELNR,
																B04_GL_ZF_ACDOCA_GJAHR_MONAT, B04_GL_ZF_ACDOCA_MONAT_FQ, 
																B04_GL_BKPF_TCODE,
																B04_GL_ACDOCA_CPUDT, B04_GL_ACDOCA_BUDAT, B04_GL_ACDOCA_BLDAT, 
																B04_GL_ACDOCA_AUGDT, B04_GL_ACDOCA_AUGGJ, 
																B04_GL_ACDOCA_BLART, B04_GL_ACDOCA_BSCHL, B04_GL_ACDOCA_UMSKZ, 
																B04_GL_ACDOCA_BSTAT, B04_GL_ACDOCA_KOART, B04_GL_ACDOCA_RBUSA,
																B04_GL_ACDOCA_RACCT, B04_GL_ACDOCA_RRCTY, B04_GL_ACDOCA_PRCTR, 
																B04_GL_ACDOCA_RCNTR, B04_GL_ACDOCA_USNAM, B04_GL_ACDOCA_LIFNR, 
																B04_GL_ACDOCA_KUNNR, B04_GL_ACDOCA_AWTYP, 
																B04_GL_ZF_ACDOCA_DRCRK_DESC, B04_GL_ACDOCA_RWCUR, 
																B04_GL_ACDOCA_RKCUR, B04_GL_ACDOCA_ROCUR, B04_GL_AM_GLOBALS_CURRENCY, B04_GL_ZF_ENTRY_TYPE)


    EXEC SP_REMOVE_TABLES 'B06_01_TT_FIN_GL_SUMMARY'
    SELECT  
             B04_GL_ACDOCA_RBUKRS
			,B04_GL_ACDOCA_KOKRS
            ,B04_GL_ACDOCA_GJAHR
            ,B04_GL_ACDOCA_BELNR
            ,B04_GL_ZF_ACDOCA_GJAHR_MONAT
            ,B04_GL_ZF_ACDOCA_MONAT_FQ
            ,B04_GL_BKPF_TCODE
			,B04_GL_ACDOCA_CPUDT
            ,B04_GL_ACDOCA_BUDAT
            ,B04_GL_ACDOCA_BLDAT
            ,B04_GL_ACDOCA_AUGDT
            ,B04_GL_ACDOCA_AUGGJ
            ,B04_GL_ACDOCA_BLART
            ,B04_GL_ACDOCA_BSCHL
            ,B04_GL_ACDOCA_UMSKZ
            ,B04_GL_ACDOCA_BSTAT
            ,B04_GL_ACDOCA_KOART
            ,B04_GL_ACDOCA_RBUSA
            ,B04_GL_ACDOCA_RACCT
            ,B04_GL_ACDOCA_RRCTY
            ,B04_GL_ACDOCA_PRCTR
            ,B04_GL_ACDOCA_RCNTR
            ,B04_GL_ACDOCA_USNAM
            ,B04_GL_ACDOCA_LIFNR
            ,B04_GL_ACDOCA_KUNNR
            ,B04_GL_ACDOCA_AWTYP
            ,B04_GL_ZF_ACDOCA_DRCRK_DESC
            ,B04_GL_ACDOCA_RWCUR
            ,SUM(B04_GL_ZF_ACDOCA_WSL_S_DOC) B04_GL_ZF_ACDOCA_WSL_S_DOC
            ,SUM(B04_GL_ZF_ACDOCA_HSL_S) B04_GL_ZF_ACDOCA_HSL_S
            ,B04_GL_ACDOCA_RKCUR
            ,SUM(B04_GL_ZF_ACDOCA_KSL_S) B04_GL_ZF_ACDOCA_KSL_S
            ,B04_GL_ACDOCA_ROCUR
            ,SUM(B04_GL_ZF_ACDOCA_OSL_S) B04_GL_ZF_ACDOCA_OSL_S
            ,B04_GL_AM_GLOBALS_CURRENCY
            ,SUM(B04_GL_ZF_ACDOCA_HSL_S_CUC) B04_GL_ZF_ACDOCA_HSL_S_CUC
            ,B04_GL_ZF_ENTRY_TYPE
            ,B04_GL_ACDOCA_SGTXT
            ,ROW_NUMBER() OVER (ORDER BY B04_GL_ACDOCA_RBUKRS) AS ZF_GL_SUMMARY_KEY
            ,COUNT(DISTINCT CONCAT(B04_GL_ACDOCA_RBUKRS,B04_GL_ACDOCA_GJAHR,B04_GL_ACDOCA_BELNR,B04_GL_ACDOCA_BUZEI)) ZF_NUM_GL_LINES_BUZEI
            ,COUNT(DISTINCT CONCAT(B04_GL_ACDOCA_RBUKRS,B04_GL_ACDOCA_GJAHR,B04_GL_ACDOCA_BELNR,B04_GL_ACDOCA_BUZEI,B04_GL_ACDOCA_DOCLN)) ZF_NUM_GL_LINES_DOCLN
    INTO B06_01_TT_FIN_GL_SUMMARY
    FROM B04_08_IT_FIN_GL
    GROUP BY B04_GL_ACDOCA_RBUKRS
			,B04_GL_ACDOCA_KOKRS
            ,B04_GL_ACDOCA_GJAHR
            ,B04_GL_ACDOCA_BELNR
            ,B04_GL_ZF_ACDOCA_GJAHR_MONAT
            ,B04_GL_ZF_ACDOCA_MONAT_FQ
            ,B04_GL_BKPF_TCODE
            ,B04_GL_ACDOCA_CPUDT
            ,B04_GL_ACDOCA_BUDAT
            ,B04_GL_ACDOCA_BLDAT
            ,B04_GL_ACDOCA_AUGDT
            ,B04_GL_ACDOCA_AUGGJ
            ,B04_GL_ACDOCA_BLART
            ,B04_GL_ACDOCA_BSCHL
            ,B04_GL_ACDOCA_UMSKZ
            ,B04_GL_ACDOCA_BSTAT
            ,B04_GL_ACDOCA_KOART
            ,B04_GL_ACDOCA_RBUSA
            ,B04_GL_ACDOCA_RACCT
            ,B04_GL_ACDOCA_RRCTY
            ,B04_GL_ACDOCA_PRCTR
            ,B04_GL_ACDOCA_RCNTR
            ,B04_GL_ACDOCA_USNAM
            ,B04_GL_ACDOCA_LIFNR
            ,B04_GL_ACDOCA_KUNNR
            ,B04_GL_ACDOCA_AWTYP
            ,B04_GL_ZF_ACDOCA_DRCRK_DESC
            ,B04_GL_ACDOCA_RWCUR
            ,B04_GL_ACDOCA_RKCUR
            ,B04_GL_ACDOCA_ROCUR
            ,B04_GL_AM_GLOBALS_CURRENCY
            ,B04_GL_ZF_ENTRY_TYPE
            ,B04_GL_ACDOCA_SGTXT

    EXEC SP_UNNAME_FIELD 'B04_GL_', 'B06_01_TT_FIN_GL_SUMMARY'

	/*
		Step 2: Get text description for some field
	*/
	CREATE NONCLUSTERED INDEX B06_BUKRS_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_RBUKRS)
	CREATE NONCLUSTERED INDEX B06_BLART_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_BLART)
	CREATE NONCLUSTERED INDEX B06_TCODE_INDX ON B06_01_TT_FIN_GL_SUMMARY(BKPF_TCODE)
	CREATE NONCLUSTERED INDEX B06_BSCHL_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_BSCHL, ACDOCA_UMSKZ)
	CREATE NONCLUSTERED INDEX B06_RACCT_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_RACCT)
	CREATE NONCLUSTERED INDEX B06_PRCTR_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_PRCTR, ACDOCA_KOKRS)
	CREATE NONCLUSTERED INDEX B06_RCNTR_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_RCNTR, ACDOCA_KOKRS)
	CREATE NONCLUSTERED INDEX B06_USNAM_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_USNAM)
	CREATE NONCLUSTERED INDEX B06_LIFNR_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_LIFNR)
	CREATE NONCLUSTERED INDEX B06_KUNNR_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_KUNNR)
    CREATE NONCLUSTERED INDEX B06_UMSKZ_INDX ON B06_01_TT_FIN_GL_SUMMARY(ACDOCA_UMSKZ, ACDOCA_KOART)

	EXEC SP_REMOVE_TABLES 'B06_02_IT_FIN_GL_SUMMARY'
	SELECT 
			B06_01_TT_FIN_GL_SUMMARY.*,
			A_T001.T001_BUTXT,
            A_T001.T001_WAERS ACDOCA_RHCUR,
			A_T003T.T003T_LTEXT,
			A_TSTCT.TSTCT_TTEXT,
			A_TBSLT.TBSLT_LTEXT,
			A_SKAT.SKAT_TXT50,
			A_SKAT.SKAT_TXT20,
			A_V_USERNAME.V_USERNAME_NAME_TEXT,
			A_LFA1.LFA1_NAME1,
			A_KNA1.KNA1_NAME1,
			A_LFA1.LFA1_LAND1,
			-- Update LTEXT to KTEXT for cost center and profit center tables.Thuan. 14/07/2021
			B00_CSKT.CSKT_KTEXT,
			B00_CEPCT.CEPCT_KTEXT,
            ISNULL(A_T074T.T074T_LTEXT,'') ZF_ACDOCA_UMSKZ_DESC,
			-- 03/03/2021 Add some logic from Jesper to make Entry data analytic sheet in RTR dashboard.				
	        IIF (					
					ACDOCA_BUDAT < ACDOCA_CPUDT 		
					AND 		
					(		
						-- Entry date in 25th to 3rd	
					
						(	
							DAY(ACDOCA_CPUDT) BETWEEN 25 AND 31 AND DAY(ACDOCA_BUDAT) BETWEEN 1 AND 24
						)	
						OR	
						(	
							DAY(ACDOCA_CPUDT) BETWEEN 1 AND 3 AND DAY(ACDOCA_BUDAT) BETWEEN 1 AND 24 AND MONTH(ACDOCA_CPUDT) <> MONTH(ACDOCA_BUDAT)
						)	
					
					)
				 , 'Yes','No') AS ZF_ACDOCA_ENTRY_DATA_FLAG,
				 -- Thuan 17/08/2021 add 2 filter relate to Cost center dashboard.
				 CAST('' AS varchar(3)) AS ZF_GL_DEBIT_A7_CREDIT_A216,
				 CAST('' AS varchar(3)) AS ZF_GL_CREDIT_A7_DEBIT_A216,
				 CAST('' AS varchar(12)) AS ZF_LFA1_LIFNR_DIFF_COUNTRY


	INTO B06_02_IT_FIN_GL_SUMMARY
	FROM B06_01_TT_FIN_GL_SUMMARY
	LEFT JOIN A_T001
	ON A_T001.T001_BUKRS = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_RBUKRS
	LEFT JOIN A_T003T
	ON A_T003T.T003T_BLART = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_BLART
	LEFT JOIN A_TSTCT
	ON A_TSTCT.TSTCT_TCODE = B06_01_TT_FIN_GL_SUMMARY.BKPF_TCODE
	LEFT JOIN A_TBSLT
	ON A_TBSLT.TBSLT_BSCHL = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_BSCHL AND
	   A_TBSLT.TBSLT_UMSKZ = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_UMSKZ
	LEFT JOIN A_SKAT
	ON A_SKAT.SKAT_KTOPL = A_T001.T001_KTOPL AND
	   A_SKAT.SKAT_SAKNR = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_RACCT
	LEFT JOIN A_V_USERNAME
	ON A_V_USERNAME.V_USERNAME_BNAME = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_USNAM
	LEFT JOIN A_LFA1
	ON A_LFA1.LFA1_LIFNR = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_LIFNR
	LEFT JOIN A_KNA1
	ON A_KNA1.KNA1_KUNNR = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_KUNNR
	LEFT JOIN B00_CSKT
	ON B00_CSKT.CSKT_KOKRS = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_KOKRS AND
	   B00_CSKT.CSKT_KOSTL = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_RCNTR
	LEFT JOIN B00_CEPCT
	ON B00_CEPCT.CEPCT_KOKRS = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_KOKRS AND
	   B00_CEPCT.CEPCT_PRCTR = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_PRCTR
    LEFT JOIN A_T074T
    ON A_T074T.T074T_KOART = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_KOART AND
       A_T074T.T074T_SHBKZ = B06_01_TT_FIN_GL_SUMMARY.ACDOCA_UMSKZ

-- Thuan 17/08/2021 add 2 filter relate to Cost center dashboard.
-- GL debit start A7 and Credit A216
UPDATE B06_02_IT_FIN_GL_SUMMARY
SET ZF_GL_DEBIT_A7_CREDIT_A216 = 'Yes'
WHERE ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR IN 
(

		SELECT DISTINCT  ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR FROM B06_02_IT_FIN_GL_SUMMARY
		WHERE ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR  IN (

		SELECT DISTINCT ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR FROM B06_02_IT_FIN_GL_SUMMARY
		WHERE ACDOCA_RACCT LIKE 'A7%' AND ZF_ACDOCA_DRCRK_DESC ='Debit'
		)
		AND ACDOCA_RACCT LIKE 'A216%' AND ZF_ACDOCA_DRCRK_DESC ='Credit'
)
-- GL credit start A7 and debit A216

UPDATE B06_02_IT_FIN_GL_SUMMARY
SET ZF_GL_CREDIT_A7_DEBIT_A216 = 'Yes'
WHERE ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR IN 
(

		SELECT DISTINCT  ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR FROM B06_02_IT_FIN_GL_SUMMARY
		WHERE ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR  IN (

		SELECT DISTINCT ACDOCA_RBUKRS+ACDOCA_GJAHR+ACDOCA_BELNR FROM B06_02_IT_FIN_GL_SUMMARY
		WHERE ACDOCA_RACCT LIKE 'A7%' AND ZF_ACDOCA_DRCRK_DESC ='Credit'
		)
		AND ACDOCA_RACCT LIKE 'A216%' AND ZF_ACDOCA_DRCRK_DESC ='Debit'
)

UPDATE B06_02_IT_FIN_GL_SUMMARY
SET ZF_LFA1_LIFNR_DIFF_COUNTRY = ACDOCA_LIFNR
FROM B06_02_IT_FIN_GL_SUMMARY AS A 
WHERE LFA1_LAND1
NOT IN 
(
	SELECT DISTINCT T001_LAND1 FROM A_T001
)
	   

    /*
        Step 3: Assign GL-Summary-Key to "GL detail cube"
            Step 3.1: Create index to speed up joining time
            Step 3.2: Assign summary key from summary cube to detail cube
    */
    CREATE NONCLUSTERED INDEX GL_SUMMARY_INDEX ON B06_02_IT_FIN_GL_SUMMARY(ACDOCA_RBUKRS, ACDOCA_KOKRS, ACDOCA_GJAHR, ACDOCA_BELNR,
																ZF_ACDOCA_GJAHR_MONAT, ZF_ACDOCA_MONAT_FQ, 
																BKPF_TCODE,	ACDOCA_CPUDT, ACDOCA_BUDAT, ACDOCA_BLDAT, 
																ACDOCA_AUGDT, ACDOCA_AUGGJ, 
																ACDOCA_BLART, ACDOCA_BSCHL, ACDOCA_UMSKZ, 
																ACDOCA_BSTAT, ACDOCA_KOART, ACDOCA_RBUSA,
																ACDOCA_RACCT, ACDOCA_RRCTY, ACDOCA_PRCTR, 
																ACDOCA_RCNTR, ACDOCA_USNAM, ACDOCA_LIFNR, 
																ACDOCA_KUNNR, ACDOCA_AWTYP, 
																ZF_ACDOCA_DRCRK_DESC, ACDOCA_RWCUR, 
																ACDOCA_RKCUR, ACDOCA_ROCUR, AM_GLOBALS_CURRENCY, ZF_ENTRY_TYPE)

	EXEC SP_REMOVE_TABLES 'B04_08_IT_FIN_GL_WITH_SUMMARY_KEY'
    SELECT B04_08_IT_FIN_GL.*
           ,B06_02_IT_FIN_GL_SUMMARY.ZF_GL_SUMMARY_KEY
          -- ,B06_02_IT_FIN_GL_SUMMARY.T001_BUTXT
          -- ,B06_02_IT_FIN_GL_SUMMARY.T003T_LTEXT
           ,B06_02_IT_FIN_GL_SUMMARY.TBSLT_LTEXT
           ,B06_02_IT_FIN_GL_SUMMARY.SKAT_TXT50
       --    ,B06_02_IT_FIN_GL_SUMMARY.V_USERNAME_NAME_TEXT
           ,B06_02_IT_FIN_GL_SUMMARY.KNA1_NAME1
           ,B06_02_IT_FIN_GL_SUMMARY.LFA1_NAME1
           ,B06_02_IT_FIN_GL_SUMMARY.CSKT_KTEXT
           ,B06_02_IT_FIN_GL_SUMMARY.CEPCT_KTEXT
           --,TANGO_ACCT
           --,TANGO_ACCT_TXT
    INTO B04_08_IT_FIN_GL_WITH_SUMMARY_KEY
    FROM B04_08_IT_FIN_GL
    --LEFT JOIN AM_TANGO
    --ON AM_TANGO.TANGO_GL_ACCT = B04_08_IT_FIN_GL.B04_GL_ACDOCA_RACCT
    LEFT JOIN B06_02_IT_FIN_GL_SUMMARY
	ON
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RBUKRS,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RBUKRS, '') AND
		ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_KOKRS,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_KOKRS, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_GJAHR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_GJAHR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BELNR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BELNR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ZF_ACDOCA_GJAHR_MONAT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ZF_ACDOCA_GJAHR_MONAT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ZF_ACDOCA_MONAT_FQ,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ZF_ACDOCA_MONAT_FQ, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_BKPF_TCODE,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.BKPF_TCODE, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_CPUDT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_CPUDT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BUDAT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BUDAT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BLDAT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BLDAT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_AUGDT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_AUGDT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_AUGGJ,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_AUGGJ, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BLART,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BLART, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BSCHL,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BSCHL, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_UMSKZ,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_UMSKZ, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_BSTAT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_BSTAT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_KOART,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_KOART, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RBUSA,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RBUSA, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RACCT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RACCT, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RRCTY,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RRCTY, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_PRCTR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_PRCTR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RCNTR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RCNTR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_USNAM,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_USNAM, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_LIFNR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_LIFNR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_KUNNR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_KUNNR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_AWTYP,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_AWTYP, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ZF_ACDOCA_DRCRK_DESC,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ZF_ACDOCA_DRCRK_DESC, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RWCUR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RWCUR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_RKCUR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_RKCUR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_ROCUR,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_ROCUR, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_AM_GLOBALS_CURRENCY,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.AM_GLOBALS_CURRENCY, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ZF_ENTRY_TYPE,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ZF_ENTRY_TYPE, '') AND
        ISNULL(B04_08_IT_FIN_GL.B04_GL_ACDOCA_SGTXT,'') = ISNULL(B06_02_IT_FIN_GL_SUMMARY.ACDOCA_SGTXT, '')

	--ALTER TABLE B04_08_IT_FIN_GL_WITH_SUMMARY_KEY DROP COLUMN B04_GL_TANGO_ACCT;
	--ALTER TABLE B04_08_IT_FIN_GL_WITH_SUMMARY_KEY DROP COLUMN B04_GL_TANGO_ACCT_TXT;

    EXEC SP_RENAME_FIELD 'B06_', 'B06_02_IT_FIN_GL_SUMMARY'
    EXEC SP_UNNAME_FIELD 'B04_GL_', 'B04_08_IT_FIN_GL_WITH_SUMMARY_KEY'
    EXEC SP_RENAME_FIELD 'B04_GL_', 'B04_08_IT_FIN_GL_WITH_SUMMARY_KEY'
    /*Remove all temparory table*/
     EXEC SP_REMOVE_TABLES '%_TT_%'
GO
