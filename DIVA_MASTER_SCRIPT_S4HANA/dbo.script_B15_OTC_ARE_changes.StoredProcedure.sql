USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[script_B15_OTC_ARE_changes] 


WITH EXECUTE AS CALLER
AS

--DYNAMIC_SCRIPT_START

/* 
      Title        :  B15_05_IT_ARE_CHANGES  
      Description  :  Changes to Accounts Receivable documents (FI)   
      -------------------------------------------------------------- 
      Update history 
      -------------------------------------------------------------- 
      Date			| Who |  Description 
      13-07-2016      EH     Initial version for Sony    
      19-09-2016      FT     Adding some descriptions to cube  
      03-02-2016      SK     Code Reformatting to create standard(region/system specific) version   
	  30-09-2017	  HT     Update and standardisation for SID
	  24-03-2022	 Thuan	 Remove MANDT field in join
	  14-08-2024	 Tan	 Fix UDATETIME by replace UDATE to UTIME in time value
   
*/ 

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

	/* Initialize parameters from globals table */
    DECLARE  
				@CURRENCY NVARCHAR(3)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
				,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
				,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
				,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
				,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
				,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
				,@LANGUAGE1 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
				,@LANGUAGE2 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
				,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
				,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
				,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')
                 SET DATEFORMAT @DATEFORMAT;
 
 
/*Test mode*/
 
SET ROWCOUNT @LIMIT_RECORDS
---------------------------------------------------------------------------------------------------------------------------- 
		----Create index for A_CDHDR to reduce the process time
		--EXEC SP_CREATE_INDEX 'A_CDHDR', 'A_CDHDR_INDEX', 'CDHDR_OBJECTCLAS, CDHDR_MANDANT,[CDHDR_OBJECTID],[CDHDR_CHANGENR],[CDHDR_USERNAME],[CDHDR_UDATE],[CDHDR_UTIME],[CDHDR_TCODE]'

	--step 1: create user type text table
		EXEC sp_DROPTABLE 'B15_00_TT_DD07T_XUUSTYP'
		SELECT  DD07T_DOMNAME, DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS AS DD07T_DOMVALUE_L, MAX(DD07T_DDTEXT) AS DD07T_DDTEXT
		INTO B15_00_TT_DD07T_XUUSTYP
		FROM A_DD07T
		WHERE DD07T_DOMNAME = 'XUUSTYP' AND DD07T_DDLANGUAGE = @language1 AND DD07T_AS4LOCAL = 'A'
		GROUP BY  DD07T_DOMNAME, DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS

	--step 2: table text information
		EXEC sp_DROPTABLE 'B15_01_TT_DD02T'
		SELECT  DD02T_TABNAME, MAX(DD02T_DDTEXT) AS DDTEXT 
		INTO B15_01_TT_DD02T
		FROM A_DD02T
		WHERE DD02T_DDLANGUAGE = @language1 AND DD02T_AS4LOCAL = 'A'
		GROUP BY  DD02T_TABNAME
	  
	    
	--step 3: text for domain fixed values
		EXEC sp_DROPTABLE 'B15_02_TT_DD07T_BSTAT'
		SELECT  DD07T_DOMNAME, DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS AS DD07T_DOMVALUE_L, MAX(DD07T_DDTEXT) AS DD07T_DDTEXT
		INTO B15_02_TT_DD07T_BSTAT
		FROM A_DD07T
		WHERE DD07T_DOMNAME = 'BSTAT' AND DD07T_AS4LOCAL = 'A' AND DD07T_DDLANGUAGE = 'EN'
		GROUP BY  DD07T_DOMNAME, DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS
        
	--step 4: populate B15_03_TT_CDHDR_CDPOS with raw data from CDHDR and CDPOS
		EXEC sp_DROPTABLE 'B15_03_TT_CDHDR_CDPOS'
		SELECT 
			A_CDHDR.CDHDR_MANDANT
			,A_CDPOS.CDPOS_CHANGENR
			,AM_SCOPE.SCOPE_BUSINESS_DMN_L1 --		AS [M_Business domain_L1]
			,AM_SCOPE.SCOPE_BUSINESS_DMN_L2 --		AS [M_Business domain_L2]
			,A_CDHDR.CDHDR_OBJECTID
			,SUBSTRING(A_CDHDR.CDHDR_OBJECTID, 4, 4) AS ZF_CDHDR_OBJID_COMP_CODE --	AS [Company code]
			,SUBSTRING(A_CDHDR.CDHDR_OBJECTID, 8, 10) AS ZF_CDHDR_OBJID_DOC_NR --	AS [Document nr]
			,SUBSTRING(A_CDHDR.CDHDR_OBJECTID, 18, 4) AS ZF_CDHDR_OBJID_FISCAL_YEAR --	AS [Fiscal year]
			,A_CDHDR.CDHDR_TCODE 
			,A_CDHDR.CDHDR_USERNAME
			,A_CDPOS.CDPOS_TABKEY
			, IIF(A_CDPOS.CDPOS_TABNAME = 'ACDOCA',
                    SUBSTRING(A_CDPOS.CDPOS_TABKEY, 24, 6),
                    SUBSTRING(A_CDPOS.CDPOS_TABKEY, 22, 3)
            )  	AS ZF_CDHDR_TABKEY_LINE_ITEM_NR --	AS [Line item nr]
			,A_CDHDR.CDHDR_UDATE 
			,A_CDHDR.CDHDR_UTIME 

			-- Fix UDATETIME by replace UDATE to UTIME in time value
			,CAST(CAST(CDHDR_UDATE AS VARCHAR) + ' ' + LEFT(CDHDR_UTIME, 2) + ':' + SUBSTRING(CAST(CDHDR_UTIME AS NVARCHAR(MAX)), 3, 2) + ':' + RIGHT(CDHDR_UTIME,2) AS DATETIME) CDHDR_UDATETIME --AS [UDATETIME]

			,RTRIM(A_CDPOS.CDPOS_TABNAME) CDPOS_TABNAME --				AS [TABNAME]
			,RTRIM(A_CDPOS.CDPOS_FNAME) CDPOS_FNAME --					AS [FNAME]
			,A_CDPOS.CDPOS_VALUE_OLD 
			,A_CDPOS.CDPOS_VALUE_NEW
			,A_CDPOS.CDPOS_CHNGIND 
			,A_CDPOS.CDPOS_OBJECTCLAS
        
		INTO B15_03_TT_CDHDR_CDPOS 
		FROM A_CDHDR 
		INNER JOIN A_CDPOS 
		ON  (A_CDHDR.CDHDR_OBJECTCLAS = A_CDPOS.CDPOS_OBJECTCLAS) AND
	  		(A_CDHDR.CDHDR_OBJECTID = A_CDPOS.CDPOS_OBJECTID) AND
	  		(A_CDHDR.CDHDR_CHANGENR = A_CDPOS.CDPOS_CHANGENR) AND
	  		(A_CDHDR.CDHDR_OBJECTCLAS = 'BELEG') 
	  
	--step 5: restrict to FI document changes 
		INNER JOIN AM_SCOPE 
		ON 
		 SUBSTRING(A_CDHDR.CDHDR_OBJECTID, 4, 4) = AM_SCOPE.SCOPE_CMPNY_CODE 
	  
	  
	--step 6: Populate B15_01_TT_ACDOCA with raw data from ACDOCA
		EXEC sp_DROPTABLE 'B15_01_TT_AR'
		SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AWREF ACDOCA_BELNR, ACDOCA_BELNR ACDOCA_AWREF, ACDOCA_GJAHR, ACDOCA_BSTAT INTO B15_01_TT_AR
		FROM B00_ACDOCA
		WHERE B00_ACDOCA.ACDOCA_KOART = 'D'

		EXEC SP_CREATE_INDEX 'B15_01_TT_AR','B15_01_INDEX','ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_BELNR, ACDOCA_GJAHR, ACDOCA_BSTAT'
	    
		EXEC sp_DROPTABLE 'B15_04_TT_ARE_CHANGES'
		SELECT 
	  		B15_03_TT_CDHDR_CDPOS.CDHDR_MANDANT --                     AS [Mandant] 
			,B15_03_TT_CDHDR_CDPOS.CDHDR_OBJECTID --                    AS [Object ID] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_CHANGENR --                    AS [Change nr] 
			,B15_03_TT_CDHDR_CDPOS.SCOPE_BUSINESS_DMN_L1	
	  		,B15_03_TT_CDHDR_CDPOS.SCOPE_BUSINESS_DMN_L2
			,B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_COMP_CODE 
			,B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_FISCAL_YEAR 
			,B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_DOC_NR 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_TABKEY 
			,B15_03_TT_CDHDR_CDPOS.CDHDR_TCODE --                      AS [Change transaction code] 			  
			,B15_03_TT_CDHDR_CDPOS.CDHDR_UDATE          --             AS [Change date] 
	  		,B15_03_TT_CDHDR_CDPOS.CDHDR_UTIME		--				AS [Change time]
	  		,B15_03_TT_CDHDR_CDPOS.CDHDR_UDATETIME--					AS [Change date time]
			,B15_03_TT_CDHDR_CDPOS.CDHDR_USERNAME--                    AS [Change user] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_TABNAME --                    AS [Table name] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_FNAME --                       AS [Field name] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_TABNAME + '.' + B15_03_TT_CDHDR_CDPOS.CDPOS_FNAME ZF_TAB_FNAME--AS [Z_Table/Field] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_VALUE_OLD --                   AS [Old] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_VALUE_NEW --                   AS [New] 
			,B15_03_TT_CDHDR_CDPOS.CDPOS_CHNGIND --                     AS [Change indicator] 
			--This information is not available in any SAP table, descriptions are coming from SONY's SAP  
			,CASE (B15_03_TT_CDHDR_CDPOS.CDPOS_CHNGIND) 
				WHEN 'I' THEN 'Insert' 
				WHEN 'U' THEN 'Update' 
				WHEN 'E' THEN 'Delete (single field)' 
				WHEN 'D' THEN 'Delete' 
			END ZF_CDPOS_CHNGIND_TEXT --										AS [Z_Change indicator text] 
			-- restrict to changes in the analysis period 
			,CASE 
				WHEN B15_03_TT_CDHDR_CDPOS.CDHDR_UDATE >= @date1 AND B15_03_TT_CDHDR_CDPOS.CDHDR_UDATE <= @date2 THEN 'X' 
				ELSE '' 
			END ZF_CDPOS_CHNG_IN_PEROID --										AS [Z_Changed in period] 
			,B15_01_TT_AR.ACDOCA_BSTAT --                        AS [Document status] 
			,COALESCE(B15_02_TT_DD07T_BSTAT.DD07T_DDTEXT, '') AS ZF_DD07T_DDTEXT_DOC_STATUS_TXT --       AS [Document status text] 
			,ZF_CDHDR_TABKEY_LINE_ITEM_NR
		INTO B15_04_TT_ARE_CHANGES
        
		FROM B15_03_TT_CDHDR_CDPOS 
		--Filter the cube on AR documents which are in the AR cube
		INNER JOIN B15_01_TT_AR
		ON B15_01_TT_AR.ACDOCA_RBUKRS = B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_COMP_CODE AND
			B15_01_TT_AR.ACDOCA_BELNR = B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_DOC_NR AND
			B15_01_TT_AR.ACDOCA_GJAHR = B15_03_TT_CDHDR_CDPOS.ZF_CDHDR_OBJID_FISCAL_YEAR
	  
		--Includes document status texts 
		LEFT JOIN B15_02_TT_DD07T_BSTAT 
		ON  (B15_01_TT_AR.ACDOCA_BSTAT COLLATE Latin1_General_CS_AS = B15_02_TT_DD07T_BSTAT.DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS) 
	  
		---------------------------------------------------------------------------------------------------------------------------- 
      
	--step 7: create final Simple AR change cube
	EXEC sp_DROPTABLE 'B15_05_IT_ARE_CHANGES'
		SELECT 
			CDHDR_MANDANT 
			,CDHDR_OBJECTID 
			,CDPOS_CHANGENR
			,CDPOS_TABKEY
			,SCOPE_BUSINESS_DMN_L1
			,SCOPE_BUSINESS_DMN_L2
			,ZF_CDHDR_OBJID_COMP_CODE
			,ZF_CDHDR_OBJID_FISCAL_YEAR
			,ZF_CDHDR_OBJID_DOC_NR
			,ZF_CDHDR_TABKEY_LINE_ITEM_NR
			,CDHDR_TCODE 	
			,COALESCE(A_TSTCT.TSTCT_TTEXT, '') AS TSTCT_TTEXT --					AS [Change transaction code text] 		  
			,CDHDR_UDATE 
			,CDHDR_UTIME
			,CDHDR_UDATETIME
			,CDHDR_USERNAME 
			,COALESCE(A_V_USERNAME.V_USERNAME_NAME_TEXT, '') AS V_USERNAME_NAME_TEXT --			AS [Change user name] 
			,A_USR02.USR02_USTYP --									AS [Change user type] 
			,B15_00_TT_DD07T_XUUSTYP.DD07T_DDTEXT --						AS [Z_Change user type text] 
			,CDPOS_TABNAME 
			,B15_01_TT_DD02T.DDTEXT --								AS [Table text] 
			,CDPOS_FNAME 
			,A_DDFTX.DDFTX_SCRTEXT_L --								AS [Field text] 
			,ZF_TAB_FNAME 
			,CDPOS_VALUE_OLD 
			,CDPOS_VALUE_NEW
			,CDPOS_CHNGIND
			,ZF_CDPOS_CHNGIND_TEXT 
			,ZF_CDPOS_CHNG_IN_PEROID 
			,ACDOCA_BSTAT 
			,ZF_DD07T_DDTEXT_DOC_STATUS_TXT

		INTO dbo.B15_05_IT_ARE_CHANGES
	  
		FROM B15_04_TT_ARE_CHANGES
        
		--ADD table name text information 
		LEFT JOIN B15_01_TT_DD02T
		ON  B15_04_TT_ARE_CHANGES.CDPOS_TABNAME = B15_01_TT_DD02T.DD02T_TABNAME
        
		--ADD field name text information 
		LEFT JOIN A_DDFTX 
		ON  A_DDFTX.DDFTX_TABNAME = B15_04_TT_ARE_CHANGES.CDPOS_TABNAME
			AND A_DDFTX.DDFTX_FIELDNAME = B15_04_TT_ARE_CHANGES.CDPOS_FNAME
	  		AND A_DDFTX.DDFTX_DDLANGUAGE = @language1
        
		--ADD change transaction code text 
		LEFT JOIN A_TSTCT 
		ON  (B15_04_TT_ARE_CHANGES.CDHDR_TCODE = A_TSTCT.TSTCT_TCODE)
			AND (A_TSTCT.TSTCT_SPRSL = @language1)
        
		--Get change user name 
		LEFT JOIN A_V_USERNAME 
		ON  (B15_04_TT_ARE_CHANGES.CDHDR_USERNAME = A_V_USERNAME.V_USERNAME_BNAME) 
        
		--Get change user information 
		LEFT JOIN A_USR02
		ON  (B15_04_TT_ARE_CHANGES.CDHDR_USERNAME = A_USR02.USR02_BNAME) 

		LEFT JOIN B15_00_TT_DD07T_XUUSTYP
		ON  A_USR02.USR02_USTYP COLLATE Latin1_General_CS_AS = B15_00_TT_DD07T_XUUSTYP.DD07T_DOMVALUE_L COLLATE Latin1_General_CS_AS

--rename output file
EXEC sp_RENAME_FIELD 'B15_', 'B15_05_IT_ARE_CHANGES'
EXEC SP_REMOVE_TABLES '%_TT_%'

--Immediately following each cube select statement, copy the following to log the cube creation
--Note: make sure to update the two references to cube name in this code
INSERT INTO [_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B15_05_IT_ARE_CHANGES',(SELECT COUNT(*) FROM B15_05_IT_ARE_CHANGES)


/* log end of procedure*/
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL

GO
