USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

 

CREATE     PROCEDURE [dbo].[script_DV13_QLIK_AR_OVERVIEW_VS_SAP_FBL5N]
--CREATE PROCEDURE [dbo].[DV13_QLIK_AR_OVERVIEW_VS_SAP_FBL5N]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN



/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
			

/*Test mode*/

SET ROWCOUNT @LIMIT_RECORDS

/*
    Title            : DV13: Compare DIVA AR Overview of Customer to 
	                   to SAP FBL5N
    --------------------------------------------------------------
    Update history
    --------------------------------------------------------------
    Date             |      Who |  Description
    08-22-2017             Nhat        Creation
	
*/


--Step 1/
-- Create table for send message back to DIVA_BULK_IMPORT.jar

	EXEC SP_DROPTABLE 'DV00_RT_USER_FEEDBACK_MESSAGE'

	CREATE TABLE DV00_RT_USER_FEEDBACK_MESSAGE          
     (OLD_NAME NVARCHAR(MAX), NEW_NAME NVARCHAR(MAX), _LOG NVARCHAR(MAX))

-- Step 2/
-- Adding the row number to help identify records 
-- which have the same Company Code, Customer Number,Document Number, Document Type and Posting Date
-- Add QLIK_ prefix to field names
-- Totals from DIVA data 

	EXECUTE SP_DROPTABLE 'DV13_01_TT_QLIK_AR_REPORT'
	SELECT 
		DBO.TRIM([Company code]) QLIK_BUKRS		
		,DBO.REMOVE_LEADING_ZEROES([Document nr]) QLIK_BELNR
		,DBO.REMOVE_LEADING_ZEROES([Document type]) QLIK_BLART
		,CONVERT(DATETIME,[Document date],102) QLIK_BLDAT
		,SUM(DBO.STRING_TO_NUMBER([Value Company])) QLIK_HSL
		,[Snapshot date] QLIK_SNAPSHOT_DATE
	INTO DV13_01_TT_QLIK_AR_REPORT
	FROM AQLIK_AR_DETAILS
	GROUP BY
		[Company code]
		,[Document nr]
		,[Document type]
		,CONVERT(DATETIME,[Document date],102)
		,[Snapshot date]
		
--Step 3A: adding the row number to help identify records 
--which have the same Company Code, Customer Number,Document Number, Document Type and Posting Date
EXEC SP_SAP_REPORT_FIELD_TO_STANDARD 'ASAP_FBL5N' 
EXEC SP_DROPTABLE 'DV13_02_TT_SAP_AR_REPORT_A'

SELECT 
		 DBO.TRIM(BUKRS) SAP_BUKRS
		,DBO.REMOVE_LEADING_ZEROES(BELNR) SAP_BELNR
		,DBO.TRIM(BLART) SAP_BLART
		,BLDAT SAP_BLDAT
		,HSL_CONVERTED SAP_HSL
		,DBO.TRIM(CONVERT(DATE,snapshot_date,104)) SAP_SNAPSHOT_DATE
	INTO DV13_02_TT_SAP_AR_REPORT_A
	FROM ASAP_FBL5N

	
---step 3B: 
-- Totals from SAP report
-- Add SAP_ prefix to field names

	EXECUTE SP_DROPTABLE 'DV13_02_TT_SAP_AR_REPORT_B'	
	SELECT 
		 SAP_BUKRS
		,SAP_BELNR
		,SAP_BLART
		,SAP_BLDAT
		,SAP_SNAPSHOT_DATE
		,SUM(SAP_HSL) AS SAP_HSL

	INTO DV13_02_TT_SAP_AR_REPORT_B

	FROM DV13_02_TT_SAP_AR_REPORT_A

	GROUP BY
		 SAP_BUKRS
		,SAP_BELNR
		,SAP_BLART
		,SAP_BLDAT
		,SAP_SNAPSHOT_DATE
	

--Step 4/
--Compare totals from Qlik to totals from SAP


	EXECUTE SP_DROPTABLE 'DV13_03_IT_COMP_QLIK_AR_SAP'

	SELECT	
		   [QLIK_BUKRS]
		  ,[SAP_BUKRS]	  
		  ,[QLIK_BELNR]
		  ,[SAP_BELNR]
		  ,[QLIK_BLART]
		  ,[SAP_BLART]
		  ,[QLIK_BLDAT]
		  ,[SAP_BLDAT]
		  ,YEAR([QLIK_BLDAT]) QLIK_BLDAT_YEAR
		  ,YEAR([SAP_BLDAT])  SAP_BLDAT_YEAR
		  ,[QLIK_SNAPSHOT_DATE]
		  ,[SAP_SNAPSHOT_DATE]
		  ,ISNULL(QLIK_HSL, 0) AS  QLIK_HSL
		  ,ISNULL(SAP_HSL, 0)	AS SAP_HSL
		  ,ISNULL(QLIK_HSL, 0) - ISNULL (SAP_HSL, 0) AS ZF_QLIK_MINUS_SAP_AMOUNT,
			CASE WHEN	ISNULL(QLIK_BELNR ,'') <> '' AND
						ISNULL(SAP_BELNR ,'') = '' 
						THEN 'Invoice in DIVA not SAP'
				 WHEN	ISNULL(QLIK_BELNR ,'') = '' AND
						ISNULL(SAP_BELNR ,'') <> '' 
						THEN 'Invoice in SAP not DIVA'
				WHEN	ISNULL(QLIK_BELNR ,'') <> '' AND
						ISNULL(SAP_BELNR ,'') <> '' 
						THEN 'Invoice in SAP and DIVA'
				ELSE	'Case not identified'
			END 									AS ZF_CUSTM_MATCH_CATEGORY
	INTO	DV13_03_IT_COMP_QLIK_AR_SAP
	FROM	DV13_01_TT_QLIK_AR_REPORT
		FULL OUTER JOIN DV13_02_TT_SAP_AR_REPORT_B
			ON	DV13_01_TT_QLIK_AR_REPORT.QLIK_BUKRS		= DV13_02_TT_SAP_AR_REPORT_B.SAP_BUKRS
			AND	DV13_01_TT_QLIK_AR_REPORT.QLIK_BELNR		= DV13_02_TT_SAP_AR_REPORT_B.SAP_BELNR
			AND DV13_01_TT_QLIK_AR_REPORT.QLIK_BLART		= DV13_02_TT_SAP_AR_REPORT_B.SAP_BLART
			AND DV13_01_TT_QLIK_AR_REPORT.QLIK_BLDAT		= DV13_02_TT_SAP_AR_REPORT_B.SAP_BLDAT
			AND DV13_01_TT_QLIK_AR_REPORT.QLIK_SNAPSHOT_DATE		= DV13_02_TT_SAP_AR_REPORT_B.SAP_SNAPSHOT_DATE

--Step 5/
--Split the compariARn into two tables: Enable independent filtering in QLIK

	EXEC SP_DROPTABLE 'DV13_04_RT_FULL_QLIK_AR'

	SELECT	QLIK_BUKRS
		  ,QLIK_BELNR
		  ,QLIK_BLART
		  ,QLIK_BLDAT
		  ,QLIK_BLDAT_YEAR
		  ,QLIK_SNAPSHOT_DATE
		  
		  ,QLIK_HSL
			,QLIK_BUKRS + '|' + QLIK_BELNR  + '|' + QLIK_BLART + '|' + CAST(QLIK_BLDAT AS nvarchar)  + '|' + QLIK_SNAPSHOT_DATE AS ZF_KEY_JOIN_QLIK
	INTO	DV13_04_RT_FULL_QLIK_AR
	FROM	DV13_03_IT_COMP_QLIK_AR_SAP
	WHERE	QLIK_BELNR IS NOT NULL

	EXEC sp_droptable 'DV13_05_RT_FULL_SAP_AR'

	SELECT	SAP_BUKRS
		  ,SAP_BELNR
		  ,SAP_BLART
		  ,SAP_BLDAT
		  ,SAP_BLDAT_YEAR
		  ,SAP_SNAPSHOT_DATE
		  ,SAP_HSL
		  ,SAP_BUKRS + '|' + SAP_BELNR + '|' +  SAP_BLART + '|' +  CAST(SAP_BLDAT AS nvarchar)  + '|' +  SAP_SNAPSHOT_DATE AS ZF_KEY_JOIN_SAP
	INTO	DV13_05_RT_FULL_SAP_AR
	FROM	DV13_03_IT_COMP_QLIK_AR_SAP
	WHERE	SAP_BELNR IS NOT NULL

--Step 6/
--Split the compariARn into two discrepancy tables: Enable independent filtering in QLIK

	EXEC SP_DROPTABLE 'DV13_06_RT_DISC_QLIK_AR_SAP'
		
	SELECT  QLIK_BUKRS		  
		  ,QLIK_BELNR
		  ,QLIK_BLART
		  ,QLIK_BLDAT
		  ,QLIK_BLDAT_YEAR
		  ,QLIK_SNAPSHOT_DATE
		  ,QLIK_HSL
		  ,ZF_QLIK_MINUS_SAP_AMOUNT
		  ,ZF_CUSTM_MATCH_CATEGORY
		  ,QLIK_BUKRS + '|' + QLIK_BELNR + '|' + QLIK_BLART + '|' + CAST(QLIK_BLDAT AS nvarchar)  + '|' + QLIK_SNAPSHOT_DATE AS ZF_KEY_JOIN_QLIK
	INTO	DV13_06_RT_DISC_QLIK_AR_SAP
	FROM	DV13_03_IT_COMP_QLIK_AR_SAP
	WHERE	ABS(ZF_QLIK_MINUS_SAP_AMOUNT) > 10 AND 	ZF_CUSTM_MATCH_CATEGORY = 'Invoice in DIVA not SAP'

-- Discrepancy table for spend overview for SAP

	EXEC SP_DROPTABLE 'DV13_07_RT_DISC_SAP_AR_QLIK'

	SELECT	SAP_BUKRS
		  ,SAP_BELNR
		  ,SAP_BLART
		  ,SAP_BLDAT
		  ,SAP_BLDAT_YEAR
		  ,SAP_SNAPSHOT_DATE
		  ,SAP_HSL
		  ,ZF_QLIK_MINUS_SAP_AMOUNT
		  ,ZF_CUSTM_MATCH_CATEGORY
		  ,SAP_BUKRS + '|' + SAP_BELNR + '|' + SAP_BLART + '|' + CAST(SAP_BLDAT AS nvarchar) + '|' + SAP_SNAPSHOT_DATE AS ZF_KEY_JOIN_SAP
	INTO	DV13_07_RT_DISC_SAP_AR_QLIK
	FROM	DV13_03_IT_COMP_QLIK_AR_SAP
	WHERE	ABS(ZF_QLIK_MINUS_SAP_AMOUNT) > 10 AND 
		ZF_CUSTM_MATCH_CATEGORY = 'Invoice in SAP not DIVA' OR ZF_CUSTM_MATCH_CATEGORY = 'Case not identified'

--Step 7/
--Rename field
EXEC SP_RENAME_FIELD 'DV13A_', 'DV13_04_RT_FULL_QLIK_AR'
EXEC SP_RENAME_FIELD 'DV13B_', 'DV13_05_RT_FULL_SAP_AR'
EXEC SP_RENAME_FIELD 'DV13C_', 'DV13_06_RT_DISC_QLIK_AR_SAP'
EXEC SP_RENAME_FIELD 'DV13D_', 'DV13_07_RT_DISC_SAP_AR_QLIK'

--Delete temporary tables
EXEC SP_REMOVE_TABLES '%_TT_%'


-- Step 8/
--Send Finish Message for DIVA_BULK_IMPORT.jar: 

	INSERT INTO DV00_RT_USER_FEEDBACK_MESSAGE VALUES('', '', 'DV13 stored procedure has finished.')

/* log cube creation*/

INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV13_04_RT_FULL_QLIK_AR',(SELECT COUNT(*) FROM DV13_04_RT_FULL_QLIK_AR) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV13_05_RT_FULL_SAP_AR',(SELECT COUNT(*) FROM DV13_05_RT_FULL_SAP_AR) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV13_06_RT_DISC_QLIK_AR_SAP',(SELECT COUNT(*) FROM DV13_06_RT_DISC_QLIK_AR_SAP) 
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Cube completed','DV13_07_RT_DISC_SAP_AR_QLIK',(SELECT COUNT(*) FROM DV13_07_RT_DISC_SAP_AR_QLIK) 

/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL


END 
GO
