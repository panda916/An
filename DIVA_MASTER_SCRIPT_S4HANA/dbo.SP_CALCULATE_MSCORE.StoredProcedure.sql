USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_CALCULATE_MSCORE]
    @TableName NVARCHAR(255)
AS
BEGIN
    DECLARE @SqlStatement NVARCHAR(MAX);

-- Add fields

	SET @SqlStatement = '
        ALTER TABLE ' + QUOTENAME(@TableName) + '
        ADD ZF_MSCORE_VAL_DSR       FLOAT,
            ZF_MSCORE_VAL_GMI       FLOAT,
            ZF_MSCORE_VAL_AQI       FLOAT,
            ZF_MSCORE_VAL_SGI       FLOAT,
            ZF_MSCORE_VAL_DEPI      FLOAT,
            ZF_MSCORE_VAL_SGAI      FLOAT,
            ZF_MSCORE_VAL_ACCRUALS  FLOAT,
            ZF_MSCORE_VAL_LEVI      FLOAT,
            ZF_MSCORE              FLOAT,
            ZF_MSCORE_FLAG         NVARCHAR(MAX);
     ';
	 
    EXEC sp_executesql @SqlStatement;

-- Calculate variables

    SET @SqlStatement = '
        UPDATE ' + QUOTENAME(@TableName) + '
        SET  
		ZF_MSCORE_VAL_DSR        = 
			CASE 
				WHEN ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC = 0 OR ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV = 0 OR ZF_ACDOCA_HSL_RECEIVABLES_TOT_END_CUC_PREV = 0 THEN NULL
				ELSE 
					( 
						ZF_ACDOCA_HSL_RECEIVABLES_TOT_END_CUC / -1 * ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC 
					) 
						/ 
					(
						ZF_ACDOCA_HSL_RECEIVABLES_TOT_END_CUC_PREV / -1* ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV
					)
			END,
		ZF_MSCORE_VAL_GMI =
			CASE 
				WHEN ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV = 0 OR ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC = 0 OR ZF_ACDOCA_HSL_COGS_TOT_MOV_CUC = -ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC THEN NULL 
				ELSE 
					( 
						(1 -  ZF_ACDOCA_HSL_COGS_TOT_MOV_CUC_PREV / -1 * ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV)
					) 
						/ 
					(
						(1 - ZF_ACDOCA_HSL_COGS_TOT_MOV_CUC / - 1 * ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC)
					)
			END,
		ZF_MSCORE_VAL_AQI =
			CASE 
				WHEN ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC = 0 OR ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC_PREV = 0 THEN NULL 
				ELSE 
					(
						1 - (
								(
									ZF_ACDOCA_HSL_PPE_TOT_END_CUC + ZF_ACDOCA_HSL_CURRENT_ASSETS_TOT_END_CUC
								)
								/ ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC
							)
					) 
					/
					(
						1 - (
								(
									ZF_ACDOCA_HSL_PPE_TOT_END_CUC_PREV + ZF_ACDOCA_HSL_CURRENT_ASSETS_TOT_END_CUC_PREV
								)
								/ ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC_PREV
							)
					) 
			END,
		ZF_MSCORE_VAL_SGI  = 
			CASE 
				WHEN ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV = 0 THEN NULL 
				ELSE 
					(-1* ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC) / (-1* ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV )
			END,
		ZF_MSCORE_VAL_DEPI = 
			CASE 
				WHEN ZF_ACDOCA_HSL_DEPRECIATION_EXPS_TOT_MOV_CUC_PREV + ZF_ACDOCA_HSL_PPE_TOT_END_CUC_PREV = 0 OR ZF_ACDOCA_HSL_DEPRECIATION_EXPS_TOT_MOV_CUC + ZF_ACDOCA_HSL_PPE_TOT_END_CUC = 0 OR ZF_ACDOCA_HSL_DEPRECIATION_EXPS_TOT_END_CUC = 0 THEN NULL 
				ELSE 
					 (
						ZF_ACDOCA_HSL_DEPRECIATION_EXPS_TOT_MOV_CUC_PREV
						/
						(
							ZF_ACDOCA_HSL_PPE_TOT_END_CUC_PREV
						)
					 ) 
					 / 
					 (
						ZF_ACDOCA_HSL_DEPRECIATION_EXPS_TOT_MOV_CUC
						/
						(
							ZF_ACDOCA_HSL_PPE_TOT_END_CUC
						)
					 ) 
		   END,
		  ZF_MSCORE_VAL_SGAI = 
			CASE 
				WHEN ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC = 0 OR ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV = 0  OR ZF_ACDOCA_HSL_SGAEXP_TOT_MOV_CUC_PREV = 0 THEN NULL 
				ELSE 
				(
					ZF_ACDOCA_HSL_SGAEXP_TOT_MOV_CUC / -1*ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC
				) / 
				(
					ZF_ACDOCA_HSL_SGAEXP_TOT_MOV_CUC_PREV / -1 * ZF_ACDOCA_HSL_SALES_TOT_MOV_CUC_PREV
				)
			END,
		ZF_MSCORE_VAL_ACCRUALS = 
			CASE 
				WHEN (-1*ZF_ACDOCA_HSL_NET_INCOME_TOT_MOV_CUC + ZF_ACDOCA_HSL_DEPRECIATION_TOT_MOV_CUC - ZF_ACDOCA_HSL_RECEIVABLES_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_PAYABLES_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_ACCR_OPEXPENSE_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_GRIR_TOT_MOV_CUC) = 0 OR ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC = 0 THEN NULL
			ELSE 

			(
				-1 * ZF_ACDOCA_HSL_NET_INCOME_TOT_MOV_CUC - 
				(
					-1*ZF_ACDOCA_HSL_NET_INCOME_TOT_MOV_CUC + ZF_ACDOCA_HSL_DEPRECIATION_TOT_MOV_CUC - ZF_ACDOCA_HSL_RECEIVABLES_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_PAYABLES_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_ACCR_OPEXPENSE_TOT_MOV_CUC + -1*ZF_ACDOCA_HSL_GRIR_TOT_MOV_CUC
				)
			) / ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC
			END,
		ZF_MSCORE_VAL_LEVI = 
			CASE 
				WHEN ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC = 0 OR ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC_PREV = 0 OR ZF_ACDOCA_HSL_DEBT_TOT_END_CUC_PREV = 0 THEN NULL 
				ELSE 
					(
						ZF_ACDOCA_HSL_DEBT_TOT_END_CUC/ ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC 
					) /
					(
						ZF_ACDOCA_HSL_DEBT_TOT_END_CUC_PREV / ZF_ACDOCA_HSL_TOTAL_ASSETS_TOT_END_CUC_PREV
					)
			END
			'
		;
    EXEC sp_executesql @SqlStatement;

-- Flag where earnings are potentially manipulated
	SET @SqlStatement = '
		UPDATE  ' + QUOTENAME(@TableName) + '
		SET
		ZF_MSCORE				= -4.84 + 0.920*ISNULL(ZF_MSCORE_VAL_DSR,0) + 0.528*ISNULL(ZF_MSCORE_VAL_GMI,0) + 0.404*ISNULL(ZF_MSCORE_VAL_AQI,0) + 0.892*ISNULL(ZF_MSCORE_VAL_SGI,0) + 0.115*ISNULL(ZF_MSCORE_VAL_DEPI,0) - 0.172*ISNULL(ZF_MSCORE_VAL_SGAI,0) + 4.679*ISNULL(ZF_MSCORE_VAL_ACCRUALS,0) - 0.327*ISNULL(ZF_MSCORE_VAL_LEVI,0)
		';
	 
	EXEC sp_executesql @SqlStatement;

-- Flag where earnings are potentially manipulated
	SET @SqlStatement = '
		UPDATE ' + QUOTENAME(@TableName) + '
		SET
			ZF_MSCORE_FLAG = CASE
								WHEN ZF_MSCORE < -2.22 THEN ''Unlikely distortion''
								WHEN ZF_MSCORE BETWEEN -2.22 AND -1.78 THEN ''Possible distortion''
								ELSE ''Likely distortion'' END
		';
	EXEC sp_executesql @SqlStatement;

END;
GO
