USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[script_DC12_MATERIAL_MOVEMENT_CUBE]
AS

--DYNAMIC_SCRIPT_START
/* Initiate the log */ 
----Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END
 
--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
 
/* Initialize parameters from globals table */
 
DECLARE  
                      @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
                     ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
                     ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
                     ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
                     ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
                     ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
                     ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
                     ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
                     ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
                     ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
                     ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
					 ,@ZV_SAME_QUARTER_BY_BLDAT NVARCHAR(MAX) = ISNULL((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_SAME_QUARTER_BY_BLDAT'), '')


EXEC SP_DROPTABLE 'DC12_01_IT_MATERIAL_MOVEMENT'


SELECT 
	   A.B26_01_MSEG_BUKRS,
	   A.B26_01_MSEG_MBLNR,
	   A.B26_01_MSEG_MJAHR,
	   A.B26_01_MSEG_ZEILE,
	   MAX(T001_WAERS) AS T001_WAERS,
	   MAX(A.B26_01_MKPF_BUDAT) AS B26_01_MKPF_BUDAT,
	   MAX(ISNULL(EXCHNG_RATIO,1)*COALESCE(TCURX_FACTOR,1)) AS EXCHNG_RATIO_OLD,
	   MAX(COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)*COALESCE(TCURX_FACTOR,1)) AS EXCHNG_RATIO_NEW,
	   SUM(A.B26_01_MSEG_DMBTR) AS B26_01_MSEG_DMBTR,
	   SUM(A.B26_01_ZF_MSEG_DMBTR_SIGNED_CUC) AS B26_01_ZF_MSEG_DMBTR_SIGNED_CUC_NEW,
	   SUM(B.B26_01_ZF_MSEG_DMBTR_SIGNED_CUC) AS B26_01_ZF_MSEG_DMBTR_SIGNED_CUC_OLD
INTO DC12_01_IT_MATERIAL_MOVEMENT
FROM
(
SELECT B26_01_MSEG_BUKRS,
	   B26_01_MSEG_MBLNR, 
	   B26_01_MSEG_MJAHR, 
	   B26_01_MSEG_ZEILE,
	   MAX(B26_01_MKPF_BUDAT) AS B26_01_MKPF_BUDAT,
	   SUM(B26_01_MSEG_DMBTR) AS B26_01_MSEG_DMBTR,
	   SUM(B26_01_ZF_MSEG_DMBTR_SIGNED_CUC) AS B26_01_ZF_MSEG_DMBTR_SIGNED_CUC
FROM B26_01_IT_MATERIAL_MOVEMENT_NEW
GROUP BY B26_01_MSEG_BUKRS, 
	    B26_01_MSEG_MBLNR, 
	   B26_01_MSEG_MJAHR, 
	   B26_01_MSEG_ZEILE
) A
INNER JOIN 
(
SELECT B26_01_MSEG_BUKRS,
	   B26_01_MSEG_MBLNR, 
	   B26_01_MSEG_MJAHR, 
	   B26_01_MSEG_ZEILE,
	   MAX(B26_01_MKPF_BUDAT) AS B26_01_MKPF_BUDAT,
	   SUM(B26_01_MSEG_DMBTR) AS B26_01_MSEG_DMBTR,
	   SUM(B26_01_ZF_MSEG_DMBTR_SIGNED_CUC) AS B26_01_ZF_MSEG_DMBTR_SIGNED_CUC
FROM B26_01_IT_MATERIAL_MOVEMENT
GROUP BY B26_01_MSEG_BUKRS, 
	    B26_01_MSEG_MBLNR, 
	   B26_01_MSEG_MJAHR, 
	   B26_01_MSEG_ZEILE
) B
ON A.B26_01_MSEG_BUKRS = B.B26_01_MSEG_BUKRS
AND A.B26_01_MSEG_MBLNR = B.B26_01_MSEG_MBLNR
AND A.B26_01_MSEG_MJAHR = B.B26_01_MSEG_MJAHR
AND A.B26_01_MSEG_ZEILE = B.B26_01_MSEG_ZEILE

-- Add T001_WAERS 

LEFT JOIN A_T001 
	ON A.B26_01_MSEG_BUKRS = T001_BUKRS

--Add TCURX for T001_WAERS 

LEFT JOIN B00_TCURX 
	ON A_T001.T001_WAERS = TCURX_CURRKEY	

-- Add the exchange rate

LEFT JOIN AM_EXCHNG 
	ON A_T001.T001_WAERS = EXCHNG_FROM

-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B26_01_MKPF_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A.B26_01_MKPF_BUDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 

GROUP BY A.B26_01_MSEG_BUKRS,
	   A.B26_01_MSEG_MBLNR,
	   A.B26_01_MSEG_MJAHR,
	   A.B26_01_MSEG_ZEILE
	   
	   


EXEC SP_UNNAME_FIELD 'B26_01_',DC12_01_IT_MATERIAL_MOVEMENT
EXEC SP_RENAME_FIELD 'DC12_01_',DC12_01_IT_MATERIAL_MOVEMENT
GO
