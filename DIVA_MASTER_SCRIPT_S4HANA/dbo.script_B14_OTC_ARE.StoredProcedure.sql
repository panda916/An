USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[script_B14_OTC_ARE]
--ALTER PROCEDURE dbo.qry_CUBE_OTC-06-ARE

WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
SET NOCOUNT ON
/* 
	Title        :  B14_OTC_06_ARE 
    Description  :  Customer master data 
       
    -------------------------------------------------------------- 
    Update history 
    -------------------------------------------------------------- 
    Date		|  Who    |  Description 
    13-07-2016     EH        Initial version for Sony 
	04-04-2019	   THUAN     Update use AR mapping 
	05-08-2019		VL		 Update for S4HANA logic
	24-03-2022	   Thuan	 Remove MANDT field in join
	16-08-2024		HL		 Remove fields from BSEG and change the logic of due date calculation to use ACDOCA_NETDT
*/ 

--/* Initiate the log */  
----Create database log table if it does not exist
--IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

----Log start of procedure
--INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
--SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL


	/* Initialize parameters from globals table */
    DECLARE  
				@CURRENCY NVARCHAR(3)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
				,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
				,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
				,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
				,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
				,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
				,@LANGUAGE1 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
				,@LANGUAGE2 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
				,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
				,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
				,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')
				,@MSSG NVARCHAR(MAX)
                 SET DATEFORMAT @DATEFORMAT;

--	----------------------------------------------------------------------------------------------------------------------------

	SET ROWCOUNT @LIMIT_RECORDS
	----------------------------------------------------------------------------------------------------------------------------
	--step 3: create final Simple cube here

		--add index for B13_05_IT_CMD to improve processing performance
		EXEC SP_CREATE_INDEX 'B13_05_IT_CMD','B13_05','B13_KNB1_BUKRS, B13_KNB1_KUNNR, B13_KNB1_MANDT'

		--pre process to obtain Clearing document summary information to improve processing performance
		EXEC SP_DROPTABLE 'B14_01_TT_ACDOCA_CLR_DOC'
		SELECT DISTINCT B07D_ACDOCA_RCLNT as ACDOCA_RCLNT, B07D_ACDOCA_BELNR as ACDOCA_BELNR, B07D_ACDOCA_GJAHR as ACDOCA_GJAHR, B07D_ACDOCA_RBUKRS as ACDOCA_RBUKRS, B07D_ACDOCA_BLART as ACDOCA_BLART 
							INTO B14_01_TT_ACDOCA_CLR_DOC FROM B07_03_IT_FIN_AR_INV_PAY_FLAGS 
		EXEC SP_CREATE_INDEX 'B14_01_TT_ACDOCA_CLR_DOC','B14_01','ACDOCA_RCLNT, ACDOCA_BELNR, ACDOCA_GJAHR, ACDOCA_RBUKRS, ACDOCA_BLART'

		EXEC SP_DROPTABLE 'B14_02_TT_T052U'
		SELECT * INTO B14_02_TT_T052U FROM B00_T052U
		EXEC SP_CREATE_INDEX 'B14_02_TT_T052U','B14_02','T052U_MANDT, T052U_ZTERM'
		
		EXEC SP_DROPTABLE 'B14_03_TT_T003T'
		SELECT * INTO B14_03_TT_T003T FROM B00_T003T WHERE T003T_SPRAS = @language1
		EXEC SP_CREATE_INDEX 'B14_03_TT_T003T','B14_03','T003T_MANDT, T003T_BLART'

		EXEC SP_CREATE_INDEX 'B04_08_IT_FIN_GL', 'B04_ZF_ENTRY_TYPE_IDX', 'B04_GL_ZF_ENTRY_TYPE'
		EXEC SP_DROPTABLE 'B14_04_TT_FIN_MJE'
		SELECT DISTINCT B04_GL_ACDOCA_RCLNT, B04_GL_ACDOCA_RBUKRS, B04_GL_ACDOCA_GJAHR, B04_GL_ACDOCA_BELNR, B04_GL_ACDOCA_BUZEI, B04_GL_ACDOCA_DOCLN 
				INTO B14_04_TT_FIN_MJE FROM B04_08_IT_FIN_GL WHERE B04_GL_ZF_ENTRY_TYPE = 'Manual'
		EXEC SP_CREATE_INDEX 'B14_04_TT_FIN_MJE','B14_04','B04_GL_ACDOCA_RCLNT, B04_GL_ACDOCA_RBUKRS, B04_GL_ACDOCA_GJAHR, B04_GL_ACDOCA_BELNR, B04_GL_ACDOCA_BUZEI, B04_GL_ACDOCA_DOCLN'

		EXEC SP_DROPTABLE 'B14_04_TT_FIN_MJE_HEADER'
		SELECT DISTINCT B04_GL_ACDOCA_RCLNT, B04_GL_ACDOCA_RBUKRS, B04_GL_ACDOCA_GJAHR, B04_GL_ACDOCA_BELNR 
				INTO B14_04_TT_FIN_MJE_HEADER FROM B14_04_TT_FIN_MJE
		EXEC SP_CREATE_INDEX 'B14_04_TT_FIN_MJE_HEADER','B14_04','B04_GL_ACDOCA_RCLNT, B04_GL_ACDOCA_RBUKRS, B04_GL_ACDOCA_GJAHR, B04_GL_ACDOCA_BELNR'

		EXEC sp_DROPTABLE 'B14_06_IT_ARE'

		--Enter main select statements below
		SELECT
		    B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RCLNT				--																						AS Mandant
		  ,AM_Scope.SCOPE_BUSINESS_DMN_L1			--																				AS M_Business domain_L1
		  ,AM_Scope.SCOPE_BUSINESS_DMN_L2						--																	AS M_Business domain_L2
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUSA					--																						AS Business area
		  ,A_TGSBT.TGSBT_GTEXT										--																		AS Business area text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS							--																			AS Company code
		  ,A_T001.T001_BUTXT										--															AS Company name
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_GJAHR							--																			AS Fiscal year
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT							--																			AS Posting date
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_BKPF_XBLNR
		  ,B07D_ACDOCA_MONAT
		  ,CAST(YEAR(B07D_ACDOCA_GJAHR) + ISNULL(B00_T009B_BUDAT.T009B_RELJR, 0) AS VARCHAR (4)) + '-' +
		  CASE 
				WHEN B00_T009B_BUDAT.T009B_POPER IN ('1','2','3') THEN 'Q1'
				WHEN B00_T009B_BUDAT.T009B_POPER IN ('4','5','6') THEN 'Q2'
				WHEN B00_T009B_BUDAT.T009B_POPER IN ('7','8','9') THEN 'Q3'
				WHEN B00_T009B_BUDAT.T009B_POPER IN ('10','11','12') THEN 'Q4'
				ELSE 'unable to classify'
			END ZF_GJAHR_BUDAT_FQ

	  		,
			CASE 
				WHEN B07D_ACDOCA_MONAT IN ('01','02','03') THEN 'Q1'
				WHEN B07D_ACDOCA_MONAT IN ('04','05','06') THEN 'Q2'
				WHEN B07D_ACDOCA_MONAT IN ('07','08','09') THEN 'Q3'
				WHEN B07D_ACDOCA_MONAT IN ('10','11','12') THEN 'Q4'
				ELSE 'unable to classify'
			END ZF_ACDOCA_MONAT_FQ
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_GJAHR + '-' + B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_MONAT AS ZF_GJAHR_MONAT --																			AS Z_Posting period
		  ,CONVERT(nvarchar(4), DATEPART(yyyy,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT)) + '-' + LEFT(DATENAME(mm,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT),3) ZF_ACDOCA_BUDAT_CYM --					AS Z_Calendar year-month
		  ,DATEADD(DAY,1,EOMONTH(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT, -1)) ZF_ACDOCA_BUDAT_1ST_DAY_MNTH		--																	AS Z_Calendar year-first of month	
		  ,CASE 																													
				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT >= @date1 AND B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT <= @date2 THEN 'X' 										
				ELSE '' 																											
		  END ZF_ACDOCA_BUDAT_POSTED_IN_PERIOD --																														AS Z_Posted in period 
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLDAT		--																								AS Document date
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BELNR			--																							AS Document nr
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUZEI				--																						AS Line item nr
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_DOCLN			--																						AS Line item nr
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KUNNR					--																					AS Customer nr
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KOKRS
          ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AWTYP
          ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AWREF
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_MATNR
          ,B13_05_IT_CMD.B13_KNA1_NAME1 AS KNA1_NAME1
		  ,B13_05_IT_CMD.B13_KNA1_LAND1 AS KNA1_LAND1
		  ,B13_05_IT_CMD.B13_KNA1_KTOKD AS KNA1_KTOKD
		  ,B13_05_IT_CMD.B13_T077X_TXT30 AS T077X_TXT30
		  ,B13_05_IT_CMD.B13_KNA1_VBUND AS KNA1_VBUND
		  ,B13_05_IT_CMD.B13_T880_NAME1 AS T880_NAME1
		  ,COALESCE(B13_05_IT_CMD.B13_ZF_KNB1_AKONT_INTER_COM, 'Unknown') KNB1_AKONT_INTER_COM --																				AS Z_Intercompany																								
		  ,B13_05_IT_CMD.B13_KNA1_KONZS AS KNA1_KONZS	--GROUP KEY																																															
		  ,B13_05_IT_CMD.B13_ZF_KNKK_CTLPC_RISK_CAT AS ZF_KNKK_CTLPC_RISK_CAT
		  ,B13_05_IT_CMD.B13_ZF_KNKK_CTLPC_RISK_CAT_TXT AS ZF_KNKK_CTLPC_RISK_CAT_TXT
		  ,B13_05_IT_CMD.B13_KNA1_BRAN1 as KNA1_BRAN1
		  ,B13_05_IT_CMD.B13_KNA1_BRAN2 as KNA1_BRAN2
		  ,B13_05_IT_CMD.B13_KNA1_BRAN3 as KNA1_BRAN3
		  ,B13_05_IT_CMD.B13_KNA1_BRAN4 as KNA1_BRAN4
		  ,B13_05_IT_CMD.B13_KNA1_BRAN5 as KNA1_BRAN5																																						
		  ,B13_05_IT_CMD.B13_ZF_STRATEGIC_ACC AS ZF_STRATEGIC_ACC																						
		  ,B13_05_IT_CMD.B13_ZF_STRATEGIC_ACC_TEXT AS ZF_STRATEGIC_ACC_TEXT																						
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLART --																										AS Document type
		  ,B00_T003T.T003T_LTEXT				--																							AS Document type text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSCHL		--																								AS Posting key
		  ,COALESCE(TBSLT_LTEXT, '') AS TBSLT_LTEXT				--																			AS Posting key text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_DRCRK_DESC					--																						
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RWCUR						--																				AS Currency (doc)
		  ,CONVERT(money,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_WSL * ISNULL(TCURX_DOC.TCURX_FACTOR, 1)) ZF_ACDOCA_WSL_DOC --								AS Value (doc)
		  ,A_T001.T001_WAERS --																											AS Currency (cc)
		  ,CONVERT(money,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_HSL * ISNULL(TCURX_CC.TCURX_FACTOR,1)) ZF_ACDOCA_HSL_COC --									AS Value (cc)	
		  ,@currency GLOBALS_CURRENCY							--																					AS Z_Currency (custom)	
		  ,CONVERT(money,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KSL * ISNULL(TCURX_KSL.TCURX_FACTOR,1) )	AS ZF_ACDOCA_HSL_CUC --	AS Z_Value (custom)
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_ZUONR				--																						AS Assignment  
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_SGTXT				--																						AS Document text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RACCT				--																						AS G/L account
		  ,COALESCE(SKAT_TXT50, '') AS SKAT_TXT50						--																		AS G/L account text
		  ,B07D_ZF_CREDIT_ACCOUNTS
		  ,B07D_ZF_CREDIT_ACCOUNT_TEXTS
		  ,B07D_ZF_DEBIT_ACCOUNTS
		  ,B07D_ZF_DEBIT_ACCOUNT_TEXTS
		  ,ISNULL(VBRK_ZTERM,'') AS VBRK_ZTERM -- 																								AS SD payment term
		  ,COALESCE(T052U_SD.T052U_TEXT1,'') AS T052U_SD_T052U_TEXT1 --																							AS SD payment term text
		  ,B13_05_IT_CMD.B13_KNB1_ZTERM AS KNB1_ZTERM		
		  ,COALESCE(T052U_CU.T052U_TEXT1, '') AS T052U_CU_T052U_TEXT1 --																						AS CMD payment term text
		,CASE  																													
			WHEN ISNULL(A_VBRK.VBRK_ZTERM,'') <> '' THEN A_VBRK.VBRK_ZTERM 																
			ELSE B13_05_IT_CMD.B13_KNB1_ZTERM 																						
	   END AS ZF_VBRK_USED_PMNT_TERM --																										AS Z_Used payment term
		,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_NETDT --																					AS Net due date
		  -- Difference between entry date and document date																		
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_CPUDT,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLDAT) AS ZF_ACDOCA_CPUDT_MINUS_BLDAT --																		AS Z_Days - entry date to document date
		  -- Difference between entry date and posting date																			
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_CPUDT,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT) AS ZF_ACDOCA_CPUDT_MINUS_BUDAT --																		AS Z_Days - entry date to posting date																AS Z_Days - entry date to baseline date																
		  -- Difference between doc date and posting date																			
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLDAT,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT) AS ZF_ACDOCA_BLDAT_MINUS_BUDAT --																	AS Z_Days - document date to posting date
		  -- Difference between doc date and due date																
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLDAT,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_NETDT) AS ZF_BLDAT_NETDT_DOC_DATE_TO_DUE_DATE --					AS Z_Days - document date to  due date
		  -- Difference between doc date and clearing date																			
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLDAT, 
			CASE
				WHEN ISNULL(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL, '') = '' THEN NULL 
				ELSE B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT END) AS ZF_AUGBL_AUGDT_DOC_DATE_TO_CLEARING_DATE --AS Z_Days - document date to clearing date
		 -- Difference between posting date and due date																		
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_NETDT) AS ZF_BUDAT_NETDT_POST_DATE_TO_DUE_DATE --					AS Z_Days - posting date to  due date
		  -- Difference between posting date and clearing date																		
		  ,DATEDIFF(d,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT, 
			CASE
				WHEN ISNULL(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL, '') = '' THEN NULL 
				ELSE B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT END) AS ZF_AUGBL_AUGDT_POST_DATE_TO_CLEAR_DATE --		AS Z_Days - posting date to clearing date
		 -- Difference between due date and clearing date																	
		  ,DATEDIFF(d,																												
				B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_NETDT,					
				-- Clearing date																									
					CASE WHEN ISNULL(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL, '') = '' THEN NULL 
					ELSE B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT END) AS ZF_AUGBL_AUGDT_NETDT_DUE_DATE_TO_CLEAR_DATE	--							AS Z_Days -  due date to clearing date
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL	--																									AS Clearing document nr
		  ,B14_01_TT_ACDOCA_CLR_DOC.ACDOCA_BLART AS ZF_ACDOCA_BLART_CLEARING_DOC_TYPE--																											AS Clearing document type
		  ,COALESCE(B14_03_TT_T003T.T003T_LTEXT, '') AS CLR_T003T_LTEXT			--																				AS Clearing document type text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGGJ --																										AS Clearing fiscal year
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT	--																									AS Clearing date
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_PRCTR
          ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RCNTR
		  ,CAST(YEAR(B07D_ACDOCA_AUGGJ) + ISNULL(B00_T009B_AUGDT.T009B_RELJR, 0) AS VARCHAR (4)) + '-' +
		  CASE 
				WHEN B00_T009B_AUGDT.T009B_POPER IN ('1','2','3') THEN 'Q1'
				WHEN B00_T009B_AUGDT.T009B_POPER IN ('4','5','6') THEN 'Q2'
				WHEN B00_T009B_AUGDT.T009B_POPER IN ('7','8','9') THEN 'Q3'
				WHEN B00_T009B_AUGDT.T009B_POPER IN ('10','11','12') THEN 'Q4'
				ELSE 'unable to classify'
			END ZF_AUGGJ_AUGDT_CLR_FYQ
		  ,CASE 																												
				WHEN B00_T009B_AUGDT.T009B_PERIV IS NULL THEN CAST(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_AUGDT_CLR_PER_YR	 AS NVARCHAR(1000))
				ELSE B00_T009B_AUGDT.T009B_PERIV																						
		   END AS ZF_CLR_FP	--																													AS Z_Clearing fiscal year-period
		  ,CONVERT(nvarchar(4), DATEPART(yyyy,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT)) + '-' + left(DATENAME(mm,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT),3) AS ACDOCA_AUGDT_CLR_CALENDAR_YM --					AS Z_Clearing calendar year-month
		  ,DATEADD(DAY,1,EOMONTH(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT,-1)) AS ZF_ACDOCA_AUGDT_CY_1ST_OF_MNTH --																			AS ZF_ACDOCA_AUGDT_CY_1ST_OF_MNTH
		  ,CASE 																													
				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT >= @date1 AND B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT <= @date2 THEN 'X'												
				ELSE ''																													
		  END AS ZF_ACDOCA_AUGDT_CLR_IN_PER --                         																								AS Z_Cleared in period	
		  ,A_BKPF.BKPF_STBLG --																											AS Reversal document nr		
		  ,A_BKPF.BKPF_STJAH --																											AS Reversal document year		
		  ,CASE 																														
	  		WHEN ISNULL(A_BKPF.BKPF_STBLG,'') <> '' THEN 'X'																			
	  		ELSE '' 																												
		   END AS ZF_BKPF_STBLG_REVERSED --																														AS Z_Reversed
		  ,A_BKPF.BKPF_GLVOR						--																					AS Business transaction
		  ,COALESCE(A_T022T.T022T_TXT, '') AS T022T_TXT					--																			AS Business transaction text
		  ,A_BKPF.BKPF_TCODE				--																							AS Transaction code
		  ,A_BKPF.BKPF_BKTXT
		  ,COALESCE(B00_TSTCT.TSTCT_TTEXT, '') AS TSTCT_TTEXT --																						AS Transaction code text
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSTAT AS ACDOCA_BSTAT--																										AS Document status
		  ,COALESCE(A_DD07T.DD07T_DDTEXT, '') AS DD07T_DDTEXT--																							AS Document status text
		  --Adding flag to determine whether the entry regular (automatic) or manual 													
		  ,CASE 																														
	  		WHEN B14_04_TT_FIN_MJE.B04_GL_ACDOCA_RCLNT IS NULL THEN 																						
	  			CASE																												
	  				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT BETWEEN @date1 AND @date2 THEN 'Regular' 												
	  				ELSE 'Undetermined'																								
	  			END																													
	  		ELSE 'Manual' 																											
		  END AS ZF_ENTRY_TYPE
		  --Adding flag to determine whether the clearing entry regular (automatic) or manual 										
		  ,CASE 																														
	  		WHEN MJEcl.B04_GL_ACDOCA_RCLNT IS NULL THEN 																					
	  			CASE																												
	  				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT BETWEEN @date1 AND @date2 THEN 'Regular' 												
	  				ELSE 'Undetermined'																								
	  			END																													
	  		ELSE 'Manual' 																											
		   END as ZF_CLEARNING_ENTRY_TYPE --																														AS Z_Clearing entry type
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_CPUDT
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_CPUTM
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_USNAM
		  ,A_V_USERNAME.V_USERNAME_NAME_TEXT
		  ,B00_USR02.USR02_USTYP
		  --,B00_USR02.[User type text	]																								AS User type text

		  -- SIMPLE and SOLA LC consolidation currency
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RHCUR
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RKCUR
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_ROCUR
          ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_HSL_S
          ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_HSL_S_CUC
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_KSL_S
		  ,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_ACDOCA_OSL_S
		  --applying Standard as label for Normal ledger, for special ledger, it is already specified with specific categories
		  ,IIF(ISNULL(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_UMSKZ, '') = '', 'Standard', B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_UMSKZ) ACDOCA_UMSKZ
		  ,CASE 
				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = 'SSN' THEN COALESCE(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RHCUR, @currency)	 
				WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = 'SI'  THEN COALESCE(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RKCUR, @currency) 
				ELSE COALESCE(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_ROCUR, @currency)	
			END	AS ZF_CUC	
		,
		B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ZF_AR_DOC_TYPE_BUCKET AS ZF_AR_DOC_TYPE_BUCKET
		INTO B14_06_IT_ARE
	
		FROM B07_03_IT_FIN_AR_INV_PAY_FLAGS
	
		INNER JOIN AM_Scope 
		ON  
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = AM_Scope.SCOPE_CMPNY_CODE)

		LEFT JOIN A_BKPF
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = A_BKPF.BKPF_BUKRS) AND    
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_GJAHR = A_BKPF.BKPF_GJAHR) AND 
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BELNR = A_BKPF.BKPF_BELNR)  
		
		LEFT JOIN A_T001
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = A_T001.T001_BUKRS) 

		--Add document type texts
		LEFT JOIN B00_T003T
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLART = B00_T003T.T003T_BLART) 
		
		--Includes posting key descriptions
		LEFT JOIN B00_TBSLT
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_UMSKZ = B00_TBSLT.TBSLT_UMSKZ) AND 
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSCHL = B00_TBSLT.TBSLT_BSCHL) 

		-- Get currency conversion factors for document currency
		LEFT JOIN B00_TCURX TCURX_DOC
		ON (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RWCUR = TCURX_DOC.TCURX_CURRKEY)

 		-- Get currency conversion factors for global currency
		LEFT JOIN B00_TCURX TCURX_KSL
		ON (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RKCUR = TCURX_KSL.TCURX_CURRKEY) 

		-- Get currency conversion factors for company code currency
		LEFT JOIN B00_TCURX TCURX_CC
		ON (A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY)
	
		LEFT JOIN B00_TCURX TCURX_CUS
		ON  TCURX_CUS.TCURX_CURRKEY = COALESCE(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RHCUR, @currency)
		-- Add G/L account texts
		LEFT JOIN B00_SKAT 
		ON  (A_T001.T001_KTOPL = B00_SKAT.SKAT_KTOPL) AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RACCT = B00_SKAT.SKAT_SAKNR)

		-- Include entry user name text   
		LEFT JOIN A_V_USERNAME
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_USNAM = A_V_USERNAME.V_USERNAME_BNAME) 
		 
		--Get entry user information
		LEFT JOIN B00_USR02 
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_USNAM = B00_USR02.USR02_BNAME)

		--Include Sony's fiscal year periods     
		LEFT JOIN B00_T009B B00_T009B_AUGDT
		ON (A_T001.T001_PERIV = B00_T009B_AUGDT.T009B_PERIV) AND
		   MONTH(B07D_ACDOCA_AUGDT) = B00_T009B_AUGDT.T009B_BUMON

		--Include Sony's fiscal year periods     
		LEFT JOIN B00_T009B B00_T009B_BUDAT
		ON (A_T001.T001_PERIV = B00_T009B_BUDAT.T009B_PERIV) AND
		   MONTH(B07D_ACDOCA_BUDAT) = B00_T009B_BUDAT.T009B_BUMON

		--Includes customer master data information     
		LEFT JOIN B13_05_IT_CMD
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = B13_05_IT_CMD.B13_KNB1_BUKRS) AND 
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KUNNR = B13_05_IT_CMD.B13_KNB1_KUNNR) 

		--Get billing document data
		LEFT JOIN A_VBRK 
		ON  (CASE WHEN B07D_ACDOCA_AWTYP = 'VBRK' THEN LEFT(BKPF_AWKEY, 10) ELSE '' END = VBRK_VBELN) AND 
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = A_VBRK.VBRK_BUKRS)

		--Includes sd payment term text
		LEFT JOIN B14_02_TT_T052U T052U_SD
		ON (VBRK_ZTERM = T052U_SD.T052U_ZTERM)

		--Includes customer payment term text
		LEFT JOIN B14_02_TT_T052U T052U_CU
		ON (B13_05_IT_CMD.B13_KNB1_ZTERM = T052U_CU.T052U_ZTERM)

		--Add business transaction texts
		LEFT JOIN A_T022T
		ON (@language1 = T022T_LANGU) AND
		   (BKPF_GLVOR = T022T_ACTIVITY)

		--Includes transaction codes texts
		LEFT JOIN B00_TSTCT
		ON (A_BKPF.BKPF_TCODE = B00_TSTCT.TSTCT_TCODE) AND
		   (B00_TSTCT.TSTCT_SPRSL = @language1)

		--Includes document status texts	
		LEFT JOIN A_DD07T 
		ON  (A_DD07T.DD07T_DDLANGUAGE = @language1) AND
			(A_DD07T.DD07T_DOMNAME ='BSTAT') AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSTAT = A_DD07T.DD07T_DOMVALUE_L)

		--Used to decide which entry is manual or regular 	
		LEFT JOIN B14_04_TT_FIN_MJE
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = B14_04_TT_FIN_MJE.B04_GL_ACDOCA_RBUKRS) AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_GJAHR = B14_04_TT_FIN_MJE.B04_GL_ACDOCA_GJAHR) AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BELNR = B14_04_TT_FIN_MJE.B04_GL_ACDOCA_BELNR)	AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUZEI = B14_04_TT_FIN_MJE.B04_GL_ACDOCA_BUZEI)	AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_DOCLN = B14_04_TT_FIN_MJE.B04_GL_ACDOCA_DOCLN)

		--Get clearing document information
		LEFT JOIN B14_01_TT_ACDOCA_CLR_DOC
		ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = B14_01_TT_ACDOCA_CLR_DOC.ACDOCA_RBUKRS) AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGGJ = B14_01_TT_ACDOCA_CLR_DOC.ACDOCA_GJAHR) AND
			(B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL = B14_01_TT_ACDOCA_CLR_DOC.ACDOCA_BELNR)

		--Add document type texts for clearing documents
		LEFT JOIN B14_03_TT_T003T
		ON  (B14_01_TT_ACDOCA_CLR_DOC.ACDOCA_BLART = B14_03_TT_T003T.T003T_BLART)

		--Used to decide which entry is manual or regular for clearing documents nr
		LEFT JOIN B14_04_TT_FIN_MJE_HEADER MJEcl
			ON  (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS = MJEcl.B04_GL_ACDOCA_RBUKRS) 
			AND (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_GJAHR = MJEcl.B04_GL_ACDOCA_GJAHR)
			AND (B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL = MJEcl.B04_GL_ACDOCA_BELNR)

		-- Business area text
		LEFT JOIN A_TGSBT
		ON  B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUSA = A_TGSBT.TGSBT_GSBER AND
			A_TGSBT.TGSBT_SPRAS = @language1

		--Immediately following each cube select statement, copy the following to log the cube creation
		--Note: make sure to update the two references to cube name in this code
		INSERT INTO [_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
		SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B14_06_IT_ARE',(SELECT COUNT(*) FROM B14_06_IT_ARE)

	-- Create index on cube to improve performance in future joins
		EXEC SP_CREATE_INDEX 'B14_06_IT_ARE', 'B14_02_INDEX', 'B07D_ACDOCA_RCLNT, B07D_ACDOCA_RBUKRS, B07D_ACDOCA_GJAHR, B07D_ACDOCA_BELNR, B07D_ACDOCA_BUZEI, B07D_ACDOCA_DOCLN'

	-- Creating AR life cycle

	-- step 1: Create a temp table with all month ends between @date1 and @date2
	DECLARE		@end_date DATE = (SELECT CAST(@date2 AS date))
				,@current_snapshot_date date = (SELECT CAST(@date1 AS date))
				,@start_date date = (SELECT CAST(@date1 AS date))
				,@snapshot_date date
				,@eof date
				,@snapshot_date_ageing1 int
				,@snapshot_date_ageing date
				,@SQL_CMD NVARCHAR(MAX)

	EXEC dbo.SP_DROPTABLE 'B14_07_TT_AR_BUCKET'
	SELECT DISTINCT 
	B07D_ACDOCA_RBUKRS ACDOCA_RBUKRS, 
	B07D_ACDOCA_BLART ACDOCA_BLART, 
	B07D_ACDOCA_BSCHL ACDOCA_BSCHL, 
	B07D_ZF_AR_LIFE_CYCLE_BUCKET_TYPE ZF_AR_LIFE_CYCLE_BUCKET_TYPE 
	INTO B14_07_TT_AR_BUCKET
	FROM B07_03_IT_FIN_AR_INV_PAY_FLAGS

	EXEC sp_DROPTABLE 'B14_08_TT_T4'
	CREATE TABLE [B14_08_TT_T4](
		[ACDOCA_RCLNT] [nvarchar](50) NULL,
		[ACDOCA_RBUKRS] [nvarchar](50) NULL,
		[ACDOCA_BUDAT] [date] NULL,
		[ACDOCA_AUGBL] [nvarchar](50) NULL,
		[ACDOCA_KUNNR] [nvarchar](50) NULL,
		[ACDOCA_BELNR] [nvarchar](50) NULL,
		[ACDOCA_BUZEI] [nvarchar](50) NULL,
		[ACDOCA_DOCLN] [nvarchar](50) NULL,
		[ACDOCA_BLART] [varchar](50) NULL,
		[ACDOCA_BSCHL] [nvarchar](50) NULL,
		[ACDOCA_AUGDT] [date] NULL,
		[ACDOCA_RWCUR] [nvarchar](50) NULL,
		[ACDOCA_HSL] [money] NULL,
		[ACDOCA_KSL] [money] NULL,
		[ZF_ACDOCA_DRCRK_INTEGER] [int] NOT NULL)

		EXEC SP_DROPTABLE 'B14_09_TT_ACDOCA'

		SELECT * INTO B14_09_TT_ACDOCA FROM B14_08_TT_T4

		ALTER TABLE B14_08_TT_T4
		ADD ZF_SNAPSHOT_DATE DATE,
			ZF_SNAPSHOT_DATE_AGEING DATE,
			ZF_B_OUTSTANDING_AT_SNAPSHOT_DATE VARCHAR(50),
			ZF_DOCUMENT_TYPE VARCHAR(50),
			T003T_LTEXT VARCHAR(100),
			ZF_DOCUMENT_TYPE_DESC VARCHAR(100)

		EXEC SP_DROPTABLE 'B14_10_TT_T4_OUTPUT'
		SELECT * INTO B14_10_TT_T4_OUTPUT FROM B14_08_TT_T4

		EXEC SP_DROPTABLE 'B14_11_TT_T4_1ST_MONTH'
		SELECT * INTO B14_11_TT_T4_1ST_MONTH FROM B14_08_TT_T4
	
	-- Create T4 table
	INSERT INTO B14_08_TT_T4
		SELECT
			 B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RCLNT
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGBL
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KUNNR
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BELNR
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUZEI
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_DOCLN
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLART
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSCHL
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_AUGDT
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RWCUR
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_HSL
			,B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_KSL
			,CASE WHEN B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_DRCRK='H' THEN -1 ELSE 1 END
			,DATEADD (DD, -1, DATEADD(MM, DATEDIFF(MM, 0, B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT) + 1, 0))
			,DATEADD (DD, -1, DATEADD(MM, DATEDIFF(MM, 0, B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BUDAT) + 1, 0))
			,'', '', '', ''
		FROM B07_03_IT_FIN_AR_INV_PAY_FLAGS
			LEFT JOIN dbo.B14_07_TT_AR_BUCKET
				ON B14_07_TT_AR_BUCKET.ACDOCA_RBUKRS = B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_RBUKRS
				AND B14_07_TT_AR_BUCKET.ACDOCA_BLART = B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BLART
				AND B14_07_TT_AR_BUCKET.ACDOCA_BSCHL = B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_BSCHL
		WHERE B14_07_TT_AR_BUCKET.ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'B' AND B07_03_IT_FIN_AR_INV_PAY_FLAGS.B07D_ACDOCA_DRCRK = 'S'
	
	INSERT INTO B14_09_TT_ACDOCA
		SELECT 
			 B07D_ACDOCA_RCLNT as ACDOCA_RCLNT
			,B07D_ACDOCA_RBUKRS as ACDOCA_RBUKRS
			,B07D_ACDOCA_BUDAT as ACDOCA_BUDAT
			,B07D_ACDOCA_AUGBL as ACDOCA_AUGBL
			,B07D_ACDOCA_KUNNR as ACDOCA_KUNNR
			,B07D_ACDOCA_BELNR as ACDOCA_BELNR
			,B07D_ACDOCA_BUZEI as ACDOCA_BUZEI
			,B07D_ACDOCA_DOCLN as ACDOCA_DOCLN
			,B07D_ACDOCA_BLART as ACDOCA_BLART
			,B07D_ACDOCA_BSCHL as ACDOCA_BSCHL
			,B07D_ACDOCA_AUGDT as ACDOCA_AUGDT
			,B07D_ACDOCA_RWCUR as ACDOCA_RWCUR
			,B07D_ACDOCA_HSL as ACDOCA_HSL
			,B07D_ACDOCA_KSL as ACDOCA_KSL
			,CASE WHEN B07D_ACDOCA_DRCRK ='H' THEN -1 ELSE 1 END
		FROM B07_03_IT_FIN_AR_INV_PAY_FLAGS 
	-- loop through each month in filtered BSAD_BSID data set
	--SET @current_snapshot_date = Cast('04/01/2017' as datetime)
	--SET @end_date = Cast('05/31/2017' as datetime)

	WHILE DATEDIFF(mm, @current_snapshot_date, @end_date) > -1
	BEGIN
	DECLARE @err_msg NVARCHAR(100) = 'Processing ' + CAST(@current_snapshot_date AS NVARCHAR(100))
	SET @snapshot_date = DATEADD (DD, -1, DATEADD(MM, DATEDIFF(MM, 0, @current_snapshot_date) + 1, 0))
	SET @current_snapshot_date = DATEADD(MM, 1, @current_snapshot_date)
	
		RAISERROR (@err_msg, 0, 1) WITH NOWAIT
	--slide 1
		EXEC SP_DROPTABLE 'B14_12_TT_T3_ACDOCA_OUT_BAL'
		SELECT ACDOCA_RCLNT, 
				ACDOCA_RBUKRS, 
				ACDOCA_AUGBL, 
		ACDOCA_AUGDT, SUM(ACDOCA_HSL) ZF_ACDOCA_HSL_TOT
		, SUM(ACDOCA_KSL) ZF_ACDOCA_KSL_TOT
		INTO B14_12_TT_T3_ACDOCA_OUT_BAL
		FROM B14_09_TT_ACDOCA
		WHERE ACDOCA_BUDAT <= @SNAPSHOT_DATE
		GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT 
		HAVING SUM(ACDOCA_HSL) > 0
		DELETE B14_11_TT_T4_1ST_MONTH

		INSERT INTO B14_11_TT_T4_1ST_MONTH
		SELECT 
			B14_08_TT_T4.ACDOCA_RCLNT
			,B14_08_TT_T4.ACDOCA_RBUKRS
			,B14_08_TT_T4.ACDOCA_BUDAT
			,B14_08_TT_T4.ACDOCA_AUGBL
			,B14_08_TT_T4.ACDOCA_KUNNR
			,B14_08_TT_T4.ACDOCA_BELNR
			,B14_08_TT_T4.ACDOCA_BUZEI
			,B14_08_TT_T4.ACDOCA_DOCLN
			,B14_08_TT_T4.ACDOCA_BLART
			,B14_08_TT_T4.ACDOCA_BSCHL
			,B14_08_TT_T4.ACDOCA_AUGDT
			,B14_08_TT_T4.ACDOCA_RWCUR
			,B14_08_TT_T4.ACDOCA_HSL
			,B14_08_TT_T4.ACDOCA_KSL
			,B14_08_TT_T4.ZF_ACDOCA_DRCRK_INTEGER
			,@snapshot_date
			,@snapshot_date
			,CASE
				WHEN ISNULL(B14_08_TT_T4.ACDOCA_AUGDT, '') = '' THEN 'X'
				WHEN DATEDIFF(dd, B14_08_TT_T4.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
				WHEN ISNULL(B14_12_TT_T3_ACDOCA_OUT_BAL.ACDOCA_RBUKRS, '') <> '' THEN 'X'
				ELSE '' END
			,IIf(ISNULL(B14_12_TT_T3_ACDOCA_OUT_BAL.ACDOCA_RBUKRS, '') <> '' AND ISNULL(B14_08_TT_T4.ACDOCA_AUGDT, '') <> ''
						AND B14_08_TT_T4.ACDOCA_AUGDT <= @snapshot_date, 'Outstanding', 'B') 
			,'', ''
		FROM B14_08_TT_T4
			LEFT JOIN B14_12_TT_T3_ACDOCA_OUT_BAL
				ON  B14_12_TT_T3_ACDOCA_OUT_BAL.ACDOCA_RBUKRS	= B14_08_TT_T4.ACDOCA_RBUKRS
					AND B14_12_TT_T3_ACDOCA_OUT_BAL.ACDOCA_AUGBL	= B14_08_TT_T4.ACDOCA_AUGBL
					AND B14_12_TT_T3_ACDOCA_OUT_BAL.ACDOCA_AUGDT	= B14_08_TT_T4.ACDOCA_AUGDT
		WHERE B14_08_TT_T4.ACDOCA_BUDAT <= @snapshot_date
				AND (ISNULL(B14_08_TT_T4.ACDOCA_AUGDT, '') = ''
						OR B14_08_TT_T4.ACDOCA_AUGDT > @snapshot_date)
				
		INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT * FROM B14_11_TT_T4_1ST_MONTH
		
		EXEC SP_DROPTABLE 'B14_11_TT_T4_1ST_MONTH_SUM'
		SELECT ACDOCA_RCLNT,
				ACDOCA_RBUKRS,
				ACDOCA_AUGBL,
				ACDOCA_AUGDT, 
			@snapshot_date ZF_SNAPSHOT_DATE,
			@snapshot_date ZF_SNAPSHOT_DATE_AGEING,
			'X' ZF_B_OUTSTANDING_AT_SNAPSHOT_DATE,
			'B' ZF_DOCUMENT_TYPE,
			ACDOCA_RWCUR,
			SUM(ACDOCA_HSL) ACDOCA_HSL,
			SUM(ACDOCA_KSL) ACDOCA_KSL
		INTO B14_11_TT_T4_1ST_MONTH_SUM FROM B14_11_TT_T4_1ST_MONTH
		GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, ACDOCA_RWCUR

		SET @snapshot_date_ageing = DATEADD (DD, -1, DATEADD(MM, DATEDIFF(MM, 0, @snapshot_date) + 2, 0))
		WHILE DATEDIFF(mm, @snapshot_date, @snapshot_date_ageing) <= 6
				AND DATEDIFF(mm, @snapshot_date_ageing, @end_date) >= 0
		BEGIN
			EXEC SP_DROPTABLE 'T14_ACDOCA_NOT_MTCH_EXT_DATE'
			SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, SUM(ACDOCA_HSL) ZF_ACDOCA_HSL_SIGNED, SUM(ACDOCA_KSL) ZF_ACDOCA_KSL_SIGNED
			INTO T14_ACDOCA_NOT_MTCH_EXT_DATE
			FROM B14_09_TT_ACDOCA
			WHERE ACDOCA_AUGBL = '' AND ACDOCA_BUDAT <= @snapshot_date_ageing
			GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT
		
			EXEC SP_DROPTABLE 'B14_13_TT_ACDOCA_SNAPSHOT'
			SELECT B14_09_TT_ACDOCA.ACDOCA_RCLNT, 
				B14_09_TT_ACDOCA.ACDOCA_RBUKRS, 
				B14_09_TT_ACDOCA.ACDOCA_AUGBL, 
				B14_09_TT_ACDOCA.ACDOCA_AUGDT, 
				B14_09_TT_ACDOCA.ACDOCA_BLART, 
				B14_09_TT_ACDOCA.ACDOCA_BSCHL, 
				SUM(ACDOCA_HSL) ZF_ACDOCA_HSL_SIGNED,
				SUM(ACDOCA_KSL) ZF_ACDOCA_KSL_SIGNED,
				ZF_AR_LIFE_CYCLE_BUCKET_TYPE
			INTO B14_13_TT_ACDOCA_SNAPSHOT
			FROM B14_09_TT_ACDOCA
				LEFT JOIN dbo.B14_07_TT_AR_BUCKET
						ON B14_07_TT_AR_BUCKET.ACDOCA_RBUKRS = B14_09_TT_ACDOCA.ACDOCA_RBUKRS
						AND B14_07_TT_AR_BUCKET.ACDOCA_BLART = B14_09_TT_ACDOCA.ACDOCA_BLART
						AND B14_07_TT_AR_BUCKET.ACDOCA_BSCHL = B14_09_TT_ACDOCA.ACDOCA_BSCHL
			WHERE EXISTS (SELECT 1 FROM B14_11_TT_T4_1ST_MONTH_SUM 
							WHERE B14_09_TT_ACDOCA.ACDOCA_RBUKRS = B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS AND
							B14_09_TT_ACDOCA.ACDOCA_AUGBL = B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL AND
							B14_09_TT_ACDOCA.ACDOCA_AUGDT = B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT)
				AND B14_09_TT_ACDOCA.ACDOCA_BUDAT <= @snapshot_date_ageing
			GROUP BY B14_09_TT_ACDOCA.ACDOCA_RCLNT, B14_09_TT_ACDOCA.ACDOCA_RBUKRS, B14_09_TT_ACDOCA.ACDOCA_AUGBL, B14_09_TT_ACDOCA.ACDOCA_AUGDT, B14_09_TT_ACDOCA.ACDOCA_BLART, B14_09_TT_ACDOCA.ACDOCA_BSCHL, ZF_AR_LIFE_CYCLE_BUCKET_TYPE
		
			-- create DZ document type table
			EXEC SP_DROPTABLE 'B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT'
			SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, SUM(ZF_ACDOCA_HSL_SIGNED) ZF_ACDOCA_HSL_SIGNED, SUM(ZF_ACDOCA_KSL_SIGNED) ZF_ACDOCA_KSL_SIGNED
			INTO B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT
			FROM B14_13_TT_ACDOCA_SNAPSHOT
			WHERE B14_13_TT_ACDOCA_SNAPSHOT.ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'D'

			GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT

			-- create Credit note document type table
			EXEC SP_DROPTABLE 'B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE'
			SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, SUM(ZF_ACDOCA_HSL_SIGNED) ZF_ACDOCA_HSL_SIGNED, SUM(ZF_ACDOCA_KSL_SIGNED) ZF_ACDOCA_KSL_SIGNED
			INTO B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE
			FROM B14_13_TT_ACDOCA_SNAPSHOT
			WHERE B14_13_TT_ACDOCA_SNAPSHOT.ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'E'

			GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT

			-- create Deduction document type table
			EXEC SP_DROPTABLE 'B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION'
			SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, SUM(ZF_ACDOCA_HSL_SIGNED) ZF_ACDOCA_HSL_SIGNED, SUM(ZF_ACDOCA_KSL_SIGNED) ZF_ACDOCA_KSL_SIGNED
			INTO B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION
			FROM B14_13_TT_ACDOCA_SNAPSHOT
			WHERE B14_13_TT_ACDOCA_SNAPSHOT.ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'F'

			GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT

			-- create Other document type table
			EXEC SP_DROPTABLE 'B14_17_TT_ACDOCA_SNAPSHOT_OTH'
			SELECT ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT, SUM(ZF_ACDOCA_HSL_SIGNED) ZF_ACDOCA_HSL_SIGNED, SUM(ZF_ACDOCA_KSL_SIGNED) ZF_ACDOCA_KSL_SIGNED
			INTO B14_17_TT_ACDOCA_SNAPSHOT_OTH
			FROM B14_13_TT_ACDOCA_SNAPSHOT
			WHERE B14_13_TT_ACDOCA_SNAPSHOT.ZF_AR_LIFE_CYCLE_BUCKET_TYPE = 'G'

			GROUP BY ACDOCA_RCLNT, ACDOCA_RBUKRS, ACDOCA_AUGBL, ACDOCA_AUGDT

			EXEC SP_DROPTABLE 'B14_18_TT_ACDOCA_INV'
			SELECT B14_11_TT_T4_1ST_MONTH_SUM.*,
				ISNULL(B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ZF_ACDOCA_HSL_SIGNED, 0) B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT,
				ISNULL(B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_HSL_DEDUCTION,
				ISNULL(B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_HSL_CREDIT_NOTE,
				ISNULL(B14_17_TT_ACDOCA_SNAPSHOT_OTH.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_HSL_OTH,
				ISNULL(T14_ACDOCA_NOT_MTCH_EXT_DATE.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_HSL_NOT_MTCH,

				ISNULL(B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ZF_ACDOCA_KSL_SIGNED, 0) B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT,
				ISNULL(B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ZF_ACDOCA_KSL_SIGNED, 0) ZF_ACDOCA_KSL_DEDUCTION,
				ISNULL(B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ZF_ACDOCA_KSL_SIGNED, 0) ZF_ACDOCA_KSL_CREDIT_NOTE,
				ISNULL(B14_17_TT_ACDOCA_SNAPSHOT_OTH.ZF_ACDOCA_KSL_SIGNED, 0) ZF_ACDOCA_KSL_OTH,
				ISNULL(T14_ACDOCA_NOT_MTCH_EXT_DATE.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_KSL_NOT_MTCH,
				'DZ' ACDOCA_BLART_DZ,
				'DA' ACDOCA_BLART_DA,
				'DG' ACDOCA_BLART_DG,
				'OTHER' ACDOCA_BLART_OTH,

				ISNULL(B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_HSL, 0) +
					 + ISNULL(B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ZF_ACDOCA_HSL_SIGNED, 0)
					 + ISNULL(B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ZF_ACDOCA_HSL_SIGNED, 0)
					 + ISNULL(B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ZF_ACDOCA_HSL_SIGNED, 0)
					 + ISNULL(B14_17_TT_ACDOCA_SNAPSHOT_OTH.ZF_ACDOCA_HSL_SIGNED, 0)
					 + ISNULL(T14_ACDOCA_NOT_MTCH_EXT_DATE.ZF_ACDOCA_HSL_SIGNED, 0) ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX,
				ISNULL(B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_KSL, 0) +
					 + ISNULL(B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ZF_ACDOCA_KSL_SIGNED, 0)
					 + ISNULL(B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ZF_ACDOCA_KSL_SIGNED, 0)
					 + ISNULL(B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ZF_ACDOCA_KSL_SIGNED, 0)
					 + ISNULL(B14_17_TT_ACDOCA_SNAPSHOT_OTH.ZF_ACDOCA_KSL_SIGNED, 0)
					 + ISNULL(T14_ACDOCA_NOT_MTCH_EXT_DATE.ZF_ACDOCA_KSL_SIGNED, 0) ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_C_BUCKET_W_DZ_DG_DA_OTHER,
				CAST( 0 AS FLOAT) ZF_ACDOCA_HSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_HSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_HSL_INV_DEDUCTION_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_HSL_INV_OTH_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER,
				CAST( 0 AS FLOAT) ZF_ACDOCA_KSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_KSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_KSL_INV_DEDUCTION_AT_SNDTX_MTHX,
				CAST( 0 AS FLOAT) ZF_ACDOCA_KSL_INV_OTH_AT_SNDTX_MTHX

			INTO B14_18_TT_ACDOCA_INV
			FROM B14_11_TT_T4_1ST_MONTH_SUM
				LEFT JOIN B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT
					ON  B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS = B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ACDOCA_RBUKRS
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL = B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ACDOCA_AUGBL
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT = B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ACDOCA_AUGDT
					AND ISNULL(B14_14_TT_ACDOCA_SNAPSHOT_CASH_PAYMENT.ACDOCA_AUGBL, '') <> ''
				LEFT JOIN B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE
					ON B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS = B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ACDOCA_RBUKRS
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL = B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ACDOCA_AUGBL
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT = B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ACDOCA_AUGDT
					AND ISNULL(B14_15_TT_ACDOCA_SNAPSHOT_CREDIT_NOTE.ACDOCA_AUGBL, '') <> ''
				LEFT JOIN B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION
					ON  B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS = B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ACDOCA_RBUKRS
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL = B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ACDOCA_AUGBL
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT = B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ACDOCA_AUGDT
					AND ISNULL(B14_16_TT_ACDOCA_SNAPSHOT_DEDUCTION.ACDOCA_AUGBL, '') <> ''
				LEFT JOIN B14_17_TT_ACDOCA_SNAPSHOT_OTH
					ON  B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS = B14_17_TT_ACDOCA_SNAPSHOT_OTH.ACDOCA_RBUKRS
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL = B14_17_TT_ACDOCA_SNAPSHOT_OTH.ACDOCA_AUGBL
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT = B14_17_TT_ACDOCA_SNAPSHOT_OTH.ACDOCA_AUGDT
					AND ISNULL(B14_17_TT_ACDOCA_SNAPSHOT_OTH.ACDOCA_AUGBL, '') <> ''
				LEFT JOIN T14_ACDOCA_NOT_MTCH_EXT_DATE
					ON  B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_RBUKRS = T14_ACDOCA_NOT_MTCH_EXT_DATE.ACDOCA_RBUKRS
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGBL = T14_ACDOCA_NOT_MTCH_EXT_DATE.ACDOCA_AUGBL
					AND B14_11_TT_T4_1ST_MONTH_SUM.ACDOCA_AUGDT = T14_ACDOCA_NOT_MTCH_EXT_DATE.ACDOCA_AUGDT
					AND ISNULL(T14_ACDOCA_NOT_MTCH_EXT_DATE.ACDOCA_AUGBL, '') <> ''
	
	
			UPDATE B14_18_TT_ACDOCA_INV
				SET ZF_ACDOCA_HSL_DEDUCTION = 
					CASE
						--exclude Deduction if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_HSL + B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_HSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_HSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_HSL_OTH,0) = 0 THEN 0
						--exclude Deduction if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_HSL_DEDUCTION + ACDOCA_HSL + ZF_ACDOCA_HSL_CREDIT_NOTE = 0
							AND (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT <> 0 AND ZF_ACDOCA_HSL_CREDIT_NOTE <> 0) THEN 0
						ELSE ZF_ACDOCA_HSL_DEDUCTION
					END,

					ZF_ACDOCA_HSL_CREDIT_NOTE = 
					CASE
						--exclude credit note if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_HSL + B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_HSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_HSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_HSL_OTH,0) = 0 THEN 0
						--exclude credit note if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_HSL_DEDUCTION + ACDOCA_HSL + ZF_ACDOCA_HSL_CREDIT_NOTE = 0)
							AND (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT <> 0 AND ZF_ACDOCA_HSL_DEDUCTION <> 0) THEN 0
						ELSE ZF_ACDOCA_HSL_CREDIT_NOTE
					END,
				
					ZF_ACDOCA_HSL_OTH = 
					CASE
						--exclude other if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_HSL + B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_HSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_HSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_HSL_OTH,0) = 0 THEN 0
						--exclude other if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_HSL_DEDUCTION + ACDOCA_HSL + ZF_ACDOCA_HSL_CREDIT_NOTE = 0 THEN 0
						ELSE ZF_ACDOCA_HSL_OTH
					END
			
	-- Update KSL value.
				UPDATE B14_18_TT_ACDOCA_INV
				SET ZF_ACDOCA_KSL_DEDUCTION = 
					CASE
						--exclude Deduction if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_KSL + B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_KSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_KSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_KSL_OTH,0) = 0 THEN 0
						--exclude Deduction if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_KSL_DEDUCTION + ACDOCA_KSL + ZF_ACDOCA_KSL_CREDIT_NOTE = 0
							AND (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT <> 0 AND ZF_ACDOCA_KSL_CREDIT_NOTE <> 0) THEN 0
						ELSE ZF_ACDOCA_KSL_DEDUCTION
					END,

					ZF_ACDOCA_KSL_CREDIT_NOTE = 
					CASE
						--exclude credit note if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_KSL + B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_KSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_KSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_KSL_OTH,0) = 0 THEN 0
						--exclude credit note if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_KSL_DEDUCTION + ACDOCA_KSL + ZF_ACDOCA_KSL_CREDIT_NOTE = 0)
							AND (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT <> 0 AND ZF_ACDOCA_KSL_DEDUCTION <> 0) THEN 0
						ELSE ZF_ACDOCA_KSL_CREDIT_NOTE
					END,
				
					ZF_ACDOCA_KSL_OTH = 
					CASE
						--exclude other if Opening invoice equals to cash payment 
						--and deduction pluses credit note pluses other equal zeroes
						WHEN ACDOCA_KSL + B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ISNULL(ZF_ACDOCA_KSL_DEDUCTION,0) + ISNULL(ZF_ACDOCA_KSL_CREDIT_NOTE,0) + ISNULL(ZF_ACDOCA_KSL_OTH,0) = 0 THEN 0
						--exclude other if cash payment equals to Opening Invoice pluses Credit note pluses Deduction
						WHEN B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT + ZF_ACDOCA_KSL_DEDUCTION + ACDOCA_KSL + ZF_ACDOCA_KSL_CREDIT_NOTE = 0 THEN 0
						ELSE ZF_ACDOCA_KSL_OTH
					END


			UPDATE B14_18_TT_ACDOCA_INV
				SET ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX = IIF(ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX > 0
					OR (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ZF_ACDOCA_HSL_DEDUCTION = 0
						AND ZF_ACDOCA_HSL_CREDIT_NOTE = 0
						AND ZF_ACDOCA_HSL_OTH = 0), ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX, 0),
				ZF_C_BUCKET_W_DZ_DG_DA_OTHER = ABS(ISNULL(B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT, 0))
				 + ABS(ISNULL(ZF_ACDOCA_HSL_DEDUCTION, 0))
				 + ABS(ISNULL(ZF_ACDOCA_HSL_CREDIT_NOTE, 0))
				 + ABS(ISNULL(ZF_ACDOCA_HSL_OTH, 0))
				 + IIF(ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX > 0
					OR (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ZF_ACDOCA_HSL_DEDUCTION = 0
						AND ZF_ACDOCA_HSL_CREDIT_NOTE = 0
						AND ZF_ACDOCA_HSL_OTH = 0), ABS(ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX), 0)

			UPDATE B14_18_TT_ACDOCA_INV
				SET
				ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX =  
						IIF(ZF_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_HSL * (ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX / ZF_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_HSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX = 
						IIF(ZF_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_HSL * (B14_14_TT_ACDOCA_HSL_SNAPSHOT_CASH_PAYMENT / ZF_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_HSL_INV_DEDUCTION_AT_SNDTX_MTHX = 
						IIF(ZF_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_HSL * (ZF_ACDOCA_HSL_DEDUCTION / ZF_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_HSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX = 
						IIF(ZF_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_HSL * (ZF_ACDOCA_HSL_CREDIT_NOTE / ZF_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_HSL_INV_OTH_AT_SNDTX_MTHX = 
						IIF(ZF_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_HSL * (ZF_ACDOCA_HSL_OTH / ZF_C_BUCKET_W_DZ_DG_DA_OTHER), 0)

					UPDATE B14_18_TT_ACDOCA_INV
				SET ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX = IIF(ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX > 0
					OR (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ZF_ACDOCA_KSL_DEDUCTION = 0
						AND ZF_ACDOCA_KSL_CREDIT_NOTE = 0
						AND ZF_ACDOCA_KSL_OTH = 0), ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX, 0),
				ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER = ABS(ISNULL(B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT, 0))
				 + ABS(ISNULL(ZF_ACDOCA_KSL_DEDUCTION, 0))
				 + ABS(ISNULL(ZF_ACDOCA_KSL_CREDIT_NOTE, 0))
				 + ABS(ISNULL(ZF_ACDOCA_KSL_OTH, 0))
				 + IIF(ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX > 0
					OR (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT = 0
						AND ZF_ACDOCA_KSL_DEDUCTION = 0
						AND ZF_ACDOCA_KSL_CREDIT_NOTE = 0
						AND ZF_ACDOCA_KSL_OTH = 0), ABS(ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX), 0)

			UPDATE B14_18_TT_ACDOCA_INV
				SET
				ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX =  
						IIF(ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_KSL * (ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX / ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_KSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX = 
						IIF(ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_KSL * (B14_14_TT_ACDOCA_KSL_SNAPSHOT_CASH_PAYMENT / ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_KSL_INV_DEDUCTION_AT_SNDTX_MTHX = 
						IIF(ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_KSL * (ZF_ACDOCA_KSL_DEDUCTION / ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_KSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX = 
						IIF(ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_KSL * (ZF_ACDOCA_KSL_CREDIT_NOTE / ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER), 0),
				ZF_ACDOCA_KSL_INV_OTH_AT_SNDTX_MTHX = 
						IIF(ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER <> 0, ACDOCA_KSL * (ZF_ACDOCA_KSL_OTH / ZF_ACDOCA_KSL_C_BUCKET_W_DZ_DG_DA_OTHER), 0)

				--insert outstanding payment into output
			INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT
				B14_18_TT_ACDOCA_INV.ACDOCA_RCLNT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS
				,NULL 
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGBL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RWCUR
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_KSL_OT_AT_SNDTX_MTHX
				,1
				,@snapshot_date
				,@snapshot_date_ageing
				,CASE
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, '') = '' THEN 'X'
					WHEN DATEDIFF(dd, B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS, '') <> '' THEN 'X'
					ELSE '' END
				,'C'
				, '', ''
			FROM B14_18_TT_ACDOCA_INV
			WHERE ZF_ACDOCA_HSL_OT_AT_SNDTX_MTHX <> 0

			--insert cash payment into output
			INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT
							B14_18_TT_ACDOCA_INV.ACDOCA_RCLNT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS
				,NULL 
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGBL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RWCUR
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_HSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_KSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX
				,1
				,@snapshot_date
				,@snapshot_date_ageing
				,CASE
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, '') = '' THEN 'X'
					WHEN DATEDIFF(dd, B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS, '') <> '' THEN 'X'
					ELSE '' END
				,'D'
				, '', ''
			FROM B14_18_TT_ACDOCA_INV
			WHERE ZF_ACDOCA_HSL_INV_CASH_PAYMENT_AT_SNDTX_MTHX <> 0
		
			--insert deduction into output
			INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT
							B14_18_TT_ACDOCA_INV.ACDOCA_RCLNT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS
				,NULL 
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGBL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RWCUR
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_HSL_INV_DEDUCTION_AT_SNDTX_MTHX
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_KSL_INV_DEDUCTION_AT_SNDTX_MTHX
				,1
				,@snapshot_date
				,@snapshot_date_ageing
				,CASE
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, '') = '' THEN 'X'
					WHEN DATEDIFF(dd, B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS, '') <> '' THEN 'X'
					ELSE '' END
				,'F'
				, '', ''
			FROM B14_18_TT_ACDOCA_INV
			WHERE ZF_ACDOCA_HSL_INV_DEDUCTION_AT_SNDTX_MTHX <> 0

			--insert credit note into output
			INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT
							B14_18_TT_ACDOCA_INV.ACDOCA_RCLNT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS
				,NULL 
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGBL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RWCUR
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_HSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_KSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX
				,1
				,@snapshot_date
				,@snapshot_date_ageing
				,CASE
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, '') = '' THEN 'X'
					WHEN DATEDIFF(dd, B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS, '') <> '' THEN 'X'
					ELSE '' END
				,'E'
				, '', ''
			FROM B14_18_TT_ACDOCA_INV
			WHERE ZF_ACDOCA_HSL_INV_CREDIT_NOTE_AT_SNDTX_MTHX <> 0

			--OTH
			INSERT INTO B14_10_TT_T4_OUTPUT
			SELECT
							B14_18_TT_ACDOCA_INV.ACDOCA_RCLNT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS
				,NULL 
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGBL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,NULL
				,B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT
				,B14_18_TT_ACDOCA_INV.ACDOCA_RWCUR
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_HSL_INV_OTH_AT_SNDTX_MTHX
				,B14_18_TT_ACDOCA_INV.ZF_ACDOCA_KSL_INV_OTH_AT_SNDTX_MTHX
				,1
				,@snapshot_date
				,@snapshot_date_ageing
				,CASE
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, '') = '' THEN 'X'
					WHEN DATEDIFF(dd, B14_18_TT_ACDOCA_INV.ACDOCA_AUGDT, @snapshot_date) > 0 THEN 'X'
					WHEN ISNULL(B14_18_TT_ACDOCA_INV.ACDOCA_RBUKRS, '') <> '' THEN 'X'
					ELSE '' END
				,'G'
				, '', ''
			FROM B14_18_TT_ACDOCA_INV
			WHERE ZF_ACDOCA_HSL_INV_OTH_AT_SNDTX_MTHX <> 0
		
			SET @snapshot_date_ageing = DATEADD (DD, -1, DATEADD(MM, DATEDIFF(MM, 0, @snapshot_date_ageing) + 2, 0))
		END
	END



	
	EXEC SP_REMOVE_TABLES 'B14_11_TT_T4_OUTPUT'
	SELECT DISTINCT
			ACDOCA_RCLNT,
			ACDOCA_RBUKRS,
			ACDOCA_BUDAT,
			ACDOCA_AUGBL,
			ACDOCA_KUNNR,
			ACDOCA_BELNR,
			ACDOCA_BUZEI,
			ACDOCA_DOCLN,
			ACDOCA_BLART,
			A_T003T.T003T_LTEXT,
			ACDOCA_BSCHL,
			ACDOCA_AUGDT,
			ACDOCA_RWCUR,
			ACDOCA_HSL,
			KNA1_NAME1,
			TBSLT_LTEXT,
			ZF_ACDOCA_DRCRK_INTEGER,
			ZF_SNAPSHOT_DATE,
			ZF_SNAPSHOT_DATE_AGEING,
			ZF_B_OUTSTANDING_AT_SNAPSHOT_DATE,
			ZF_DOCUMENT_TYPE,
			CASE ZF_DOCUMENT_TYPE
				WHEN 'B' THEN 'Open Invoice'
				WHEN 'Outstanding' THEN 'Open Invoice'
				WHEN 'C' THEN 'Invoice - Outstanding'
				WHEN 'D' THEN 'Cash payment'
				WHEN 'E' THEN 'Credit note'
				WHEN 'F' THEN 'Deduction'
				WHEN 'G' THEN 'Others'
				Else 'Unclassified'
			END ZF_DOCUMENT_TYPE_DESC,
			AM_T077X.INTERCO_TXT T077X_INTERCO_TXT,
			T001_WAERS,
			CONVERT(MONEY, ACDOCA_HSL * ISNULL(B00_TCURX.TCURX_FACTOR,1)) ZF_ACDOCA_HSL_COC,
			@CURRENCY GLOBALS_CURRENCY,
			CONVERT(MONEY, ACDOCA_KSL * ISNULL(TCURX_KSL.TCURX_FACTOR,1)) ZF_ACDOCA_HSL_CUC,
			DATEDIFF(MM, ZF_SNAPSHOT_DATE, ZF_SNAPSHOT_DATE_AGEING) ZF_SNAPSHOT_DATE_DIFF
	INTO B14_11_TT_T4_OUTPUT
	FROM B14_10_TT_T4_OUTPUT
--  Thuan update 2024/01/15 Link with AR mapping get UMSKZ
	LEFT JOIN B07_03_IT_FIN_AR_INV_PAY_FLAGS 
		ON   B07D_ACDOCA_RBUKRS = ACDOCA_RBUKRS
			AND B07D_ACDOCA_BUDAT = ACDOCA_BUDAT
			AND B07D_ACDOCA_BELNR = ACDOCA_BELNR
	--Get customer infor
	LEFT JOIN A_KNA1
	ON ACDOCA_KUNNR = KNA1_KUNNR
	----Get Posting Key Text
	LEFT JOIN B00_TBSLT
	ON TBSLT_SPRAS IN ('E', 'EN') AND
	   ACDOCA_BSCHL = TBSLT_BSCHL AND
	   B07D_ACDOCA_UMSKZ = TBSLT_UMSKZ

	--Get customer group infor
	LEFT JOIN AM_T077X
	ON  KNA1_KTOKD = T077X_KTOKD

	--Get local currency informatiom
	LEFT JOIN A_T001
	ON  ACDOCA_RBUKRS = A_T001.T001_BUKRS

	--Get document type desc
	LEFT JOIN A_T003T
	ON T003T_SPRAS IN ('E', 'EN') AND
	   ACDOCA_BLART = T003T_BLART

	--Get currency factor
	LEFT JOIN B00_TCURX
	ON TCURX_CURRKEY = T001_WAERS

	-- Add currency factor for KSL currency   
	LEFT JOIN B00_TCURX TCURX_KSL
	ON	@CURRENCY = TCURX_KSL.TCURX_CURRKEY

	EXEC SP_REMOVE_TABLES 'B14_19_IT_T4_OUTPUT'
	EXEC sp_rename 'B14_11_TT_T4_OUTPUT', 'B14_19_IT_T4_OUTPUT'


	EXEC SP_UNNAME_FIELD 'B07D_', 'B14_06_IT_ARE'
	EXEC sp_RENAME_FIELD 'B14_', 'B14_06_IT_ARE'
	EXEC sp_RENAME_FIELD 'B14B_', 'B14_19_IT_T4_OUTPUT'
	--rename the output table and remove temparory table
	EXEC SP_REMOVE_TABLES '%_TT_%'


--Immediately following each cube select statement, copy the following to log the cube creation
	--Note: make sure to update the two references to cube name in this code
	INSERT INTO [_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
	SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B14_06_IT_ARE',(SELECT COUNT(*) FROM B14_06_IT_ARE)

	INSERT INTO [_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
	SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B14_06_IT_ARE',(SELECT COUNT(*) FROM B14_06_IT_ARE)

	INSERT INTO [_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
	SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B14_19_IT_T4_OUTPUT',(SELECT COUNT(*) FROM B14_19_IT_T4_OUTPUT)

	/* log end of procedure*/
	INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
	SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL
GO
