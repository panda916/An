USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE    PROCEDURE [dbo].[script_B18_OTC_COPA_ACCOUNT_BASED]
  
WITH EXECUTE AS CALLER
AS

--DYNAMIC_SCRIPT_START
/*
	Title: [B18_OTC_COPA_ACCOUNT_BASED]
	Description: This COPA script is developed according to KE24 with account based on SAP environment.

	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date			| Who |   Description
	22-10-2019		|Vinh Le| Create the first COPA logic for S/4HANA environment
	18-11-2021		Khoi	New update flag for Line with no Customer, sale organization or material
	24-03-2022	    Thuan	   Remove MANDT field in join
*/

/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL

	/* Initialize parameters from globals table */
    DECLARE  
				@CURRENCY NVARCHAR(3)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
				,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
				,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
				,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
				,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
				,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
				,@LANGUAGE1 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
				,@LANGUAGE2 NVARCHAR(3)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
				,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
				,@FISCAL_YEAR_FROM NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_FROM')
				,@FISCAL_YEAR_TO NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'FISCAL_YEAR_TO')
                 SET DATEFORMAT @DATEFORMAT;

SET ROWCOUNT @LIMIT_RECORDS

	EXEC SP_REMOVE_TABLES  'B18_%'
	EXEC SP_REMOVE_TABLES 'B18_01_TT_ACDOCA_LIMIT'

	/*Step 1: Initial a cube which is limited on Ledger type, Date range and Scope*/
	SELECT *
	INTO B18_01_TT_ACDOCA_LIMIT
	FROM B00_ACDOCA
	--Inner join with AM_SCOPE to remove line which isn't SCOPE
	INNER JOIN AM_SCOPE
	ON B00_ACDOCA.ACDOCA_RBUKRS = AM_SCOPE.SCOPE_CMPNY_CODE
	--Add some condition on Ledger type, Date range
	WHERE 	B00_ACDOCA.ACDOCA_GJAHR >= @FISCAL_YEAR_FROM AND B00_ACDOCA.ACDOCA_GJAHR <= @FISCAL_YEAR_TO

	/*Step 2: Use the cube was created from step 1 and apply some logic from KE24 to get all COPA line from ACDOCA table*/
	EXEC SP_REMOVE_TABLES 'B18_02_TT_COPA_ALL_TRANSACTIONS'
	SELECT
		ACDOCA_RCLNT
		,FINSC_CMP_VERSNC_VERSN
		,ACDOCA_FISCYEARPER
		,ACDOCA_PAOBJNR
		,ACDOCA_CO_BELNR
		,ACDOCA_BELNR
		,ACDOCA_BUZEI
		,LEFT(ACDOCA_TIMESTAMP,8) AS ACDOCA_CPUDT
		,ACDOCA_USNAM
		,ACDOCA_RYEAR
		,ACDOCA_POPER
		,ACDOCA_BUDAT
		,CONCAT(YEAR(ACDOCA_BUDAT), '-', IIF(LEN(MONTH(ACDOCA_BUDAT))>1,'','0'),MONTH(ACDOCA_BUDAT)) ZF_BUDAT_YEAR_MNTH
		,CONCAT(YEAR(ACDOCA_BLDAT), '-', IIF(LEN(MONTH(ACDOCA_BLDAT))>1,'','0'),MONTH(ACDOCA_BLDAT)) ZF_BLDAT_YEAR_MNTH
		,ACDOCA_BLDAT
		,ACDOCA_KUNNR
		,ACDOCA_MATNR_COPA
		,ACDOCA_FKART
		,ACDOCA_DRCRK
		,ACDOCA_KDAUF
		,ACDOCA_KDPOS
		,ACDOCA_AUFNR
		,ACDOCA_RBUKRS
		,ACDOCA_KOKRS
		,ACDOCA_KTOPL
		,ACDOCA_WERKS
		,ACDOCA_RBUSA
		,ACDOCA_RFAREA
		,ACDOCA_SEGMENT
		,ACDOCA_VKORG
		,ACDOCA_VTWEG
		,ACDOCA_SPART
		,ACDOCA_RACCT
		,ACDOCA_RCNTR
		,ACDOCA_KSTRG
		,ACDOCA_AWREF
		,ACDOCA_AWITEM
		,ACDOCA_PRCTR
		,ACDOCA_PPRCTR
		,ACDOCA_TIMESTAMP
		,ACDOCA_AWTYP
		,ACDOCA_AWORG
		,ACDOCA_AWSYS
		,ACDOCA_RVUNIT
		,TKA09_VALUTYP
		,ACDOCA_LAND1
		,ACDOCA_BRSCH
		,ACDOCA_MATKL
		,ACDOCA_BZIRK
		,CASE FINSC_CMP_VERSNC_BUZEI
			WHEN N'CO_BUZEI' THEN ACDOCA_CO_BUZEI
			WHEN N'CO_BUZEI2' THEN 
								CASE WHEN ACDOCA_CO_BUZEI2 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI2
								END
			WHEN N'CO_BUZEI5' THEN 
								CASE WHEN ACDOCA_CO_BUZEI5 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI5
								END
			WHEN N'CO_BUZEI6' THEN 
								CASE WHEN ACDOCA_CO_BUZEI6 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI6
								END
			WHEN N'CO_BUZEI7' THEN 
								CASE WHEN ACDOCA_CO_BUZEI7 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI7
								END
		END AS ACDOCA_CO_BUZEI
		,ACDOCA_KUNRE
		,ACDOCA_KUNWE
		,ACDOCA_KDGRP
		--Amount in document currency
		,SUM(CASE FINSC_CMP_VERSNC_WTGBTR
			WHEN N'WSL' THEN ACDOCA_WSL
			WHEN N'WSL2' THEN ACDOCA_WSL2
			ELSE ACDOCA_WSL3
		END) AS ZF_ACDOCA_WSL
		,ACDOCA_RWCUR
		--Amount in Company Currency
		,SUM(CASE FINSC_CMP_VERSNC_WOGBTR
			WHEN N'HSL' THEN ACDOCA_HSL
			WHEN N'KSL' THEN ACDOCA_KSL
			WHEN N'OSL' THEN ACDOCA_OSL
			WHEN N'VSL' THEN ACDOCA_VSL
			WHEN N'BSL' THEN ACDOCA_BSL
			WHEN N'CSL' THEN ACDOCA_CSL
			WHEN N'DSL' THEN ACDOCA_DSL
			WHEN N'ESL' THEN ACDOCA_ESL
			WHEN N'FSL' THEN ACDOCA_FSL
			WHEN N'GSL' THEN ACDOCA_GSL
			ELSE ACDOCA_CO_OSL
		END) AS ZF_ACDOCA_HSL
		,ACDOCA_RHCUR
		--Amount in Group Currency
		,SUM(CASE FINSC_CMP_VERSNC_WKGBTR
			WHEN N'HSL' THEN ACDOCA_HSL
			WHEN N'KSL' THEN ACDOCA_KSL
			WHEN N'OSL' THEN ACDOCA_OSL
			WHEN N'VSL' THEN ACDOCA_VSL
			WHEN N'BSL' THEN ACDOCA_BSL
			WHEN N'CSL' THEN ACDOCA_CSL
			WHEN N'DSL' THEN ACDOCA_DSL
			WHEN N'ESL' THEN ACDOCA_ESL
			WHEN N'FSL' THEN ACDOCA_FSL
			WHEN N'GSL' THEN ACDOCA_GSL
			ELSE ACDOCA_CO_OSL
		END) AS ZF_ACDOCA_KSL
		,ACDOCA_RKCUR
		--Amount in Another Currency
		,SUM(ISNULL(ACDOCA_OSL,0)) AS ZF_ACDOCA_OSL
		,ISNULL(ACDOCA_ROCUR,'') ACDOCA_ROCUR
		--Quantity
		,SUM(ACDOCA_MSL) ACDOCA_MSL
		,SUM(ACDOCA_QUANT1) ACDOCA_QUANT1
		,SUM(ACDOCA_QUANT2) ACDOCA_QUANT2
		,SUM(ACDOCA_QUANT3) ACDOCA_QUANT3
		,IIF(ISNULL(ACDOCA_ERKRS, '') <> '' AND ISNULL(ACDOCA_KOKRS, '') <> '' AND
		  LEFT(ACDOCA_OBJNR,2) LIKE '%EO%' AND 
		  ACDOCA_XPAOBJNR_CO_REL = N'X','X', '') COPA_LINE_FLAG
	INTO B18_02_TT_COPA_ALL_TRANSACTIONS
	FROM B18_01_TT_ACDOCA_LIMIT
	INNER JOIN A_FINSC_CMP_VERSNC
	ON ACDOCA_RBUKRS = A_FINSC_CMP_VERSNC.FINSC_CMP_VERSNC_BUKRS AND
		ACDOCA_RLDNR = A_FINSC_CMP_VERSNC.FINSC_CMP_VERSNC_RLDNR
	--Get value type from TKA09
	INNER JOIN A_TKA09
	ON	ACDOCA_KOKRS = A_TKA09.TKA09_KOKRS AND
		A_FINSC_CMP_VERSNC.FINSC_CMP_VERSNC_VERSN = A_TKA09.TKA09_VERSN AND
        A_TKA09.TKA09_PLANNING = 'X' AND A_TKA09.TKA09_ACTUAL = 'X'

	--WHERE ISNULL(ACDOCA_ERKRS, '') <> '' AND ISNULL(ACDOCA_KOKRS, '') <> '' AND
	--	  LEFT(ACDOCA_OBJNR,2) LIKE '%EO%' AND 
	--	  ACDOCA_XPAOBJNR_CO_REL = N'X'
	GROUP BY ACDOCA_RCLNT
		,FINSC_CMP_VERSNC_VERSN
		,ACDOCA_FISCYEARPER
		,ACDOCA_PAOBJNR
		,ACDOCA_CO_BELNR
		,ACDOCA_BELNR
		,ACDOCA_BUZEI
		,LEFT(ACDOCA_TIMESTAMP,8)
		,ACDOCA_USNAM
		,ACDOCA_RYEAR
		,ACDOCA_POPER
		,ACDOCA_BUDAT
		,ACDOCA_BLDAT
		,ACDOCA_KUNNR
		,ACDOCA_MATNR_COPA
		,ACDOCA_FKART
		,ACDOCA_DRCRK
		,ACDOCA_KDAUF
		,ACDOCA_KDPOS
		,ACDOCA_AUFNR
		,ACDOCA_RBUKRS
		,ACDOCA_KOKRS
		,ACDOCA_KTOPL
		,ACDOCA_WERKS
		,ACDOCA_RBUSA
		,ACDOCA_RFAREA
		,ACDOCA_SEGMENT
		,ACDOCA_VKORG
		,ACDOCA_VTWEG
		,ACDOCA_SPART
		,ACDOCA_RACCT
		,ACDOCA_RCNTR
		,ACDOCA_KSTRG
		,ACDOCA_AWREF
		,ACDOCA_AWITEM
		,ACDOCA_PRCTR
		,ACDOCA_PPRCTR
		,ACDOCA_TIMESTAMP
		,ACDOCA_AWTYP
		,ACDOCA_AWORG
		,ACDOCA_AWSYS
		,ACDOCA_RVUNIT
		,TKA09_VALUTYP
		,ACDOCA_LAND1
		,ACDOCA_BRSCH
		,ACDOCA_MATKL
		,ACDOCA_BZIRK
		,ACDOCA_KUNRE
		,ACDOCA_KUNWE
		,ACDOCA_KDGRP
		,ACDOCA_RWCUR
		,ACDOCA_RHCUR
		,ACDOCA_RKCUR
		,ACDOCA_ROCUR
		,CASE A_FINSC_CMP_VERSNC.FINSC_CMP_VERSNC_BUZEI
			WHEN N'CO_BUZEI' THEN ACDOCA_CO_BUZEI
			WHEN N'CO_BUZEI2' THEN 
								CASE WHEN ACDOCA_CO_BUZEI2 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI2
								END
			WHEN N'CO_BUZEI5' THEN 
								CASE WHEN ACDOCA_CO_BUZEI5 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI5
								END
			WHEN N'CO_BUZEI6' THEN 
								CASE WHEN ACDOCA_CO_BUZEI6 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI6
								END
			WHEN N'CO_BUZEI7' THEN 
								CASE WHEN ACDOCA_CO_BUZEI7 = N'000'
									THEN ACDOCA_CO_BUZEI
									ELSE ACDOCA_CO_BUZEI7
								END
		END
		,IIF(ISNULL(ACDOCA_ERKRS, '') <> '' AND ISNULL(ACDOCA_KOKRS, '') <> '' AND
		  LEFT(ACDOCA_OBJNR,2) LIKE '%EO%' AND 
		  ACDOCA_XPAOBJNR_CO_REL = N'X','X', '')


/*
	Step 3: Add Cost Element Category and Calculate line item signed, because the COPA line item signed is different to FI line item sign.
			Example: Credit line is negative in FI but it will be postive in COPA with Cost Element Category type is 11 (Revenue)
*/
	EXEC SP_REMOVE_TABLES 'B18_03_TT_COPA_WITH_LINE_SIGN'
	SELECT
		B18_02_TT_COPA_ALL_TRANSACTIONS.*,
		A_CSKB.CSKB_KATYP,
		CASE COPA_RACCT_Hierarchy_L1
			WHEN 'Gross Sales' THEN 
				CASE B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_DRCRK
					WHEN N'H' THEN 1
					WHEN N'S' THEN -1
					ELSE 0
				END
			WHEN 'Operating Revenue' THEN 
				CASE B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_DRCRK
					WHEN N'H' THEN 1
					WHEN N'S' THEN -1
					ELSE 0
				END
			ELSE
				CASE B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_DRCRK
					WHEN N'H' THEN -1
					WHEN N'S' THEN 1
					ELSE 0
				END
		END AS COPA_LINE_SIGN
	INTO B18_03_TT_COPA_WITH_LINE_SIGN
	FROM B18_02_TT_COPA_ALL_TRANSACTIONS
	INNER JOIN AM_COPA_MAPPING
	ON	B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_RBUKRS = AM_COPA_MAPPING.COPA_BUKRS AND
		B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_RACCT = AM_COPA_MAPPING.COPA_RACCT AND
		B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_KOKRS = AM_COPA_MAPPING.COPA_KOKRS
		--AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1 IN ('COGS', 'Gross Sales', 'Operating Revenue', 'Sales Reductions', 'On Inv. Discount')

	--Get GL account type fROM CSKB
	LEFT JOIN A_CSKB
	ON	B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_KOKRS = A_CSKB.CSKB_KOKRS AND
		B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_RACCT = A_CSKB.CSKB_KSTAR AND
		(YEAR(A_CSKB.CSKB_DATBI) = N'9999' OR A_CSKB.CSKB_DATBI >= B18_02_TT_COPA_ALL_TRANSACTIONS.ACDOCA_BLDAT)
	WHERE CAST(A_CSKB.CSKB_KATYP AS INT) IN (1, 11, 12)



/*
		Step 4: After we get all COPA transaction from step 2, we continue to get 
		some text description and COPA mapping description for this cube
*/
		EXEC SP_REMOVE_TABLES 'B18_04_IT_COPA_ACCOUNT_BASED'
		SELECT B18_03_TT_COPA_WITH_LINE_SIGN.*,
		--New Update
		IIF(ACDOCA_KUNNR<>'','','X') AS ZF_NO_CUSTOMER_FLAG , --No customer flag
		IIF(ACDOCA_KDAUF<>'','','X') AS ZF_NO_SALE_ORG_FLAG,--No sale org flag
		IIF(ACDOCA_MATNR_COPA<>'','','X') AS ZF_NO_MATERIAL_FLAG,--No material flag
		'' AS ZF_NULL_NUMBER,-- number of case per line
		AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1,
		AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L2,
		AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L3,
		IIF(AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1 IN ('Sales Reductions', 'On Inv. Discount'), AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1, NULL) ZF_SR_Hierarchy_L1 ,
		IIF(AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1 IN ('Sales Reductions', 'On Inv. Discount'), AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L2, NULL) ZF_SR_Hierarchy_L2 ,
		IIF(AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1 IN ('Sales Reductions', 'On Inv. Discount'), AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L3, NULL) ZF_SR_Hierarchy_L3 ,
		AM_COPA_MAPPING.COPA_Rebate_basis,
		AM_COPA_MAPPING.COPA_Settlement_method,
		AM_COPA_MAPPING.COPA_Contractual_Condition,
		AM_COPA_MAPPING.COPA_CI_or_non_CI,
		AM_COPA_MAPPING.COPA_Value,
		A_SKAT.SKAT_TXT50,
		A_T001.T001_BUTXT,
		A_T001.T001_WAERS,
		A_T001W.T001W_NAME1,
		A_DD07T.DD07T_DDTEXT,
		@currency COPA_GLOBAL_CURRENCY,
        CONCAT(ACDOCA_RYEAR, '-', ACDOCA_POPER) ZF_GJAHR_MONAT,
		CONCAT(CAST(ACDOCA_RYEAR AS NVARCHAR(4)), '-',CASE 
		 WHEN B18_03_TT_COPA_WITH_LINE_SIGN.[ACDOCA_POPER] IN (N'001',N'002',N'003') THEN 'Q1'
		 WHEN B18_03_TT_COPA_WITH_LINE_SIGN.[ACDOCA_POPER] IN (N'004',N'005',N'006') THEN 'Q2'
		 WHEN B18_03_TT_COPA_WITH_LINE_SIGN.[ACDOCA_POPER] IN (N'007',N'008',N'009') THEN 'Q3'
		 ELSE 'Q4' END ) ZF_GJAHR_POPER_FISCAL_YQ ,
		--Quantity with sign
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_MSL)*COPA_LINE_SIGN AS ZF_ACDOCA_MSL_S,

		--Transaction/Document currency times facrtor
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ZF_ACDOCA_WSL)*COPA_LINE_SIGN*ISNULL(B00_TCURX_WSL.TCURX_FACTOR, 1) ZF_ACDOCA_WSL_S,
		--Company/Local currency times factor
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ZF_ACDOCA_HSL)*COPA_LINE_SIGN*ISNULL(B00_TCURX_HSL.TCURX_FACTOR, 1) ZF_ACDOCA_HSL_S,
		--Custom currency times factor
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ZF_ACDOCA_KSL)*COPA_LINE_SIGN*ISNULL(B00_TCURX_KSL.TCURX_FACTOR, 1)  ZF_ACDOCA_HSL_S_CUC,
		--Amount in KSL(DMBE2) times factor
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ZF_ACDOCA_KSL)*COPA_LINE_SIGN*ISNULL(B00_TCURX_KSL.TCURX_FACTOR, 1) ZF_ACDOCA_KSL_S,
		--Amount in OSL(DMBE3) times factor
		ABS(B18_03_TT_COPA_WITH_LINE_SIGN.ZF_ACDOCA_OSL)*COPA_LINE_SIGN*ISNULL(B00_TCURX_OSL.TCURX_FACTOR, 1) ZF_ACDOCA_OSL_S
		INTO B18_04_IT_COPA_ACCOUNT_BASED
		FROM B18_03_TT_COPA_WITH_LINE_SIGN
		--Inner join to AM_COPA_MAPPING to keep the necessary characteristic which use to calculate COPA
		INNER JOIN AM_COPA_MAPPING
		ON	B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RBUKRS = AM_COPA_MAPPING.COPA_BUKRS AND
			B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RACCT = AM_COPA_MAPPING.COPA_RACCT AND
			B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_KOKRS = AM_COPA_MAPPING.COPA_KOKRS AND
			AM_COPA_MAPPING.COPA_RACCT_Hierarchy_L1 IN ('COGS', 'Gross Sales', 'Operating Revenue', 'Sales Reductions', 'On Inv. Discount')

		LEFT JOIN A_DD07T
			ON	A_DD07T.DD07T_DOMNAME = N'KATYP' AND
				A_DD07T.DD07T_DDLANGUAGE = N'EN'	AND
				A_DD07T.DD07T_AS4LOCAL = N'A'	AND
				A_DD07T.DD07T_DOMVALUE_L = B18_03_TT_COPA_WITH_LINE_SIGN.CSKB_KATYP
		--Get GL description
		LEFT JOIN A_SKAT
		ON	B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_KTOPL = A_SKAT.SKAT_KTOPL AND
			B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RACCT = A_SKAT.SKAT_SAKNR

		--Get company currency
		LEFT JOIN A_T001
		ON	B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RBUKRS = A_T001.T001_BUKRS

		--Get plant
		LEFT JOIN A_T001W
		ON B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_WERKS =  A_T001W.T001W_WERKS

		--Get factor to have real amount for HSL amount
		LEFT JOIN B00_TCURX B00_TCURX_HSL
		ON	B00_TCURX_HSL.TCURX_CURRKEY = A_T001.T001_WAERS

		--Get factor to have real amount for WSL amount
		LEFT JOIN B00_TCURX B00_TCURX_WSL
		ON B00_TCURX_WSL.TCURX_CURRKEY = B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RWCUR

		--Get factor to have real amount for KSL amount
		LEFT JOIN B00_TCURX B00_TCURX_KSL
		ON B00_TCURX_KSL.TCURX_CURRKEY = B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_RKCUR

		--Get factor to have real amount for OSL amount
		LEFT JOIN B00_TCURX B00_TCURX_OSL
		ON B00_TCURX_OSL.TCURX_CURRKEY = B18_03_TT_COPA_WITH_LINE_SIGN.ACDOCA_ROCUR

		ALTER TABLE B18_04_IT_COPA_ACCOUNT_BASED DROP COLUMN COPA_LINE_SIGN
		--New update
			UPDATE B18_04_IT_COPA_ACCOUNT_BASED
			SET ZF_NULL_NUMBER=LEN(CONCAT(ZF_NO_CUSTOMER_FLAG,ZF_NO_SALE_ORG_FLAG,ZF_NO_MATERIAL_FLAG))
	/*
		Step 5: Create a calculation mapping table to calculate Gross Profit, Net Sales, COGS easily and 
		It will not make a dupplication table as ECC SQL Script now
	*/

		IF OBJECT_ID (N'AM_COPA_GS_NS_COGS_MAPPING', N'U') IS NULL
			BEGIN
				EXEC SP_REMOVE_TABLES 'AM_COPA_GS_NS_COGS_MAPPING'
				CREATE TABLE AM_COPA_GS_NS_COGS_MAPPING
				(
					COPA_RACCT_Hierarchy_L0 NVARCHAR(MAX),
					COPA_RACCT_Hierarchy_L1 NVARCHAR(MAX),
					COPA_LINE_SIGN NVARCHAR(MAX),
				)

				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Invoice Sales', 'Gross Sales', 1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Invoice Sales', 'On Inv. Discount', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Net Sales', 'Gross Sales', 1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Net Sales', 'On Inv. Discount', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Net Sales', 'Sales Reductions', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Gross Profit', 'Gross Sales', 1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Gross Profit', 'On Inv. Discount', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Gross Profit', 'Sales Reductions', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Gross Profit', 'COGS', -1)
				INSERT INTO AM_COPA_GS_NS_COGS_MAPPING VALUES('Operating Revenue', 'Operating Revenue', 1)
			END



	/*
		Step 6: Create a Delivery documents cube for delivery and dialog user analysis
	*/
		EXEC SP_REMOVE_TABLES 'B18_05_IT_COPA_DELIVERY'
		SELECT 
				LIKP_MANDT,
				LIKP_VBELN,
				LIPS_POSNR,
				LIKP_ERNAM,
				A_USR02_HEADER.USR02_USTYP USR02_USTYP_HEADER,
				A_V_USERNAME_HEADER.V_USERNAME_NAME_TEXT V_USERNAME_NAME_TEXT_HEADER,
				A_DD07T_USTYP_HEADER.DD07T_DDTEXT USTYP_DDTEXT_HEADER,
				LIPS_ERNAM,
				A_USR02_ITEM.USR02_USTYP USR02_USTYP_ITEM,
				A_V_USERNAME_ITEM.V_USERNAME_NAME_TEXT V_USERNAME_NAME_TEXT_ITEM,
				A_DD07T_USTYP_ITEM.DD07T_DDTEXT USTYP_DDTEXT_ITEM,
				IIF(ISNULL(A_USR02_HEADER.USR02_USTYP, '') = 'A' OR ISNULL(A_USR02_ITEM.USR02_USTYP, '') = 'A', 'X', '') ZF_DELIVERY_WITH_DIALOG_USER, 
				LIKP_ERDAT,
				LIPS_ERDAT,
				LIKP_LFDAT,
				LIKP_BLDAT,
				LIKP_VKORG, -- Sale organization
				TVKOT_VTEXT,
				LIKP_LFART, -- Delivery type
				TVLKT_VTEXT,
				LIPS_PSTYV,
				TVAPT_VTEXT,
				LIKP_KUNNR, -- Sold to party
				A_KNA1_KUNNR.KNA1_NAME1 KNA1_NAME1_KUNNR,
				LIKP_KUNAG, -- Ship to party
				A_KNA1_KUNAG.KNA1_NAME1 KNA1_NAME1_KUNAG,
				LIPS_MATNR, -- Material
				MAKT_MAKTX,
				LIPS_MATKL, -- Material group
				T023T_WGBEZ,
				LIPS_VRKME,
				LIPS_LFIMG, -- Quantity
				LIPS_ARKTX,
				LIPS_VGBEL,
				LIPS_VGPOS

		INTO B18_05_IT_COPA_DELIVERY
		FROM A_LIKP
		INNER JOIN A_LIPS
		ON LIKP_VBELN = LIPS_VBELN

		-- Get user information of delivery header
		LEFT JOIN A_USR02 A_USR02_HEADER
		ON A_USR02_HEADER.USR02_BNAME = LIKP_ERNAM

		LEFT JOIN A_V_USERNAME A_V_USERNAME_HEADER
		ON A_V_USERNAME_HEADER.V_USERNAME_BNAME = LIKP_ERNAM

		LEFT JOIN A_DD07T A_DD07T_USTYP_HEADER
		ON A_DD07T_USTYP_HEADER.DD07T_DOMNAME = 'XUUSTYP' AND
		   A_DD07T_USTYP_HEADER.DD07T_DOMVALUE_L = A_USR02_HEADER.USR02_USTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get user information of delivery item
		LEFT JOIN A_USR02 A_USR02_ITEM
		ON A_USR02_ITEM.USR02_BNAME = LIPS_ERNAM

		LEFT JOIN A_V_USERNAME A_V_USERNAME_ITEM
		ON A_V_USERNAME_ITEM.V_USERNAME_BNAME = LIPS_ERNAM

		LEFT JOIN A_DD07T A_DD07T_USTYP_ITEM
		ON A_DD07T_USTYP_ITEM.DD07T_DOMNAME = 'XUUSTYP' AND
		   A_DD07T_USTYP_ITEM.DD07T_DOMVALUE_L = A_USR02_ITEM.USR02_USTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Sale organization description
		LEFT JOIN A_TVKOT
		ON TVKOT_SPRAS IN ('E', 'EN') AND
		   TVKOT_VKORG = LIKP_VKORG

		-- Delivery type description
		LEFT JOIN A_TVLKT
		ON TVLKT_SPRAS IN ('E', 'EN') AND
		   TVLKT_LFART = LIKP_LFART

		-- Ship to party
		LEFT JOIN A_KNA1 A_KNA1_KUNNR
		ON A_KNA1_KUNNR.KNA1_KUNNR = LIKP_KUNNR

		-- Sold to party
		LEFT JOIN A_KNA1 A_KNA1_KUNAG
		ON A_KNA1_KUNAG.KNA1_KUNNR = LIKP_KUNAG

		-- Delivery item type
		LEFT JOIN A_TVAPT
		ON TVAPT_SPRAS IN ('E', 'EN') AND
		   LIPS_PSTYV = TVAPT_PSTYV

		-- Material description
		LEFT JOIN A_MAKT
		ON MAKT_SPRAS IN ('E', 'EN') AND
		   MAKT_MATNR = LIPS_MATNR

		-- Material group description
		LEFT JOIN A_T023T
		ON T023T_SPRAS IN ('E', 'EN') AND
		   T023T_MATKL = LIPS_MATKL


		WHERE EXISTS(
			SELECT TOP 1 1
			FROM B18_04_IT_COPA_ACCOUNT_BASED
			WHERE ACDOCA_KDAUF = LIPS_VGBEL AND LIPS_VGPOS = ACDOCA_KDPOS
		)

	/*
		Step 7: Create a Billing documents cube for billing and dialog user analysis
	*/
        EXEC SP_REMOVE_TABLES 'B18_06_TT_TCURF'
        SELECT TCURF_FCURR,
               TCURF_TCURR,
               CONVERT(DATE,CAST(99999999-TCURF_GDATU AS NVARCHAR), 112) TCURF_GDATU,
               TCURF_FFACT,
               TCURF_TFACT
        INTO B18_06_TT_TCURF
        FROM A_TCURF
        WHERE TCURF_KURST = 'M' AND TCURF_GDATU < 90000000

		EXEC SP_REMOVE_TABLES 'B18_06_IT_COPA_BILLING'
		SELECT
			VBRK_MANDT,
			VBRK_VBELN,
			VBRP_POSNR,
			VBRK_FKART,
			TVFKT_VTEXT,
			VBRK_FKTYP,
			A_DD07T_FKTYP.DD07T_DDTEXT DD07T_DDTEXT_FKTYP,
			VBRK_VBTYP,
			A_DD07T_VBTYP.DD07T_DDTEXT DD07T_DDTEXT_VBTYP,
			VBRP_PSTYV,
			TVAPT_VTEXT,
			VBRK_BUKRS,
			T001_WAERS,
            T001_BUTXT,
			VBRK_VKORG,
			TVKOT_VTEXT,
			VBRK_ERDAT,
			VBRP_ERDAT,
			VBRK_FKDAT,
			VBRK_ERNAM,
			A_USR02_HEADER.USR02_USTYP USR02_USTYP_HEADER,
			A_V_USERNAME_HEADER.V_USERNAME_NAME_TEXT V_USERNAME_NAME_TEXT_HEADER,
			A_DD07T_USTYP_HEADER.DD07T_DDTEXT USTYP_DDTEXT_HEADER,
			VBRP_ERNAM,
			A_USR02_ITEM.USR02_USTYP USR02_USTYP_ITEM,
			A_V_USERNAME_ITEM.V_USERNAME_NAME_TEXT V_USERNAME_NAME_TEXT_ITEM,
			A_DD07T_USTYP_ITEM.DD07T_DDTEXT USTYP_DDTEXT_ITEM,
			IIF(ISNULL(A_USR02_HEADER.USR02_USTYP, '') = 'A' OR ISNULL(A_USR02_ITEM.USR02_USTYP, '') = 'A', 'X', '') ZF_BILLING_WITH_DIALOG_USER,
			VBRK_KUNAG,
			KNA1_NAME1,
			VBRP_MATNR,
			MAKT_MAKTX,
			VBRP_MATKL,
			T023T_WGBEZ,
			VBRP_ARKTX,
			VBRP_VRKME,
			VBRP_FKIMG,
			VBRK_WAERK,
			@CURRENCY AS CUSTOM_CURRENCY, -- Thuan update it
			(VBRP_NETWR)*ISNULL(TCURX_FACTOR,1) ZF_VBRP_NETWR_S, -- Item net value document currency
			((VBRP_NETWR)*ISNULL(TCURX_FACTOR,1))*VBRP_KURSK*ISNULL(B18_06_TT_TCURF.TCURF_TFACT,1)/ISNULL(B18_06_TT_TCURF.TCURF_FFACT,1) ZF_VBRP_NETWR_S_COC, -- Item net value company currency
			 ((VBRP_NETWR)*ISNULL(TCURX_FACTOR,1))* VBRP_KURSK * COALESCE(B18_06_TT_TCURF.TCURF_TFACT,1)/COALESCE(B18_06_TT_TCURF.TCURF_FFACT,1) -- Thuan updated
			* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) ZF_VBRP_NETWR_S_CUC -- Item net value in custom currency

		INTO B18_06_IT_COPA_BILLING
		FROM A_VBRK
		INNER JOIN A_VBRP
		ON VBRK_VBELN = VBRP_VBELN

		-- Get user information of billing header
		LEFT JOIN A_USR02 A_USR02_HEADER
		ON A_USR02_HEADER.USR02_BNAME = VBRK_ERNAM

		LEFT JOIN A_V_USERNAME A_V_USERNAME_HEADER
		ON A_V_USERNAME_HEADER.V_USERNAME_BNAME = VBRK_ERNAM

		LEFT JOIN A_DD07T A_DD07T_USTYP_HEADER
		ON A_DD07T_USTYP_HEADER.DD07T_DOMNAME = 'XUUSTYP' AND
		   A_DD07T_USTYP_HEADER.DD07T_DOMVALUE_L = A_USR02_HEADER.USR02_USTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get user information of billing item
		LEFT JOIN A_USR02 A_USR02_ITEM
		ON A_USR02_ITEM.USR02_BNAME = VBRP_ERNAM

		LEFT JOIN A_V_USERNAME A_V_USERNAME_ITEM
		ON A_V_USERNAME_ITEM.V_USERNAME_BNAME = VBRP_ERNAM

		LEFT JOIN A_DD07T A_DD07T_USTYP_ITEM
		ON A_DD07T_USTYP_ITEM.DD07T_DOMNAME = 'XUUSTYP' AND
		   A_DD07T_USTYP_ITEM.DD07T_DOMVALUE_L = A_USR02_ITEM.USR02_USTYP COLLATE SQL_Latin1_General_CP1_CS_AS


		-- Get sale organization text
		LEFT JOIN A_TVKOT
		ON TVKOT_SPRAS IN ('E', 'EN') AND
		   TVKOT_VKORG = VBRK_VKORG

		-- Get company inforamtion
		LEFT JOIN A_T001
		ON T001_BUKRS = VBRK_BUKRS

		-- Get billing type desc
		LEFT JOIN A_TVFKT
		ON  TVFKT_SPRAS IN ('E', 'EN')
		AND TVFKT_FKART = VBRK_FKART

		-- Get billing category text
		LEFT JOIN A_DD07T A_DD07T_FKTYP
		ON A_DD07T_FKTYP.DD07T_DOMNAME = 'FKTYP' AND
		   A_DD07T_FKTYP.DD07T_DOMVALUE_L = VBRK_FKTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get SD document category
		LEFT JOIN A_DD07T A_DD07T_VBTYP
		ON A_DD07T_VBTYP.DD07T_DOMNAME = 'VBTYP' AND
		   A_DD07T_VBTYP.DD07T_DOMVALUE_L = VBRK_VBTYP COLLATE SQL_Latin1_General_CP1_CS_AS

		-- Get billing item category
		LEFT JOIN A_TVAPT
		ON  TVAPT_SPRAS IN ('E', 'EN')
		AND VBRP_PSTYV = TVAPT_PSTYV

		-- Get customer information
		LEFT JOIN A_KNA1
		ON KNA1_KUNNR = VBRK_KUNAG

		-- Get material text
		LEFT JOIN A_MAKT
		ON MAKT_SPRAS IN ('E', 'EN') AND
		   MAKT_MATNR = VBRP_MATNR

		-- Get material group
		LEFT JOIN A_T023T
		ON T023T_SPRAS IN ('E', 'EN') AND
		   VBRP_MATKL = T023T_MATKL

        -- Get currency factor to exchange amount in document cc to company cc
        LEFT JOIN B18_06_TT_TCURF
        ON B18_06_TT_TCURF.TCURF_FCURR = VBRK_WAERK AND
           B18_06_TT_TCURF.TCURF_TCURR = T001_WAERS AND
           B18_06_TT_TCURF.TCURF_GDATU = (
               SELECT TOP 1 B18_06_TT_TCURF.TCURF_GDATU
               FROM B18_06_TT_TCURF
               WHERE B18_06_TT_TCURF.TCURF_FCURR = VBRK_WAERK AND 
                     B18_06_TT_TCURF.TCURF_TCURR = T001_WAERS AND
                     B18_06_TT_TCURF.TCURF_GDATU <= VBRK_FKDAT
                ORDER BY B18_06_TT_TCURF.TCURF_GDATU DESC
           )
            
	-- Add currency factor from company currency to USD

		LEFT JOIN B00_IT_TCURF TCURF_CUC
		ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
		AND TCURF_CUC.TCURF_TCURR  = @currency  
		AND TCURF_CUC.TCURF_GDATU = (
			SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
			FROM B00_IT_TCURF
			WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
					B00_IT_TCURF.TCURF_TCURR  = @currency  AND
					B00_IT_TCURF.TCURF_GDATU <= VBRK_FKDAT
			ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
			)
		-- Add exchange rate from company currency to USD
		LEFT JOIN B00_IT_TCURR TCURR_CUC
			ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
			AND TCURR_CUC.TCURR_TCURR  = @currency  
			AND TCURR_CUC.TCURR_GDATU = (
				SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
				FROM B00_IT_TCURR
				WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
						B00_IT_TCURR.TCURR_TCURR  = @currency  AND
						B00_IT_TCURR.TCURR_GDATU <= VBRK_FKDAT
				ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
				) 


		-- Get currency factor
		LEFT JOIN B00_TCURX
		ON TCURX_CURRKEY = VBRK_WAERK

		WHERE EXISTS(
			SELECT TOP 1 1
			FROM B18_04_IT_COPA_ACCOUNT_BASED
			WHERE ACDOCA_AWTYP = 'VBRK' AND ACDOCA_AWREF = VBRK_VBELN AND ACDOCA_AWITEM = VBRP_POSNR
		)

	/*
		Add a field to final cube to know the sign of amount when calculat Gross Profit, Net Sales
		The sign will be according to AM_COPA_GS_NS_COGS_MAPPING, 

	*/

		ALTER TABLE B18_04_IT_COPA_ACCOUNT_BASED ADD COPA_CALCULATE_SIGN INT
		UPDATE B18_04_IT_COPA_ACCOUNT_BASED
		SET COPA_CALCULATE_SIGN = AM_SIGN_MAPPING.COPA_LINE_SIGN
		FROM B18_04_IT_COPA_ACCOUNT_BASED
		INNER JOIN (
			SELECT DISTINCT COPA_RACCT_Hierarchy_L1, COPA_LINE_SIGN
			FROM AM_COPA_GS_NS_COGS_MAPPING
		) AS AM_SIGN_MAPPING
		ON B18_04_IT_COPA_ACCOUNT_BASED.COPA_RACCT_Hierarchy_L1 = AM_SIGN_MAPPING.COPA_RACCT_Hierarchy_L1

	
		/*Rename fields for Qlik*/
		EXEC sp_RENAME_FIELD 'B18_', 'B18_04_IT_COPA_ACCOUNT_BASED'
		EXEC sp_RENAME_FIELD 'B18_05_', 'B18_05_IT_COPA_DELIVERY'
		EXEC sp_RENAME_FIELD 'B18_06_', 'B18_06_IT_COPA_BILLING'
		-- Drop all temporary table
		-----EXEC SP_REMOVE_TABLES'%_TT_%'
		EXEC SP_DROPTABLE 'B18_01_TT_ACDOCA_LIMIT'
		EXEC SP_DROPTABLE 'B18_02_TT_COPA_ALL_TRANSACTIONS'
		EXEC SP_DROPTABLE 'B18_03_TT_COPA_WITH_LINE_SIGN'
		EXEC SP_DROPTABLE 'B18_06_TT_TCURF'

		/* log cube creation*/

		INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
		SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Cube completed','B18_04_IT_COPA_ACCOUNT_BASED',(SELECT COUNT(*) FROM B18_04_IT_COPA_ACCOUNT_BASED) 
        

		/* log end of procedure*/


		INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
		SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL
GO
