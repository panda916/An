USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[script_DC10_OPEN_POs_GR_INV]
  
WITH EXECUTE AS CALLER
AS

--DYNAMIC_SCRIPT_START
/* Initiate the log */ 
----Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END
 
--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL
 
 
/* Initialize parameters from globals table */
DECLARE
	 @currency nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')
	,@date1 nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date1')
	,@date2 nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'date2')
	,@downloaddate nvarchar(max)		= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'downloaddate')
	,@exchangeratetype nvarchar(max)	= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'exchangeratetype')
	,@language1 nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language1')
	,@language2 nvarchar(max)			= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'language2')
	,@year nvarchar(max)				= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'year')
	,@id nvarchar(max)					= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'id')
	,@LIMIT_RECORDS INT		= (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS')

EXEC SP_DROPTABLE 'DC10_IT_EKBE_EKPO_INFO'
SELECT A.B21_05_EKBE_EBELN,
	   A.B21_05_EKBE_EBELP,
	   A.B21_05_EKBE_ZEKKN,
	   A.B21_05_EKBE_VGABE,
	   A.B21_05_EKBE_GJAHR,
	   A.B21_05_EKBE_BELNR,
	   A.B21_05_EKPO_BUKRS,
	   A.B21_05_EKBE_BUDAT, 
	   A.B21_05_EKBE_WAERS,
	   A_T001.T001_WAERS,
	   B.B21_05_ZF_EKBE_WBRTR_S AS B21_05_ZF_EKBE_WRBTR_S,
	   B.B21_05_ZF_EKBE_WRBTR_S_CUC AS B21_05_ZF_EKBE_WBRTR_S_CUC_OLD,
	   A.B21_05_ZF_EKBE_WBRTR_S_CUC AS B21_05_ZF_EKBE_WBRTR_S_CUC_NEW,
	   COALESCE(A.B21_05_EKBE_WKURS,1)* COALESCE(TCURF_COC.TCURF_TFACT,1) / COALESCE(TCURF_COC.TCURF_FFACT,1) 
	   *COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) * COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1) AS ZF_NEW_EXCHANGE_RATE,
	    COALESCE(AM_EXCHNG.EXCHNG_RATIO,1) AS ZF_OLD_EXCHANGE_RATE
INTO DC10_IT_EKBE_EKPO_INFO
FROM (SELECT B21_05_EKBE_EBELN,
             B21_05_EKBE_EBELP,
			 B21_05_EKBE_ZEKKN,
			 B21_05_EKBE_VGABE,
			 B21_05_EKBE_GJAHR,
			 B21_05_EKBE_BELNR,
			 B21_05_EKPO_BUKRS,
			 MAX(B21_05_EKBE_WAERS) AS B21_05_EKBE_WAERS,
			 MAX(B21_05_EKBE_WKURS) AS B21_05_EKBE_WKURS,
			 MAX(B21_05_EKBE_SHKZG) AS B21_05_EKBE_SHKZG,
			 MAX(B21_05_EKBE_BUDAT) AS B21_05_EKBE_BUDAT,
			 SUM(B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WBRTR_S_CUC
      FROM B21_05_IT_EKBE_EKPO_INFO_NEW
	  GROUP BY B21_05_EKBE_EBELN,
             B21_05_EKBE_EBELP,
			 B21_05_EKBE_ZEKKN,
			 B21_05_EKBE_VGABE,
			 B21_05_EKBE_GJAHR,
			 B21_05_EKBE_BELNR,
			 B21_05_EKPO_BUKRS) A 
INNER JOIN (SELECT B21_05_EKBE_EBELN,
             B21_05_EKBE_EBELP,
			 B21_05_EKBE_ZEKKN,
			 B21_05_EKBE_VGABE,
			 B21_05_EKBE_GJAHR,
			 B21_05_EKBE_BELNR,
			 B21_05_EKPO_BUKRS,
			 MAX(B21_05_EKBE_BUDAT) AS B21_05_EKBE_BUDAT,
			 SUM(B21_05_ZF_EKBE_WRBTR_S) AS B21_05_ZF_EKBE_WBRTR_S,
			 SUM(B21_05_ZF_EKBE_WBRTR_S_CUC) AS B21_05_ZF_EKBE_WRBTR_S_CUC
		  FROM B21_05_IT_EKBE_EKPO_INFO
		  GROUP BY B21_05_EKBE_EBELN,
             B21_05_EKBE_EBELP,
			 B21_05_EKBE_ZEKKN,
			 B21_05_EKBE_VGABE,
			 B21_05_EKBE_GJAHR,
			 B21_05_EKBE_BELNR,
			 B21_05_EKPO_BUKRS) B
ON           A.B21_05_EKBE_EBELN = B.B21_05_EKBE_EBELN
AND          A.B21_05_EKBE_EBELP = B.B21_05_EKBE_EBELP
AND			 A.B21_05_EKBE_ZEKKN = B.B21_05_EKBE_ZEKKN
AND			 A.B21_05_EKBE_VGABE = B.B21_05_EKBE_VGABE
AND 		 A.B21_05_EKBE_GJAHR = B.B21_05_EKBE_GJAHR
AND 		 A.B21_05_EKBE_BELNR = B.B21_05_EKBE_BELNR 
AND          A.B21_05_EKPO_BUKRS = B.B21_05_EKPO_BUKRS
-- Add company code currency
		LEFT JOIN A_T001
		ON  A.B21_05_EKPO_BUKRS = A_T001.T001_BUKRS
			
-- Add currency factor from company currency to USD

LEFT JOIN B00_IT_TCURF TCURF_CUC
ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
AND TCURF_CUC.TCURF_TCURR  = @currency  
AND TCURF_CUC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = @currency  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B21_05_EKBE_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

-- Add exchange rate from company currency to USD
LEFT JOIN B00_IT_TCURR TCURR_CUC
	ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
	AND TCURR_CUC.TCURR_TCURR  = @currency  
	AND TCURR_CUC.TCURR_GDATU = (
		SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
		FROM B00_IT_TCURR
		WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
				B00_IT_TCURR.TCURR_TCURR  = @currency  AND
				B00_IT_TCURR.TCURR_GDATU <= A.B21_05_EKBE_BUDAT
		ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
		) 

-- Add currency factor from document currency to local currency

LEFT JOIN B00_IT_TCURF TCURF_COC
ON B21_05_EKBE_WAERS = TCURF_COC.TCURF_FCURR
AND TCURF_COC.TCURF_TCURR  = T001_WAERS  
AND TCURF_COC.TCURF_GDATU = (
	SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
	FROM B00_IT_TCURF
	WHERE A.B21_05_EKBE_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
			B00_IT_TCURF.TCURF_TCURR  = T001_WAERS  AND
			B00_IT_TCURF.TCURF_GDATU <= A.B21_05_EKBE_BUDAT
	ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
	)

-- Add currency conversion factors for company code currency
		LEFT JOIN B00_TCURX TCURX_CC 
		ON 
	       A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY 
-- Add currency conversion factor for document currency
		LEFT JOIN B00_TCURX TCURX_DOC
		ON 
		   A.B21_05_EKBE_WAERS = TCURX_DOC.TCURX_CURRKEY

-- Exchange rates for currency conversion: Document currency to custom currency
		LEFT JOIN AM_EXCHNG
		ON  AM_EXCHNG.EXCHNG_FROM = A.B21_05_EKBE_WAERS AND
		    AM_EXCHNG.EXCHNG_TO = (SELECT GLOBALS_VALUE FROM AM_GLOBALS WHERE GLOBALS_PARAMETER = 'currency')


EXEC SP_UNNAME_FIELD 'B21_05_','DC10_IT_EKBE_EKPO_INFO';
EXEC SP_RENAME_FIELD 'DC10_','DC10_IT_EKBE_EKPO_INFO'
GO
