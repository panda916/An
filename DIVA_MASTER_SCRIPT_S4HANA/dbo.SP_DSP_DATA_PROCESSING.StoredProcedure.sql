USE [DIVA_MASTER_SCRIPT_S4HANA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE     PROC [dbo].[SP_DSP_DATA_PROCESSING]
AS
BEGIN

	/*
		Step 1: Union all data to one table
	*/
		DECLARE @TABLE_NAME NVARCHAR(MAX) = ''
		DECLARE @SQLCMD_UNION_TYPE_N NVARCHAR(MAX) = CONCAT('SELECT *',CHAR(13),'INTO A_DSP_TYPE_N_RAW', CHAR(13), 'FROM ')
		DECLARE @SQLCMD_UNION_TYPE_M NVARCHAR(MAX) = CONCAT('SELECT *',CHAR(13),'INTO A_DSP_TYPE_M_RAW', CHAR(13), 'FROM ')
		DECLARE @SQLCMD_UNION_TYPE_A NVARCHAR(MAX) = CONCAT('SELECT *',CHAR(13),'INTO A_DSP_TYPE_A_RAW', CHAR(13), 'FROM ')
		DECLARE @SQLCMD_UNION_TYPE_Z NVARCHAR(MAX) = CONCAT('SELECT *',CHAR(13),'INTO A_DSP_TYPE_Z_RAW', CHAR(13), 'FROM ')
		DECLARE @SQLCMD_SELECT NVARCHAR(MAX) = CONCAT(CHAR(13),'SELECT * FROM ' )

		DECLARE TABLE_CURSOR CURSOR LOCAL FOR
				SELECT DISTINCT TABLE_NAME
				FROM INFORMATION_SCHEMA.TABLES
				WHERE TABLE_NAME LIKE 'PJR5_%'
				ORDER BY TABLE_NAME

		OPEN TABLE_CURSOR
		FETCH NEXT FROM TABLE_CURSOR INTO @TABLE_NAME
		WHILE @@FETCH_STATUS = 0 
		BEGIN
			SET @SQLCMD_UNION_TYPE_N = CONCAT(@SQLCMD_UNION_TYPE_N, @TABLE_NAME, CHAR(13), 'WHERE A = ''N''', CHAR(13), 'UNION ALL', @SQLCMD_SELECT)
			SET @SQLCMD_UNION_TYPE_M = CONCAT(@SQLCMD_UNION_TYPE_M, @TABLE_NAME, CHAR(13), 'WHERE A = ''M''', CHAR(13), 'UNION ALL', @SQLCMD_SELECT)
			SET @SQLCMD_UNION_TYPE_A = CONCAT(@SQLCMD_UNION_TYPE_A, @TABLE_NAME, CHAR(13), 'WHERE A = ''A''', CHAR(13), 'UNION ALL', @SQLCMD_SELECT)
			SET @SQLCMD_UNION_TYPE_Z = CONCAT(@SQLCMD_UNION_TYPE_Z, @TABLE_NAME, CHAR(13), 'WHERE A = ''Z''', CHAR(13), 'UNION ALL', @SQLCMD_SELECT)
		
			FETCH NEXT FROM TABLE_CURSOR INTO @TABLE_NAME
		END

		SET @SQLCMD_UNION_TYPE_N = LEFT(@SQLCMD_UNION_TYPE_N, LEN(@SQLCMD_UNION_TYPE_N) - LEN(' UNION ALL SELECT * FROM '))
		SET @SQLCMD_UNION_TYPE_M = LEFT(@SQLCMD_UNION_TYPE_M, LEN(@SQLCMD_UNION_TYPE_M) - LEN(' UNION ALL SELECT * FROM '))
		SET @SQLCMD_UNION_TYPE_A = LEFT(@SQLCMD_UNION_TYPE_A, LEN(@SQLCMD_UNION_TYPE_A) - LEN(' UNION ALL SELECT * FROM '))
		SET @SQLCMD_UNION_TYPE_Z = LEFT(@SQLCMD_UNION_TYPE_Z, LEN(@SQLCMD_UNION_TYPE_Z) - LEN(' UNION ALL SELECT * FROM '))

	
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_N_RAW'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_N

		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_M_RAW'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_M

		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_A_RAW'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_A

		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_Z_RAW'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_Z


	/*
		Step 2: Rename all columns base on AM_DSP_MAPPING table
	*/
		-- Step 2.1: Processing type N
		SET @SQLCMD_UNION_TYPE_N = 'SELECT '
		SELECT @SQLCMD_UNION_TYPE_N = CONCAT(@SQLCMD_UNION_TYPE_N, Original, ' [', NewName, '], ')
		FROM AM_DSP_MAPPING
		WHERE Type = 'N'
		--Remove last character
		SET @SQLCMD_UNION_TYPE_N = LEFT(@SQLCMD_UNION_TYPE_N, LEN(@SQLCMD_UNION_TYPE_N) - 1)
		SET @SQLCMD_UNION_TYPE_N = CONCAT(@SQLCMD_UNION_TYPE_N, CHAR(13), 'INTO A_DSP_TYPE_N_RENAMED', CHAR(13), 'FROM A_DSP_TYPE_N_RAW')
		RAISERROR(@SQLCMD_UNION_TYPE_N, 0 , 1)
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_N_RENAMED'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_N

		-- Step 2.2: Processing type M
		SET @SQLCMD_UNION_TYPE_M = 'SELECT '
		SELECT @SQLCMD_UNION_TYPE_M = CONCAT(@SQLCMD_UNION_TYPE_M, Original, ' [', NewName, '], ')
		FROM AM_DSP_MAPPING
		WHERE Type = 'M'
		
		--Remove last character
		SET @SQLCMD_UNION_TYPE_M = LEFT(@SQLCMD_UNION_TYPE_M, LEN(@SQLCMD_UNION_TYPE_M) - 1)
		SET @SQLCMD_UNION_TYPE_M = CONCAT(@SQLCMD_UNION_TYPE_M, CHAR(13), 'INTO A_DSP_TYPE_M_RENAMED', CHAR(13), 'FROM A_DSP_TYPE_M_RAW')
		RAISERROR(@SQLCMD_UNION_TYPE_M, 0 , 1)
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_M_RENAMED'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_M

		-- Step 2.3: Processing type A
		SET @SQLCMD_UNION_TYPE_A = 'SELECT '
		SELECT @SQLCMD_UNION_TYPE_A = CONCAT(@SQLCMD_UNION_TYPE_A, Original, ' [', NewName, '], ')
		FROM AM_DSP_MAPPING
		WHERE Type = 'A'
		
		--Remove last character
		SET @SQLCMD_UNION_TYPE_A = LEFT(@SQLCMD_UNION_TYPE_A, LEN(@SQLCMD_UNION_TYPE_A) - 1)
		SET @SQLCMD_UNION_TYPE_A = CONCAT(@SQLCMD_UNION_TYPE_A, CHAR(13), 'INTO A_DSP_TYPE_A_RENAMED', CHAR(13), 'FROM A_DSP_TYPE_A_RAW')
		RAISERROR(@SQLCMD_UNION_TYPE_A, 0 , 1)
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_A_RENAMED'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_A

		-- Step 2.4: Processing type Z
		SET @SQLCMD_UNION_TYPE_Z = 'SELECT '
		SELECT @SQLCMD_UNION_TYPE_Z = CONCAT(@SQLCMD_UNION_TYPE_Z, Original, ' [', NewName, '], ')
		FROM AM_DSP_MAPPING
		WHERE Type = 'Z'
		
		--Remove last character
		SET @SQLCMD_UNION_TYPE_Z = LEFT(@SQLCMD_UNION_TYPE_Z, LEN(@SQLCMD_UNION_TYPE_Z) - 1)
		SET @SQLCMD_UNION_TYPE_Z = CONCAT(@SQLCMD_UNION_TYPE_Z, CHAR(13), 'INTO A_DSP_TYPE_Z_RENAMED', CHAR(13), 'FROM A_DSP_TYPE_Z_RAW')
		RAISERROR(@SQLCMD_UNION_TYPE_Z, 0 , 1)
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_Z_RENAMED'
		EXEC sp_executesql @SQLCMD_UNION_TYPE_Z

	/*
		Step 3: Add more detail information to main cube
	*/
		EXEC SP_REMOVE_TABLES 'A_DSP_TYPE_N_RENAMED_WITH_DETAIL'
		SELECT 
				A_DSP_TYPE_N_RENAMED.*,
				A_T005T.T005T_LANDX50 COUNTRY_NAME,
				AM_COUNTRY_MAPPING.COUNTRY_MAPPING_DESC COUNTTRY_CODE_3DIGIT,
				ROW_NUMBER() OVER (ORDER BY  [Record Type], [Provider Key], [Client Key], [Report Start Date], [Report End Date], [Vendor/Retailer Name], Vendor_Key, Country_Key, [Sales Type Key], External_id, [UPC/Official Product Number], [ISRC/Official Track Number]) ROW_NR,
				A_DSP_TYPE_N_RENAMED.WPU*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [WPU CC],
				A_DSP_TYPE_N_RENAMED.[Wholesale Value]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [Wholesale Value CC],
				A_DSP_TYPE_N_RENAMED.[Net Invoice Price]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [Net Invoice Price CC],
				A_DSP_TYPE_N_RENAMED.[Net Invoice Value]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [Net Invoice Value CC],
				A_DSP_TYPE_N_RENAMED.[Retail Value]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [Retail Value CC],
				A_DSP_TYPE_N_RENAMED.[Charity Amount]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [Charity Amount CC],
				A_DSP_TYPE_N_RENAMED.[VAT/TAX]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [VAT/TAX CC],
				A_DSP_TYPE_N_RENAMED.[VAT/TAX Charity Amount]*ISNULL(AM_EXCHNG.EXCHNG_RATIO, 1) [VAT/TAX Charity Amount CC]

				
		INTO A_DSP_TYPE_N_RENAMED_WITH_DETAIL
		FROM A_DSP_TYPE_N_RENAMED

		--Add country name
		LEFT JOIN A_T005T
		ON A_DSP_TYPE_N_RENAMED.Country_Key = A_T005T.T005T_LAND1
		AND A_T005T.T005T_SPRAS IN ('EN', 'E')

		--Add country code 3 digit
		LEFT JOIN AM_COUNTRY_MAPPING
		ON AM_COUNTRY_MAPPING.COUNTRY_MAPPING_CODE = A_DSP_TYPE_N_RENAMED.Country_Key

		--Add exchange rate
		LEFT JOIN AM_EXCHNG
		ON A_DSP_TYPE_N_RENAMED.Country_Key = AM_EXCHNG.EXCHNG_FROM
		AND EXCHNG_TO = 'USD'

	/*
		Step 4: Flag dupplication in row.
	*/
		EXEC SP_REMOVE_TABLES 'TEMP_TYPE_N_DUPPLICATE_ROWS'
		DECLARE @SQLCMND_LIST_COL NVARCHAR(MAX) = ''
		DECLARE @SQLCMD_DUP NVARCHAR(MAX) = 'SELECT '
		SELECT @SQLCMND_LIST_COL = CONCAT(@SQLCMND_LIST_COL,'[', NewName, '], ')
		FROM AM_DSP_MAPPING
		WHERE Type = 'N'
		SET @SQLCMND_LIST_COL = LEFT(@SQLCMND_LIST_COL, LEN(@SQLCMND_LIST_COL) - 1)
		SET @SQLCMD_DUP = CONCAT(@SQLCMD_DUP,@SQLCMND_LIST_COL, ', COUNT(*) NR_ROW_DUP',CHAR(13),'INTO TEMP_TYPE_N_DUPPLICATE_ROWS', CHAR(13), 'FROM A_DSP_TYPE_N_RENAMED_WITH_DETAIL')
		SET @SQLCMD_DUP = CONCAT(@SQLCMD_DUP,CHAR(13), 'GROUP BY ', @SQLCMND_LIST_COL, CHAR(13), 'HAVING COUNT(*) > 1')
		RAISERROR(@SQLCMD_DUP, 0, 1)
		EXEC sp_executesql @SQLCMD_DUP

		ALTER TABLE A_DSP_TYPE_N_RENAMED_WITH_DETAIL ADD TYPE_N_DUPLICATION_FLAG NVARCHAR(1) DEFAULT '' WITH VALUES;
		SET @SQLCMND_LIST_COL = ''
		SELECT @SQLCMND_LIST_COL = CONCAT(@SQLCMND_LIST_COL,'ISNULL(A_DSP_TYPE_N_RENAMED_WITH_DETAIL.[', NewName, '], '''') = ISNULL(TEMP_TYPE_N_DUPPLICATE_ROWS.[',NewName,'], '''') AND ', CHAR(13))
		FROM AM_DSP_MAPPING
		WHERE Type = 'N'
		SET @SQLCMND_LIST_COL = LEFT(@SQLCMND_LIST_COL, LEN(@SQLCMND_LIST_COL) - 6)
		SET @SQLCMD_DUP = CONCAT('UPDATE A_DSP_TYPE_N_RENAMED_WITH_DETAIL', CHAR(13), 'SET TYPE_N_DUPLICATION_FLAG = ''X''')
		SET @SQLCMD_DUP = CONCAT(@SQLCMD_DUP, CHAR(13), 'WHERE EXISTS(',CHAR(13), 'SELECT TOP 1 1', CHAR(13), 'FROM TEMP_TYPE_N_DUPPLICATE_ROWS')
		SET @SQLCMD_DUP = CONCAT(@SQLCMD_DUP, CHAR(13), 'WHERE ', @SQLCMND_LIST_COL, ')')
		RAISERROR(@SQLCMD_DUP, 0, 1)
		EXEC sp_executesql @SQLCMD_DUP

	/*
		Step 5: Flag multiple WPU price.
	*/
		ALTER TABLE A_DSP_TYPE_N_RENAMED_WITH_DETAIL ADD HAS_MULTIPLE_WPU NVARCHAR(1) DEFAULT '' WITH VALUES;
		EXEC SP_REMOVE_TABLES 'TEMP_TYPE_N_HAS_MULTIPLE_WPU'
		SELECT Country_Key, [ISRC/Official Track Number], [Track Title]
		INTO TEMP_TYPE_N_HAS_MULTIPLE_WPU
		FROM A_DSP_TYPE_N_RENAMED_WITH_DETAIL
		GROUP BY Country_Key, [ISRC/Official Track Number], [Track Title]
		HAVING COUNT(*) > 1

		UPDATE A_DSP_TYPE_N_RENAMED_WITH_DETAIL
		SET HAS_MULTIPLE_WPU = 'X'
		WHERE EXISTS(
			SELECT TOP 1 1
			FROM TEMP_TYPE_N_HAS_MULTIPLE_WPU
			WHERE ISNULL(TEMP_TYPE_N_HAS_MULTIPLE_WPU.Country_Key, '') = ISNULL(A_DSP_TYPE_N_RENAMED_WITH_DETAIL.Country_Key, '') AND
			      ISNULL(TEMP_TYPE_N_HAS_MULTIPLE_WPU.[ISRC/Official Track Number], '') = ISNULL(A_DSP_TYPE_N_RENAMED_WITH_DETAIL.[ISRC/Official Track Number], '') AND
				  ISNULL(TEMP_TYPE_N_HAS_MULTIPLE_WPU.[Track Title], '') = ISNULL(A_DSP_TYPE_N_RENAMED_WITH_DETAIL.[Track Title], '')
		)



	/*
		Step 6: Flag product has multiple WPU
	*/
		ALTER TABLE A_DSP_TYPE_N_RENAMED_WITH_DETAIL ADD [Product type desc] NVARCHAR(100) DEFAULT 'Album' WITH VALUES;
		UPDATE A_DSP_TYPE_N_RENAMED_WITH_DETAIL
		SET [Product type desc] = 'Song'
		WHERE ISNUMERIC(LEFT([ISRC/Official Track Number], 4)) = 1 AND [Product Type Key] = '11'

		UPDATE A_DSP_TYPE_N_RENAMED_WITH_DETAIL
		SET [Product type desc] = 'FTMD'
		WHERE ISNUMERIC(LEFT([ISRC/Official Track Number], 4)) = 0 AND [Product Type Key] = '11'
END
GO
