USE [DIVA_ASAP_TEST_DATA]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[A_004A_UPDATE_MANDANT_VALUE_EXE]
  WITH EXEC AS CALLER
  AS

/* Initialize parameters from globals table */

     DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)


/*Test mode*/

SET ROWCOUNT @LIMIT_RECORDS


/* Initiate the log */  
--Create database log table if it does not exist
IF OBJECT_ID('LOG_SP_EXECUTION', 'U') IS NULL BEGIN CREATE TABLE [DBO].[LOG_SP_EXECUTION] ([DATABASE] NVARCHAR(MAX) NULL,[OBJECT] NVARCHAR(MAX) NULL,[OBJECT_TYPE] NVARCHAR(MAX) NULL,[USER] NVARCHAR(MAX) NULL,[DATE] DATE NULL,[TIME] TIME NULL,[DESCRIPTION] NVARCHAR(MAX) NULL,[TABLE] NVARCHAR(MAX),[ROWS] INT) END

--Log start of procedure
INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(DATE,GETDATE()),CONVERT(TIME,GETDATE()),'Procedure started',NULL,NULL


/*
	Step 1/ For each mandant field in each table, ensure that it is as expected
*/

  DECLARE @TableName NVARCHAR(MAX) = ''
  DECLARE @MandtName NVARCHAR(MAX) = ''
  DECLARE @MANDT_VALUE NVARCHAR(MAX) = ''
  DECLARE @SQLCMD NVARCHAR(MAX) = ''
  SELECT TOP 1 @MANDT_VALUE = T001_MANDT FROM A_T001


  SET ROWCOUNT 0
  DECLARE c CURSOR FOR
      SELECT so.name, CONCAT(TABNAME,'_',FIELDNAME)
      FROM sys.objects so
	  INNER JOIN A_DD03L
	  ON so.name = CONCAT('A_', TABNAME)
      WHERE so.name NOT LIKE '[_]%' AND so.name NOT LIKE 'LOG_%' AND so.type = 'U' AND so.name LIKE 'A_%' AND so.name NOT LIKE 'AM_%'
	  AND A_DD03L.ROLLNAME = 'MANDT'
	  AND name IN (
			'A_EKBE',
			'A_EKKN',
			'A_EKPO',
			'A_EKKO'

	  )
      ORDER BY so.name
    OPEN c
    FETCH NEXT FROM c INTO @TableName, @MandtName

    WHILE @@Fetch_Status = 0
    BEGIN
      BEGIN TRANSACTION
		
		IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS AS A WHERE A.COLUMN_NAME = @MandtName) = 0 
			BEGIN
				SET @SQLCMD = CONCAT('ALTER TABLE ', @TableName, ' ADD ', @MandtName, ' NVARCHAR(3) DEFAULT ''',@MANDT_VALUE,''' WITH VALUES;')
			END
		ELSE
			BEGIN
				SET @SQLCMD = CONCAT('UPDATE ', @TableName, ' SET ', @MandtName, ' = ''', @MANDT_VALUE, ''' WHERE ', @MandtName, ' IS NULL OR ', @MandtName, ' = ''''')
			END

		RAISERROR(@SQLCMD, 0 , 1)
		EXEC sp_executesql @SQLCMD
		

			
	
      COMMIT TRANSACTION
    FETCH NEXT FROM c INTO @TableName, @MandtName
    END
      CLOSE c
  DEALLOCATE c


/* log end of procedure*/


INSERT INTO [DBO].[LOG_SP_EXECUTION] ([DATABASE],[OBJECT],[OBJECT_TYPE],[USER],[DATE],[TIME],[DESCRIPTION],[TABLE],[ROWS])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL





GO
