USE [DIVA_SAP_USAGE_S4]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE        PROCEDURE [dbo].[script_C02_INV_GR_VERSUS_PO]
WITH EXECUTE AS CALLER
AS


--DYNAMIC_SCRIPT_START

   DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)



/*Change history comments*/

/*
	Title			:	C02: INV Quantity and price versus GR qunatity and PO price
	  
	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date		    | Who |	Description
	14/09/2022        DAT   First version for Sony ECC
	06/10/2022		  KHOA	Fix Dat'code
*/
--Step 1: calculate percentage difference of GR vs PO (amount and quantity) 
EXEC SP_REMOVE_TABLES 'C02_01_TT_GR_PO'
SELECT *,
		100*(B.B09_09_ZF_EKBE_DMBTR_GR_S_CUC-A.B09_ZF_EKPO_NETWR_CUC)/NULLIF(A.B09_ZF_EKPO_NETWR_CUC,0) AS ZF_PERCENTAGE_GR_PO_AMOUNT,
		100*(B.B09_09_ZF_EKBE_MENGE_GR_S-A.B09_EKPO_MENGE)/NULLIF(A.B09_EKPO_MENGE,0) AS ZF_PERCENTAGE_GR_PO_QUANTITY,
		B.B09_09_ZF_EKBE_DMBTR_GR_S_CUC-A.B09_ZF_EKPO_NETWR_CUC AS ZF_GR_EXCEED_PO_AMOUNT
INTO C02_01_TT_GR_PO
FROM B09_13_IT_PTP_POS A
	INNER JOIN B09_09_IT_PO_HIST_TOTALS B
		ON A.B09_EKKO_EBELN = B.B09_09_EKBE_EBELN AND A.B09_EKPO_EBELP = B.B09_09_EKBE_EBELP
WHERE B.B09_09_ZF_EKBE_VGABE_IS_A_GR = 'X' 

--Step 2: calculate percentage difference of Invoice vs PO (amount and quantity) 

EXEC SP_REMOVE_TABLES 'C02_02_TT_INV_PO'

SELECT *,
	100*(B.B09_09_ZF_EKBE_DMBTR_INV_S_CUC-A.B09_ZF_EKPO_NETWR_CUC)/NULLIF(A.B09_ZF_EKPO_NETWR_CUC,0) AS ZF_PERCENTAGE_INV_PO_AMOUNT,
	100*(B.B09_09_ZF_EKBE_MENGE_INV_S-A.B09_EKPO_MENGE)/NULLIF(A.B09_EKPO_MENGE,0) AS ZF_PERCENTAGE_INV_PO_QUANTITY,
	B.B09_09_ZF_EKBE_DMBTR_INV_S_CUC-A.B09_ZF_EKPO_NETWR_CUC AS ZF_INV_EXCEED_PO_AMOUNT
INTO C02_02_TT_INV_PO
FROM B09_13_IT_PTP_POS A
	INNER JOIN B09_09_IT_PO_HIST_TOTALS B
		ON A.B09_EKKO_EBELN = B.B09_09_EKBE_EBELN AND A.B09_EKPO_EBELP = B.B09_09_EKBE_EBELP
WHERE B.B09_09_ZF_EKBE_VGABE_IS_AN_INV = 'X' 


--Step 3: Filter GR that have percentage difference of amount more than 10%

EXEC SP_DROPTABLE 'C02_03_TT_GR_MORE_THAN_PO_10'

SELECT DISTINCT 
	B09_EKKO_EBELN,
	B09_EKPO_EBELP,
	B09_EKPO_MENGE,
	B09_09_ZF_GR_T001_WAERS,
	B09_09_ZF_EKBE_DMBTR_GR_S,
	B09_09_ZF_EKBE_DMBTR_GR_S_CUC,
	B09_09_ZF_EKBE_MENGE_GR_S,
	ZF_GR_EXCEED_PO_AMOUNT
INTO C02_03_TT_GR_MORE_THAN_PO_10
FROM C02_01_TT_GR_PO
WHERE ZF_PERCENTAGE_GR_PO_AMOUNT > 10 

--Step 4: Filter Invoice that have percentage difference of amount  more than 10%

EXEC SP_DROPTABLE 'C02_04_TT_INV_MORE_THAN_PO_10'

SELECT DISTINCT 	
	B09_EKKO_EBELN,
	B09_EKPO_EBELP,
	B09_EKPO_MENGE,
	B09_09_ZF_INV_T001_WAERS,
	B09_09_ZF_EKBE_DMBTR_INV_S,
	B09_09_ZF_EKBE_DMBTR_INV_S_CUC,
	B09_09_ZF_EKBE_MENGE_INV_S,
	ZF_INV_EXCEED_PO_AMOUNT
INTO C02_04_TT_INV_MORE_THAN_PO_10
FROM C02_02_TT_INV_PO
WHERE ZF_PERCENTAGE_INV_PO_AMOUNT > 10

-- Step 5 / Get all records in PO cube when GR that have percentage difference of amount more than 10%

EXEC SP_DROPTABLE 'C02_05_XT_GR_PO'
SELECT DISTINCT 
	A.*,
	B.B09_09_ZF_EKBE_DMBTR_GR_S,
	B.B09_09_ZF_EKBE_DMBTR_GR_S_CUC,
	B.B09_09_ZF_EKBE_MENGE_GR_S,
	B.B09_09_ZF_GR_T001_WAERS,
	ZF_GR_EXCEED_PO_AMOUNT
INTO C02_05_XT_GR_PO
FROM B09_13_IT_PTP_POS AS A
INNER JOIN C02_03_TT_GR_MORE_THAN_PO_10 AS B 
	ON A.B09_EKKO_EBELN = B.B09_EKKO_EBELN AND A.B09_EKPO_EBELP = B.B09_EKPO_EBELP
 


 
-- Step 6 / Get all records in PO cube when INV that have percentage difference of amount or quantity more than 10%

EXEC SP_DROPTABLE 'C02_06_XT_INV_PO'
SELECT DISTINCT 
	A.*,
	B.B09_09_ZF_EKBE_DMBTR_INV_S,
	B.B09_09_ZF_EKBE_DMBTR_INV_S_CUC,
	B.B09_09_ZF_EKBE_MENGE_INV_S,
	B.B09_09_ZF_INV_T001_WAERS,
	ZF_INV_EXCEED_PO_AMOUNT
INTO C02_06_XT_INV_PO
FROM B09_13_IT_PTP_POS AS A
INNER JOIN C02_04_TT_INV_MORE_THAN_PO_10 AS B 
	ON A.B09_EKKO_EBELN = B.B09_EKKO_EBELN AND A.B09_EKPO_EBELP = B.B09_EKPO_EBELP

--Add the details for GR, and Invoice 


EXEC SP_DROPTABLE C02_07_TT_PO_HIS_DETAIL

SELECT A_EKBE.*
		,CASE WHEN EKBE_VGABE IN ('2', '3', '4') THEN (CASE WHEN (EKBE_SHKZG = 'S') THEN A_EKBE.EKBE_MENGE ELSE A_EKBE.EKBE_MENGE * -1 END) 
			END	AS ZF_EKBE_MENGE_INV_S,
				
		CASE WHEN EKBE_VGABE IN ('2', '3', '4') THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END)
			* COALESCE(TCURX_CC.TCURX_Factor,1) ) END	 	AS ZF_EKBE_DMBTR_INV_S,
					   			 		  
		CASE WHEN EKBE_VGABE IN ('2', '3', '4') THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			* COALESCE(TCURX_CC.TCURX_Factor,1)
			* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) 
			* COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) END	
			AS ZF_EKBE_DMBTR_INV_S_CUC, 
		CASE WHEN EKBE_VGABE IN ('2', '3', '4') 
			THEN CONVERT(money,EKBE_WRBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			*  COALESCE(TCURX_DOC.TCURX_Factor,1) ) 
			END   AS ZF_EKBE_WRBTR_INV_S,
		CASE WHEN EKBE_VGABE IN ('2', '3', '4') 
			THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			* COALESCE(TCURX_CC.TCURX_Factor,1)
			* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) 
			* COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) END	
			AS ZF_EKBE_WRBTR_INV_S_CUC,
		CASE WHEN EKBE_VGABE = '1' THEN (CASE WHEN (EKBE_SHKZG = 'S') THEN A_EKBE.EKBE_MENGE ELSE A_EKBE.EKBE_MENGE * -1 END) 
			END	AS ZF_EKBE_MENGE_GR_S,
		CASE WHEN EKBE_VGABE = '1' 
			THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
							* COALESCE(TCURX_CC.TCURX_Factor,1) ) 
			END	 AS ZF_EKBE_DMBTR_GR_S,
		CASE WHEN EKBE_VGABE = '1' 
			THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			* COALESCE(TCURX_CC.TCURX_Factor,1)
			* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) 
			* COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) END		AS ZF_EKBE_DMBTR_GR_S_CUC, -- to change
		CASE WHEN EKBE_VGABE = '1' 
			THEN CONVERT(money,EKBE_WRBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			    * COALESCE(TCURX_DOC.TCURX_Factor,1) )
				END	AS ZF_EKBE_WRBTR_GR_S,
		CASE WHEN EKBE_VGABE = '1' 
			THEN CONVERT(money,EKBE_DMBTR * (CASE WHEN (EKBE_SHKZG = 'S') THEN 1 ELSE -1 END) 
			* COALESCE(TCURX_CC.TCURX_Factor,1)
			* COALESCE(CAST(TCURR_CUC.TCURR_UKURS AS FLOAT),1) 
			* COALESCE(TCURF_CUC.TCURF_TFACT,1) / COALESCE(TCURF_CUC.TCURF_FFACT,1)) END AS ZF_EKBE_WRBTR_GR_S_CUC -- to change
INTO C02_07_TT_PO_HIS_DETAIL
FROM A_EKBE

	-- Add the company code
	LEFT JOIN A_EKPO
	ON A_EKPO.EKPO_EBELN = A_EKBE.EKBE_EBELN AND
	   A_EKPO.EKPO_EBELP = A_EKBE.EKBE_EBELP

	--Add the house currency
	LEFT JOIN A_T001
	ON A_EKPO.EKPO_BUKRS=A_T001.T001_BUKRS

	-- Add currency factor for house currency
	LEFT JOIN B00_TCURX TCURX_CC 
	ON 
	   A_T001.T001_WAERS = TCURX_CC.TCURX_CURRKEY   

	-- Add currency factor for document currency
	LEFT JOIN B00_TCURX TCURX_DOC 
	ON 
	   A_EKBE.EKBE_WAERS = TCURX_DOC.TCURX_CURRKEY   
	

	-- Add currency factor from company currency to USD
	LEFT JOIN B00_IT_TCURF TCURF_CUC
	ON A_T001.T001_WAERS = TCURF_CUC.TCURF_FCURR
	AND TCURF_CUC.TCURF_TCURR  = @currency  
	AND TCURF_CUC.TCURF_GDATU = (
		SELECT TOP 1 B00_IT_TCURF.TCURF_GDATU
		FROM B00_IT_TCURF
		WHERE A_T001.T001_WAERS = B00_IT_TCURF.TCURF_FCURR AND 
				B00_IT_TCURF.TCURF_TCURR  = @currency  AND
				B00_IT_TCURF.TCURF_GDATU <= EKBE_BUDAT
		ORDER BY B00_IT_TCURF.TCURF_GDATU DESC
		)
	-- Add exchange rate from company currency to USD
	LEFT JOIN B00_IT_TCURR TCURR_CUC
		ON A_T001.T001_WAERS = TCURR_CUC.TCURR_FCURR
		AND TCURR_CUC.TCURR_TCURR  = @currency  
		AND TCURR_CUC.TCURR_GDATU = (
			SELECT TOP 1 B00_IT_TCURR.TCURR_GDATU
			FROM B00_IT_TCURR
			WHERE A_T001.T001_WAERS = B00_IT_TCURR.TCURR_FCURR AND 
					B00_IT_TCURR.TCURR_TCURR  = @currency  AND
					B00_IT_TCURR.TCURR_GDATU <= EKBE_BUDAT
			ORDER BY B00_IT_TCURR.TCURR_GDATU DESC
			)
   -- Add information from the scope table concerning the business domain   
	INNER JOIN AM_SCOPE                                         
		ON   EKPO_BUKRS = AM_SCOPE.SCOPE_CMPNY_CODE
	


--Get the good receipt details
EXEC SP_DROPTABLE 'C02_08_XT_GR_RELATED'
SELECT *
INTO C02_08_XT_GR_RELATED
FROM C02_07_TT_PO_HIS_DETAIL
WHERE EKBE_VGABE=1 AND EXISTS
(
	SELECT TOP 1 1
	FROM C02_03_TT_GR_MORE_THAN_PO_10
	WHERE B09_EKKO_EBELN=EKBE_EBELN AND B09_EKPO_EBELP=EKBE_EBELP
)

--Get the invoice detail
EXEC SP_DROPTABLE 'C02_09_XT_INV_RELATED'

SELECT *
INTO C02_09_XT_INV_RELATED
FROM C02_07_TT_PO_HIS_DETAIL
WHERE EKBE_VGABE IN (2,3,4) AND EXISTS
(
	SELECT TOP 1 1
	FROM C02_04_TT_INV_MORE_THAN_PO_10
	WHERE B09_EKKO_EBELN=EKBE_EBELN AND B09_EKPO_EBELP=EKBE_EBELP
)




--Remove temporary table
EXEC SP_DROPTABLE 'C02_04_TT_INV_MORE_THAN_PO_10'
EXEC SP_DROPTABLE 'C02_03_TT_GR_MORE_THAN_PO_10'
EXEC SP_REMOVE_TABLES 'C02_02_TT_INV_PO'
EXEC SP_REMOVE_TABLES 'C02_01_TT_GR_PO'

EXEC SP_UNNAME_FIELD 'B09_09_', 'C02_06_XT_INV_PO'
EXEC SP_UNNAME_FIELD 'B09_', 'C02_06_XT_INV_PO'
EXEC SP_UNNAME_FIELD 'B09_09_', 'C02_05_XT_GR_PO'
EXEC SP_UNNAME_FIELD 'B09_', 'C02_05_XT_GR_PO'

GO
