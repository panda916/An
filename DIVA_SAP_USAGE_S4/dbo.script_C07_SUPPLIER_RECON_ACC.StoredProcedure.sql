USE [DIVA_SAP_USAGE_S4]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE      PROCEDURE [dbo].[script_C07_SUPPLIER_RECON_ACC]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
BEGIN

/*Change history comments*/


/*
	Title			:	C07: Supplier master have all been mapped to a reconciliation account
	  
	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date		    | Who |	Description
	23/09/2022        DAT   First version for Sony ECC
*/

--Step 1/Create table for supplier master where record dont delete and dont have reconciliation account
     DECLARE  
                      @CURRENCY NVARCHAR(MAX)                 = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
                     ,@DATE1 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
                     ,@DATE2 NVARCHAR(MAX)                           = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
                     ,@DOWNLOADDATE NVARCHAR(MAX)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
                     ,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
                     ,@EXCHANGERATETYPE NVARCHAR(MAX)  = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
                     ,@LANGUAGE1 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
                     ,@LANGUAGE2 NVARCHAR(MAX)                = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
                     ,@YEAR NVARCHAR(MAX)                     = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
                     ,@ID NVARCHAR(MAX)                       = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
                     ,@LIMIT_RECORDS INT                    = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)
					 ,@ZV_SAME_QUARTER_BY_BLDAT NVARCHAR(MAX) = ISNULL((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'ZV_SAME_QUARTER_BY_BLDAT'), '')

--Step 1/ Identify suppliers, for which there is no reconciliation account filled in
EXEC SP_REMOVE_TABLES 'C07_%'

EXEC SP_DROPTABLE 'C07_01_XT_SUP_NO_RECON_ACC'

SELECT 
	BP01_01_IT_SUPP.*
	,BP05A_01_ZF_REGUH_RWBTR
	,BP05A_01_ZF_REGUH_RBETR_CUC
	,BP05A_01_ZF_REGUH_RBETR_COC
INTO C07_01_XT_SUP_NO_RECON_ACC
FROM BP01_01_IT_SUPP
LEFT JOIN BP05A_IT_01_REGUH
ON BP05A_01_REGUH_LIFNR = BP01_01_IT_SUPP.BP01_01_LFA1_LIFNR
WHERE BP01_01_LFB1_AKONT = '' AND BP01_01_LFB1_LOEVM = '' AND BP01_01_LFA1_LOEVM = ''

--Khoi updates
--Step 2 Get all the total value of transactions relate to supplier where there is no reconciliation account filled in
EXEC SP_DROPTABLE 'C07_02_XT_TOTAL_TRANSACTION_VALUE_SUP_NO_RECON_ACC'

SELECT DISTINCT 
	BP01_01_LFB1_LIFNR,
	BP01_01_LFA1_NAME1,
	BP01_01_LFB1_BUKRS,
	BP01_01_T001_BUTXT,
	ZF_SUM_EKPO_NETWR_CUC,
	ZF_SUM_MSEG_DMBTR_S,
	ZF_SUM_MSEG_DMBTR_S_CUC,
	ZF_SUM_RSEG_WRBTR_S_CUC,
	ZF_SUM_REGUH_RBETR_CUC,
	ZF_SUM_ACDOCA_HSL_S,
	ZF_SUM_ACDOCA_HSL_DB,
	ZF_SUM_ACDOCA_HSL_CR,    
	ZF_SUM_ACDOCA_HSL_S_CUC,
	ZF_SUM_ACDOCA_HSL_DB_CUC,
	ZF_SUM_ACDOCA_HSL_CR_CUC
INTO C07_02_XT_TOTAL_TRANSACTION_VALUE_SUP_NO_RECON_ACC
FROM C07_01_XT_SUP_NO_RECON_ACC
LEFT JOIN
--Get the purchase order
	(
		SELECT 
			B09_EKPO_BUKRS,
			B09_EKKO_LIFNR,
			SUM(B09_ZF_EKPO_NETWR_CUC) AS ZF_SUM_EKPO_NETWR_CUC
		FROM B09_13_IT_PTP_POS
		GROUP BY B09_EKPO_BUKRS,B09_EKKO_LIFNR
	) AS A ON
	B09_EKPO_BUKRS=BP01_01_LFB1_BUKRS AND 
	B09_EKKO_LIFNR=BP01_01_LFB1_LIFNR
--Get the good receipt
LEFT JOIN 
	(
		SELECT 
			BP03_01_MSEG_BUKRS,
			BP03_01_MSEG_LIFNR,
			SUM(BP03_01_ZF_MSEG_DMBTR_SIGNED) AS ZF_SUM_MSEG_DMBTR_S,
			SUM(BP03_01_ZF_MSEG_DMBTR_SIGNED_CUC) AS ZF_SUM_MSEG_DMBTR_S_CUC
		FROM BP03_01_IT_GR
		GROUP BY BP03_01_MSEG_BUKRS,BP03_01_MSEG_LIFNR
	) AS B ON
	BP03_01_MSEG_BUKRS=BP01_01_LFB1_BUKRS AND 
	BP03_01_MSEG_LIFNR=BP01_01_LFB1_LIFNR
--Get the incoming invoice 
LEFT JOIN 
	(
		SELECT
			BP04A_01_RBKP_BUKRS,
			BP04A_01_LFA1_LIFNR,
			SUM(BP04A_01_ZF_RSEG_WRBTR_S_CUC) AS ZF_SUM_RSEG_WRBTR_S_CUC
		FROM BP04A_01_IT_INVOICE
		GROUP BY BP04A_01_RBKP_BUKRS,BP04A_01_LFA1_LIFNR
	) AS C ON 
	BP04A_01_RBKP_BUKRS=BP01_01_LFB1_BUKRS AND 
	BP04A_01_LFA1_LIFNR=BP01_01_LFB1_LIFNR
--Get the payment 
LEFT JOIN 
	(
		SELECT 
			BP05A_01_REGUH_LIFNR,
			BP05A_01_REGUH_ZBUKR,
			SUM(BP05A_01_ZF_REGUH_RBETR_CUC) AS ZF_SUM_REGUH_RBETR_CUC
		FROM BP05A_IT_01_REGUH
		GROUP BY BP05A_01_REGUH_ZBUKR,BP05A_01_REGUH_LIFNR
	) AS D ON
	BP05A_01_REGUH_ZBUKR=BP04A_01_RBKP_BUKRS AND
	BP05A_01_REGUH_LIFNR=BP04A_01_LFA1_LIFNR
--Get the relate JEs
LEFT JOIN 
	(
		SELECT 
			B04_GL_ACDOCA_LIFNR,
			B04_GL_ACDOCA_RBUKRS,
			SUM(B04_GL_ZF_ACDOCA_HSL_S) AS ZF_SUM_ACDOCA_HSL_S,
		    SUM(B04_GL_ZF_ACDOCA_HSL_DB) AS ZF_SUM_ACDOCA_HSL_DB,
		    SUM(B04_GL_ZF_ACDOCA_HSL_CR) AS ZF_SUM_ACDOCA_HSL_CR,    
			SUM(B04_GL_ZF_ACDOCA_HSL_S_CUC) AS ZF_SUM_ACDOCA_HSL_S_CUC,
		    SUM(IIF(B04_GL_ACDOCA_DRCRK='S',B04_GL_ZF_ACDOCA_HSL_S_CUC,0)) AS ZF_SUM_ACDOCA_HSL_DB_CUC,
		    SUM(IIF(B04_GL_ACDOCA_DRCRK='H',B04_GL_ZF_ACDOCA_HSL_S_CUC,0)) AS ZF_SUM_ACDOCA_HSL_CR_CUC
		FROM B04_08_IT_FIN_GL
		WHERE LEN(B04_GL_ACDOCA_LIFNR) >0
		GROUP BY B04_GL_ACDOCA_RBUKRS,B04_GL_ACDOCA_LIFNR
	) AS E ON
	B04_GL_ACDOCA_RBUKRS=BP04A_01_RBKP_BUKRS AND
	B04_GL_ACDOCA_LIFNR=BP04A_01_LFA1_LIFNR

--/*Drop temporary tables*/
EXEC SP_UNNAME_FIELD 'BP01_01_', 'C07_01_XT_SUP_NO_RECON_ACC'
EXEC SP_UNNAME_FIELD 'BP01_01_', 'C07_02_XT_TOTAL_TRANSACTION_VALUE_SUP_NO_RECON_ACC'
EXEC SP_UNNAME_FIELD 'BP05A_01_', 'C07_01_XT_SUP_NO_RECON_ACC'
EXEC SP_UNNAME_FIELD 'BP05A_01_','C07_02_XT_TOTAL_TRANSACTION_VALUE_SUP_NO_RECON_ACC'

END

GO
