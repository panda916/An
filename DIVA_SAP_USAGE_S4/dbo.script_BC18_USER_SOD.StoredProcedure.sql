USE [DIVA_SAP_USAGE_S4]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[script_BC18_USER_SOD]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START
-- Step 1: Check if the user is active/ valid, etc. (Only select users who have been active since 2018 upwards)

	SELECT DISTINCT USR02_BNAME 
	INTO B22_00_TT_USR02_BNAME_ACTIVE 
	FROM A_USR02
	WHERE (USR02_USTYP LIKE 'A%') 

-- Step 2: Obtain the profiles that the user has access to
	SELECT DISTINCT
		   B22_00_TT_USR02_BNAME_ACTIVE.USR02_BNAME,
		   A_UST04.UST04_PROFILE
	INTO B22_01_TT_UST04_BNAME_PROFN
	FROM B22_00_TT_USR02_BNAME_ACTIVE  -- Get profile from UST04 table
	LEFT JOIN A_UST04 ON B22_00_TT_USR02_BNAME_ACTIVE.USR02_BNAME = A_UST04.UST04_BNAME

-- Step 3B: Create UST10S and UST10C table with valid Auth Objct

	SELECT * INTO B22_04B_TT_UST10S_VALID_AUTH FROM A_UST10S

-- Step 4A: If there are composite profiles, denormalize into the full list (only for those that are active)
	SELECT DISTINCT A.UST10C_PROFN, A.UST10C_SUBPROF 
	INTO B22_05_TT_UST10_PROFN_NORMALIZED
	FROM A_UST10C A

	UNION

	SELECT DISTINCT A.UST10C_PROFN, A.UST10C_PROFN
	FROM A_UST10C A

	WHILE EXISTS(SELECT A.UST10C_PROFN
					FROM B22_05_TT_UST10_PROFN_NORMALIZED A
					INNER JOIN A_UST10C B ON A.UST10C_SUBPROF = B.UST10C_PROFN AND UST10C_AKTPS LIKE 'A%'
					WHERE NOT EXISTS(SELECT * FROM B22_05_TT_UST10_PROFN_NORMALIZED C 
												WHERE A.UST10C_PROFN = C.UST10C_PROFN 
												AND C.UST10C_SUBPROF = B.UST10C_SUBPROF))
	BEGIN
		INSERT INTO B22_05_TT_UST10_PROFN_NORMALIZED
		SELECT DISTINCT A.UST10C_PROFN, B.UST10C_SUBPROF 
		FROM B22_05_TT_UST10_PROFN_NORMALIZED A
		INNER JOIN A_UST10C B ON A.UST10C_SUBPROF = B.UST10C_PROFN AND UST10C_AKTPS LIKE 'A%'
		WHERE NOT EXISTS(SELECT * FROM B22_05_TT_UST10_PROFN_NORMALIZED C 
									WHERE A.UST10C_PROFN = C.UST10C_PROFN 
									AND C.UST10C_SUBPROF = B.UST10C_SUBPROF)
	END
	
	-- Union both normalized profile list with existing single profile list in UST10S
	SELECT * 
	INTO B22_06A_TT_UST10_PROFN_FULL_LIST
	FROM B22_05_TT_UST10_PROFN_NORMALIZED

	UNION

	SELECT DISTINCT UST10S_PROFN, UST10S_PROFN 
	FROM B22_04B_TT_UST10S_VALID_AUTH

	
-- Step 4B: denormalize/flatten structure of composite role into full list
	SELECT AGR_AGRS_AGR_NAME, AGR_AGRS_CHILD_AGR INTO B22_06B_TT_AGR_ROLE_NORMALIZED FROM A_AGR_AGRS
	UNION
	SELECT AGR_AGRS_AGR_NAME, AGR_AGRS_AGR_NAME FROM A_AGR_AGRS
	DECLARE @c INT = 1

	WHILE @c <> 0
	BEGIN
		INSERT INTO B22_06B_TT_AGR_ROLE_NORMALIZED
		SELECT DISTINCT 
			A.AGR_AGRS_AGR_NAME, 
			B.AGR_AGRS_CHILD_AGR 
		FROM B22_06B_TT_AGR_ROLE_NORMALIZED A
		INNER JOIN B22_06B_TT_AGR_ROLE_NORMALIZED B ON A.AGR_AGRS_CHILD_AGR = B.AGR_AGRS_AGR_NAME
		WHERE NOT EXISTS(SELECT * FROM B22_06B_TT_AGR_ROLE_NORMALIZED C 
							WHERE A.AGR_AGRS_AGR_NAME = C.AGR_AGRS_AGR_NAME 
							AND B.AGR_AGRS_CHILD_AGR = C.AGR_AGRS_CHILD_AGR)
		
		SET @c = (SELECT COUNT(*) FROM B22_06B_TT_AGR_ROLE_NORMALIZED A
						INNER JOIN B22_06B_TT_AGR_ROLE_NORMALIZED B ON A.AGR_AGRS_CHILD_AGR = B.AGR_AGRS_AGR_NAME
						WHERE NOT EXISTS(SELECT * FROM B22_06B_TT_AGR_ROLE_NORMALIZED C 
												WHERE A.AGR_AGRS_AGR_NAME = C.AGR_AGRS_AGR_NAME 
												AND B.AGR_AGRS_CHILD_AGR = C.AGR_AGRS_CHILD_AGR))
	END

-- Step 4C: Update missing roles from AGR_USERS to AGR_AGRS normalized table
	INSERT INTO B22_06B_TT_AGR_ROLE_NORMALIZED
	SELECT DISTINCT AGR_USERS_AGR_NAME, AGR_USERS_AGR_NAME FROM A_AGR_USERS
	WHERE 
	-- only update the mising role
	NOT EXISTS(SELECT * FROM B22_06B_TT_AGR_ROLE_NORMALIZED WHERE AGR_AGRS_AGR_NAME = AGR_USERS_AGR_NAME)


-- Step 7: Combine Authorization objects from Profile and Role
	--Get profile, objct, auth 
	--Get VON and BIS from UST12
	EXEC SP_DROPTABLE 'B22_09_TT_UST10S_AGR_PROFILE_OBJCT_AUTH_FIELD_VALUE'
	SELECT DISTINCT 
		A.USR02_BNAME,
		UST12_AUTH AS ZF_AGR_UST12_AUTH,
		UST12_OBJCT AS ZF_AGR_UST12_OBJCT,
		UST12_FIELD AS ZF_AGR_UST12_FIELD,
		UST12_VON AS ZF_AGR_UST12_VON, 
		UST12_BIS AS ZF_AGR_UST12_BIS
	INTO B22_09_TT_UST10S_AGR_PROFILE_OBJCT_AUTH_FIELD_VALUE
	FROM B22_01_TT_UST04_BNAME_PROFN AS A
	-- get the sub profiles for the user, keeping also all the parent profiles
	INNER JOIN B22_06A_TT_UST10_PROFN_FULL_LIST B 
			ON A.UST04_PROFILE = B.UST10C_PROFN
	-- get AUTH and OBJCT
	INNER JOIN B22_04B_TT_UST10S_VALID_AUTH ON B.UST10C_SUBPROF = UST10S_PROFN
	-- get the FIELD, VON and BIS
	INNER JOIN A_UST12 ON UST12_AUTH = UST10S_AUTH AND UST12_OBJCT = UST10S_OBJCT AND UST12_AKTPS LIKE 'A%'
	WHERE UST12_OBJCT = 'S_DEVELOP' AND UST12_FIELD = 'OBJTYPE' AND UST12_VON = 'DEBUG' 
GO
