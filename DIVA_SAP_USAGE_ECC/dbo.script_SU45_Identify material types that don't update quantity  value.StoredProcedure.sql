USE [DIVA_SAP_USAGE_ECC]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[script_SU45_Identify material types that don't update quantity/ value]
WITH EXECUTE AS CALLER
AS
--DYNAMIC_SCRIPT_START

--STep 1 Checking if is there any material types are configured in SAP
--to track quantity and/or value updating setting at the material 
---level Where movements are not set to update the quantity or the value

EXEC SP_REMOVE_TABLES 'SU45_%'

EXEC SP_DROPTABLE SU45_01_RT_T134M_T134T_T001K_T001;
SELECT T134M_MANDT,
       T134M_BWKEY,
	   T134M_MTART,
	   T134M_MENGU,
	   IIF(T134M_MENGU='X','Yes','No') AS ZF_T134M_MENGU_DESC,
	   IIF(T134M_WERTU='X','Yes','No') AS ZF_134M_WERTU_DESC,
	   T134M_WERTU,
	   T134T_MTBEZ, -- 	Description of material type
	   T001K_BWKEY,
	   T001K_BUKRS,
	   T001_BUKRS,
	   T001_BUTXT,
	   T001W_NAME1 -- Plant name
INTO SU45_01_RT_T134M_T134T_T001K_T001
FROM A_T134M 
LEFT JOIN A_T134T -- 	Table fof Material Type Descriptions
	ON T134M_MTART = T134T_MTART  
LEFT JOIN A_T001K -- Get company code from T001K
	ON T001K_BWKEY = T134M_BWKEY
LEFT JOIN A_T001
	ON T001_BUKRS = T001K_BUKRS
LEFT JOIN A_T001W -- Get plant name
	ON T001W_BWKEY=T134M_BWKEY;

--Step 2 Using table T134M to identify all the material movement where material types in
--table SU45_01 which are not set to update the quantity or the value

EXEC SP_DROPTABLE SU45_02_XT_T134M_MENGU_WERTU_IS_NO;
SELECT B24_01_IT_MATERIAL_MOVEMENT.*
INTO SU45_02_XT_T134M_MENGU_WERTU_IS_NO
FROM B24_01_IT_MATERIAL_MOVEMENT
WHERE MARA_MTART IN (SELECT DISTINCT T134M_MTART
						FROM SU45_01_RT_T134M_T134T_T001K_T001
						WHERE ZF_134M_WERTU_DESC LIKE 'No' OR ZF_T134M_MENGU_DESC LIKE 'No' );

--Phase 2 : 
--For the same material number,plant,valuation type,company code,
--Sorting base on input date and time
--compare between SALK3 and previous SALK3 + DMBTR
--compare between LBKUM and previous LBKUM + MENGE

--Check the SALK3 and the previous SALK3+DMBTR
----
--Step 3
--Add Row numer,will be use to link the previous line with the recent line
-- group by MSEG_BUKRS,MSEG_WERKS,MSEG_BWTAR,MSEG_MATNR
-- order by MSEG_BUKRS,MSEG_WERKS,MSEG_BWTAR,MSEG_MATNR,MKPF_CPUDT,MKPF_CPUTM

EXEC SP_DROPTABLE SU45_03_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM_SALK3
SELECT DISTINCT ROW_NUMBER() OVER (
				PARTITION BY 
							MSEG_BUKRS,
							MSEG_WERKS,
							MSEG_BWTAR,
							MSEG_MATNR
				ORDER BY MSEG_BUKRS,
						MSEG_WERKS,
						MSEG_BWTAR,
						MSEG_MATNR,
						MKPF_CPUDT,
						MKPF_CPUTM,
						MSEG_MJAHR,
						MSEG_MBLNR ) AS ZF_ROW_NUMER,
				MSEG_BUKRS,
				MSEG_WERKS,
				MSEG_BWTAR,
                MSEG_MATNR,
				MAKT_MAKTX,
				MKPF_CPUDT,
				MKPF_CPUTM,
				MSEG_SHKZG,
				ZF_MSEG_SALK3_S,
				ZF_MSEG_SALK3_S_CUC,
				ZF_MSEG_DMBTR_SIGNED,
				ZF_MSEG_DMBTR_SIGNED_CUC
INTO SU45_03_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM_SALK3
FROM 
(
	SELECT 
					MSEG_BUKRS,
					MSEG_WERKS,
					MSEG_BWTAR,
					MSEG_MATNR,
					MAKT_MAKTX,
					MKPF_CPUDT,
					MKPF_CPUTM,
					ZF_MSEG_SALK3_S,
					ZF_MSEG_SALK3_S_CUC,
					MSEG_SHKZG,
					MSEG_MJAHR,
					MSEG_MBLNR,
					SUM(ZF_MSEG_DMBTR_SIGNED) AS ZF_MSEG_DMBTR_SIGNED,
					SUM(ZF_MSEG_DMBTR_SIGNED_CUC) AS ZF_MSEG_DMBTR_SIGNED_CUC
	FROM 
	SU45_02_XT_T134M_MENGU_WERTU_IS_NO
	GROUP BY 
					MSEG_BUKRS,
					MSEG_WERKS,
					MSEG_BWTAR,
					MSEG_MATNR,
					MAKT_MAKTX,
					MKPF_CPUDT,
					MKPF_CPUTM,
					ZF_MSEG_SALK3_S,
					ZF_MSEG_SALK3_S_CUC,
					MSEG_SHKZG,
					MSEG_MJAHR,
					MSEG_MBLNR
) AS A

--STep 4 For each line, add the  the prior line before input date

EXEC SP_DROPTABLE SU45_04_TT_MSEG_ADD_PRIOR_DATA
SELECT DISTINCT A.*,B.ZF_ROW_NUMER AS ZF_ROW_NUMER_PRIOR,
                B.MSEG_MATNR AS ZF_MSEG_MATNR_PRIOR,
				B.MKPF_CPUDT AS ZF_MKPF_CPUDT_PRIOR,
				B.MKPF_CPUTM AS ZF_MKPF_CPUTM_PRIOR,
				B.ZF_MSEG_SALK3_S AS ZF_MSEG_SALK3_S_PRIOR,
				B.ZF_MSEG_SALK3_S_CUC AS ZF_MSEG_SALK3_S_CUC_PRIOR,
				B.ZF_MSEG_DMBTR_SIGNED AS ZF_MSEG_DMBTR_SIGNED_PRIOR,
				B.ZF_MSEG_DMBTR_SIGNED_CUC AS ZF_MSEG_DMBTR_SIGNED_CUC_PRIOR
INTO SU45_04_TT_MSEG_ADD_PRIOR_DATA
FROM SU45_03_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM_SALK3 AS A
INNER JOIN 
(SELECT DISTINCT * FROM SU45_03_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM_SALK3) AS B
ON A.MSEG_MATNR=B.MSEG_MATNR AND 
	A.MSEG_BUKRS=B.MSEG_BUKRS AND 
	A.MSEG_WERKS=B.MSEG_WERKS AND
	A.MSEG_BWTAR=B.MSEG_BWTAR
AND A.ZF_ROW_NUMER-1=B.ZF_ROW_NUMER

--Step 5 Check if where the movement did not cause the material valuation table to be updated

EXEC SP_DROPTABLE SU45_05_XT_MSEG_SALK3_PRIOR_SALK3_PLUS_DMBTR_CHECK
SELECT B.*,
		T001_BUTXT,

	 IIF(ROUND(ZF_MSEG_SALK3_S,4) = ROUND(ZF_SUM_MSEG_SALK3_PRIOR,4),'Yes','No') AS ZF_MSEG_SALK3_EQ_SALK3_PRIOR_PLUS_DMBTR_CHECK
INTO SU45_05_XT_MSEG_SALK3_PRIOR_SALK3_PLUS_DMBTR_CHECK
FROM 
      (
		SELECT DISTINCT *,
			   ZF_MSEG_SALK3_S_PRIOR + ZF_MSEG_DMBTR_SIGNED_PRIOR AS ZF_SUM_MSEG_SALK3_PRIOR,
			   ZF_MSEG_SALK3_S_CUC_PRIOR + ZF_MSEG_DMBTR_SIGNED_CUC_PRIOR AS ZF_SUM_MSEG_SALK3_CUC_PRIOR
		FROM SU45_04_TT_MSEG_ADD_PRIOR_DATA
		)  AS B
LEFT JOIN A_T001 
ON T001_BUKRS=B.MSEG_BUKRS
-- Drop temporary table

DROP TABLE SU45_03_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM_SALK3;
DROP TABLE SU45_04_TT_MSEG_ADD_PRIOR_DATA;


--Check LBKUM and the previos LBKUM+MENGE

--Step 6 Add Row numer
-- group by MSEG_BUKRS,MSEG_WERKS,MSEG_BWTAR,MSEG_MATNR
-- order by MSEG_BUKRS,MSEG_WERKS,MSEG_BWTAR,MSEG_MATNR,MKPF_CPUDT,MKPF_CPUTM
--Add Row numer,will be use to link the previous line with the recent line
--Filter out the case where DMBTR=0
--Since the LBKUM is not add up-, if the previous line where DMBTR is 0

EXEC SP_DROPTABLE SU45_06_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM
SELECT DISTINCT 
			ROW_NUMBER() OVER (
				PARTITION BY 
							MSEG_BUKRS,
							MSEG_WERKS,
							MSEG_BWTAR,
							MSEG_MATNR
				ORDER BY MSEG_BUKRS,
						MSEG_WERKS,
						MSEG_BWTAR,
						MSEG_MATNR,
						MKPF_CPUDT,
						MKPF_CPUTM,MSEG_MJAHR,MSEG_MBLNR ) AS ZF_ROW_NUMER,
				MSEG_BUKRS,
				MSEG_WERKS,
				MSEG_BWTAR,
                MSEG_MATNR,
				MAKT_MAKTX,
				MKPF_CPUDT,
				MKPF_CPUTM,
				MSEG_SHKZG,
				MSEG_LBKUM,
				ZF_MSEG_MENGE_S
INTO SU45_06_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM
FROM 
(
	SELECT 
					MSEG_BUKRS,
					MSEG_WERKS,
					MSEG_BWTAR,
					MSEG_MATNR,
					MAKT_MAKTX,
					MKPF_CPUDT,
					MKPF_CPUTM,
					MSEG_SHKZG,
					MSEG_MJAHR,
					MSEG_MBLNR,
					MSEG_LBKUM,
					SUM(ZF_MSEG_MENGE_S) AS ZF_MSEG_MENGE_S
	FROM 
	SU45_02_XT_T134M_MENGU_WERTU_IS_NO
	WHERE MSEG_DMBTR<>0
	GROUP BY 
					MSEG_BUKRS,
					MSEG_WERKS,
					MSEG_BWTAR,
					MSEG_MATNR,
					MAKT_MAKTX,
					MKPF_CPUDT,
					MKPF_CPUTM,
					MSEG_SHKZG,
					MSEG_MJAHR,
					MSEG_MBLNR,
					MSEG_LBKUM
) AS A

--STep 7 For each line, add the prior data line for each line 

EXEC SP_DROPTABLE SU45_07_TT_MSEG_ADD_PRIOR_DATA
SELECT DISTINCT A.*,B.ZF_ROW_NUMER AS ZF_ROW_NUMER_PRIOR,
                B.MSEG_MATNR AS ZF_MSEG_MATNR_PRIOR,
				B.MKPF_CPUDT AS ZF_MKPF_CPUDT_PRIOR,
				B.MKPF_CPUTM AS ZF_MKPF_CPUTM_PRIOR,
				B.ZF_MSEG_MENGE_S AS ZF_MSEG_MENGE_S_PRIOR,
				B.MSEG_LBKUM AS ZF_MSEG_LBKUM_PRIOR
INTO SU45_07_TT_MSEG_ADD_PRIOR_DATA
FROM SU45_06_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM AS A
INNER JOIN 
	(SELECT DISTINCT * FROM SU45_06_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM) AS B
ON A.MSEG_MATNR=B.MSEG_MATNR AND 
	A.MSEG_BUKRS=B.MSEG_BUKRS AND 
	A.MSEG_WERKS=B.MSEG_WERKS AND
	A.MSEG_BWTAR=B.MSEG_BWTAR
AND A.ZF_ROW_NUMER-1=B.ZF_ROW_NUMER

--Step 8 Check if LBKUM is equal LBKUM prior+MENGE prior
EXEC SP_DROPTABLE SU45_08_XT_MSEG_LBKUM_PRIOR_LBKUM_PLUS_MENGE_CHECK
SELECT A.*,T001_BUTXT,
	 IIF(ROUND(MSEG_LBKUM,4) = ROUND(ZF_SUM_MSEG_LBKUM_MENGE_PRIOR,4),'Yes','No') AS ZF_MSEG_LBKUM_EQ_PRIOR_LBKUM_MENGE
INTO SU45_08_XT_MSEG_LBKUM_PRIOR_LBKUM_PLUS_MENGE_CHECK
FROM 
      (
		SELECT DISTINCT *,
			   ZF_MSEG_LBKUM_PRIOR + ZF_MSEG_MENGE_S_PRIOR AS ZF_SUM_MSEG_LBKUM_MENGE_PRIOR
		FROM SU45_07_TT_MSEG_ADD_PRIOR_DATA
		) AS A
LEFT JOIN A_T001 ON T001_BUKRS=A.MSEG_BUKRS
--Remove temporary tables
EXEC SP_DROPTABLE SU45_06_TT_MSEG_MATNR_MKPF_CPUDT_LBKUM
EXEC SP_DROPTABLE SU45_07_TT_MSEG_ADD_PRIOR_DATA

--Rename fields

EXEC SP_RENAME_FIELD 'SU45_01_','SU45_01_RT_T134M_T134T_T001K_T001';
EXEC SP_RENAME_FIELD 'SU45_02_','SU45_02_XT_T134M_MENGU_WERTU_IS_NO';
EXEC SP_RENAME_FIELD 'SU45_05_','SU45_05_XT_MSEG_SALK3_PRIOR_SALK3_PLUS_DMBTR_CHECK';
EXEC SP_RENAME_FIELD 'SU45_08_','SU45_08_XT_MSEG_LBKUM_PRIOR_LBKUM_PLUS_MENGE_CHECK';



/* log end of procedure*/

INSERT INTO [dbo].[_DatabaseLogTable] ([Database],[Object],[Object Type],[User],[Date],[Time],[Description],[Table],[Rows])
SELECT DB_NAME(),OBJECT_NAME(@@PROCID),'P',SYSTEM_USER,CONVERT(date,GETDATE()),CONVERT(time,GETDATE()),'Procedure finished',NULL,NULL
GO
