USE [DIVA_SAP_USAGE_ECC]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[script_BP06_DUPLICATE_INVOICES_NEW]

AS 

--DYNAMIC_SCRIPT_START
/* Initialize parameters from globals table */

/* Initialize parameters from globals table */

	 DECLARE 	 
			 @CURRENCY NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'currency')
			,@DATE1 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date1')
			,@DATE2 NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'date2')
			,@DOWNLOADDATE NVARCHAR(MAX)		= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'downloaddate')
			,@DATEFORMAT VARCHAR(3)             = (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'dateformat')
			,@EXCHANGERATETYPE NVARCHAR(MAX)	= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'exchangeratetype')
			,@LANGUAGE1 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language1')
			,@LANGUAGE2 NVARCHAR(MAX)			= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'language2')
			,@YEAR NVARCHAR(MAX)				= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'year')
			,@ID NVARCHAR(MAX)					= (SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'id')
			,@LIMIT_RECORDS INT		            = CAST((SELECT GLOBALS_VALUE FROM [AM_GLOBALS] WHERE GLOBALS_PARAMETER = 'LIMIT_RECORDS') AS INT)


/*Test mode*/

SET ROWCOUNT @LIMIT_RECORDS

/*Change history comments*/

/*
	Title			:	BP06: Duplicate invoices ECC
	  
	--------------------------------------------------------------
	Update history
	--------------------------------------------------------------
	Date		    | Who |	Description
	18-07-2022		  Dat	First version for Sony  

*/

EXEC SP_REMOVE_TABLES 'BP06%'

-- Step 1/ Create a table that classifies each duplicate invoice based on scenario. The table is obtained from the cube: B33_02_IT_PAY_DUP
EXEC SP_DROPTABLE 'BP06_02_IT_PAY_DUP'
SELECT 
	*
INTO BP06_02_IT_PAY_DUP
FROM B33_02_IT_PAY_DUP
	
-- Step 2: Create table from the cube B33_03_IT_SUP_IN_DUP_INV

EXEC SP_DROPTABLE 'BP06_03_IT_SUP_IN_DUP_INV'
SELECT *
INTO BP06_03_IT_SUP_IN_DUP_INV
FROM B33_03_IT_SUP_IN_DUP_INV


-- Step 3: Create table from the cube B33_04_IT_SUP_IN_DUP_INV_TEST_CASE

EXEC SP_DROPTABLE 'BP06_04_IT_SUP_IN_DUP_INV_TEST_CASE'
SELECT *
INTO BP06_04_IT_SUP_IN_DUP_INV_TEST_CASE
FROM B33_04_IT_SUP_IN_DUP_INV_TEST_CASE

-- Step 4: Create table from the cube B33_05_IT_SUP_IN_DUP_INV_COPY

EXEC SP_DROPTABLE 'BP06_05_IT_SUP_IN_DUP_INV_COPY'
SELECT *
INTO BP06_05_IT_SUP_IN_DUP_INV_COPY
FROM B33_05_IT_SUP_IN_DUP_INV_COPY


-- Step 5: Create table from the cube B33_05_IT_SUP_IN_DUP_INV_COPY

EXEC SP_DROPTABLE 'B33_06_IT_KPI'
SELECT *
INTO BP06_06_IT_KPI
FROM B33_06_IT_KPI

-- Step 5: Create table from the cube B33_05_IT_SUP_IN_DUP_INV_COPY

EXEC SP_DROPTABLE 'BP06_07_IT_SUMMARY_TABLE'
SELECT *
INTO BP06_07_IT_SUMMARY_TABLE
FROM B33_07_IT_SUMMARY_TABLE


/*Rename fields for Qlik*/
EXEC SP_UNNAME_FIELD 'B11C_', 'BP06_02_IT_PAY_DUP'
EXEC SP_UNNAME_FIELD 'B33_03_', 'BP06_03_IT_SUP_IN_DUP_INV'
EXEC SP_UNNAME_FIELD 'B33_04_', 'BP06_04_IT_SUP_IN_DUP_INV_TEST_CASE'
EXEC SP_UNNAME_FIELD 'B33_05_', 'BP06_05_IT_SUP_IN_DUP_INV_COPY'
EXEC SP_UNNAME_FIELD 'B33_06_', 'BP06_06_IT_KPI'
EXEC SP_UNNAME_FIELD 'B33_07_', 'BP06_07_IT_SUMMARY_TABLE'

EXEC SP_RENAME_FIELD 'BP06_02_', 'BP06_02_IT_PAY_DUP' 
EXEC SP_RENAME_FIELD 'BP06_03_', 'BP06_03_IT_SUP_IN_DUP_INV'
EXEC SP_RENAME_FIELD 'BP06_04_', 'BP06_04_IT_SUP_IN_DUP_INV_TEST_CASE'
EXEC SP_RENAME_FIELD 'BP06_05_', 'BP06_05_IT_SUP_IN_DUP_INV_COPY'
EXEC SP_RENAME_FIELD 'BP06_06_', 'BP06_06_IT_KPI'
EXEC SP_RENAME_FIELD 'BP06_07_', 'BP06_07_IT_SUMMARY_TABLE'

/*Remove temporary tables*/

EXEC SP_REMOVE_TABLES 'BP06_%[_]TT[_]%'

GO
