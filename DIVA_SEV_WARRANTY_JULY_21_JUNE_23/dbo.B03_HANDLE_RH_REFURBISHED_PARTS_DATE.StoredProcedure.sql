USE [DIVA_SEV_WARRANTY_JULY_21_JUNE_23]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[B03_HANDLE_RH_REFURBISHED_PARTS_DATE]
AS


-- 01: RH Data 
-- ADD Model Name of spare parts without 'Z' at the end

ALTER TABLE B01_05_IT_RH_REPAIR_DATA_FY23_1HFY24 ADD ZF_PART_CODE_WITHOUT_Z NVARCHAR(10)

UPDATE B01_05_IT_RH_REPAIR_DATA_FY23_1HFY24
SET ZF_PART_CODE_WITHOUT_Z = 
    CASE
            WHEN UPPER(RIGHT(TRIM([PN]), 1)) = 'Z' 
            THEN LEFT(TRIM([PN]), LEN(TRIM([PN])) - 1)
            ELSE TRIM([PN])
        END;

-- 02: RH to NPC Sale data

-- Convert price to float
UPDATE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24 
SET 
    part_unit_price = replace(part_unit_price, ',', ''), 
    local_part_unit_price = replace(local_part_unit_price, ',', ''),
    local_total_amt = replace(local_total_amt, ',', ''),
    posting_amt = replace(posting_amt, ',', ''),
    gr_posting_amt = replace(posting_amt, ',', '')

ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
ALTER COLUMN part_unit_price float;
ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
ALTER COLUMN local_part_unit_price float;
ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
ALTER COLUMN local_total_amt float;
ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
ALTER COLUMN posting_amt float;
ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
ALTER COLUMN gr_posting_amt float;

-- Fix format of date fields
UPDATE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
SET 
RPSI_RECEIVE_DATE = 
    RIGHT(RPSI_RECEIVE_DATE, 4) + '-' + 
    SUBSTRING(RPSI_RECEIVE_DATE, 4, 2) + '-' + 
    LEFT(RPSI_RECEIVE_DATE, 2),

PO_CREATE_DATE = 
RIGHT(PO_CREATE_DATE, 4) + '-' + 
    SUBSTRING(PO_CREATE_DATE, 4, 2) + '-' + 
    LEFT(PO_CREATE_DATE, 2);

-- ADD Model Name of spare parts without 'Z' at the end

ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24 ADD ZF_PART_CODE_WITHOUT_Z NVARCHAR(10)

UPDATE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
SET ZF_PART_CODE_WITHOUT_Z = 
    CASE
            WHEN UPPER(RIGHT(TRIM([INVOICE_PART_NO]), 1)) = 'Z' 
            THEN LEFT(TRIM([INVOICE_PART_NO]), LEN(TRIM([INVOICE_PART_NO])) - 1)
            ELSE TRIM([INVOICE_PART_NO])
        END;

-- ADD Flag to indicated part new or old

ALTER TABLE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24 ADD ZF_PART_CODE_FLAG NVARCHAR(20)

UPDATE B01_06_IT_RH_TO_NPC_SALE_APR23_SEP24
SET ZF_PART_CODE_FLAG = 
    CASE
            WHEN UPPER(RIGHT(TRIM([INVOICE_PART_NO]), 1)) = 'Z' 
            THEN 'Refurbished'
            ELSE 'New'
        END;

---- 03: NPC to ASC Sale data
---- ADD Model Name of spare parts without 'Z' at the end

ALTER TABLE B01_07_IT_NPC_TO_ASC_SALE_APR23_SEP24 ADD ZF_PART_CODE_WITHOUT_Z NVARCHAR(10)

UPDATE B01_07_IT_NPC_TO_ASC_SALE_APR23_SEP24
SET ZF_PART_CODE_WITHOUT_Z = 
    CASE
        WHEN UPPER(RIGHT(TRIM([Invoice_part_code]), 1)) = 'Z' 
        THEN LEFT(TRIM([Invoice_part_code]), LEN(TRIM([Invoice_part_code])) - 1)
        ELSE TRIM([Invoice_part_code])
    END;

--- CLAIM FULL DATA
--- Remove word in bracket

ALTER TABLE CLAIM_FULL_DATA ADD ZF_PART_RETURN NVARCHAR(20)

UPDATE CLAIM_FULL_DATA
SET 
	ZF_PART_RETURN = CASE 
						WHEN CHARINDEX('(', [Part Return]) <> 0 THEN LEFT([Part Return], CHARINDEX('(', [Part Return]) - 1)
						ELSE [Part Return]
					END

-- Update ASC Name error unicode

UPDATE CLAIM_FULL_DATA
SET [ASC Name] = B.[ASC Name] FROM CLAIM_FULL_DATA AS A LEFT JOIN (
																		SELECT DISTINCT [ASC Code], [ASC Name]
																		FROM B01_04_IT_WARRANTY_FINAL_DATA 
																	) AS B
															ON A.[ASC Code] = B.[ASC Code]

UPDATE CLAIM_FULL_DATA
SET [ASC Name] = N'TTBH Th? Ð?c - Old'
WHERE [ASC Code] = 'ASC11447'

UPDATE CLAIM_FULL_DATA
SET [ASC Name] = N'TTBH Tây Ninh - Old'
WHERE [ASC Code] = 'ASC10267'

/*



--------------------------------------------------- Hanlde data 01_R.data FY23-1HFY24----------------------------------

-- Step 1 / Add the subcategory and 

ALTER TABLE [01_R.data FY23-1HFY24] ADD ZF_PRODUCT_SUBCATEGORY_01_RH NVARCHAR(50)

UPDATE [01_R.data FY23-1HFY24]
SET ZF_PRODUCT_SUBCATEGORY_01_RH =  [04_Z parts mapping list].PRODUCT_SUBCATEGORY
FROM [01_R.data FY23-1HFY24] 
	INNER JOIN [04_Z parts mapping list]
		ON PN = ZPN

-- Step 2 .

ALTER TABLE [01_R.data FY23-1HFY24] ADD ZF_PART_CODE_WITHOUT_Z_01_RH NVARCHAR(50)

UPDATE [01_R.data FY23-1HFY24]
SET ZF_PART_CODE_WITHOUT_Z_01_RH = CASE
            WHEN UPPER(RIGHT(TRIM([PN]), 1)) = 'Z' 
            THEN LEFT(TRIM([PN]), LEN(TRIM([PN])) - 1)
            ELSE TRIM([PN])
        END


------------------------------------------------------ Related link 02-------------------------------------------------------
-- Step 1 / Add subcategory and Model TV from 04

ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_PRODUCT_SUBCATEGORY_02_NPC NVARCHAR(50)
ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_MODELTV_02_NPC NVARCHAR(50)
ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_INVOICE_PART_NO_WITHOUT_Z_02_NPC NVARCHAR(50)

UPDATE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
SET ZF_INVOICE_PART_NO_WITHOUT_Z_02_NPC = 
   CASE
            WHEN UPPER(RIGHT(TRIM([INVOICE_PART_NO]), 1)) = 'Z' 
            THEN LEFT(TRIM([INVOICE_PART_NO]), LEN(TRIM([INVOICE_PART_NO])) - 1)
            ELSE TRIM([INVOICE_PART_NO])
        END;


UPDATE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
SET ZF_PRODUCT_SUBCATEGORY_02_NPC = PRODUCT_SUBCATEGORY,
	ZF_MODELTV_02_NPC = ModelTV
FROM [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] 
	INNER JOIN [04_Z parts mapping list]
		ON ZF_INVOICE_PART_NO_WITHOUT_Z_02_NPC = ZF_ZPN_WITHOUT_Z_04


ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_INVOICE_PART_FLAG_02_NPC NVARCHAR(50)

UPDATE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
SET ZF_INVOICE_PART_FLAG_02_NPC = 
    CASE
            WHEN UPPER(RIGHT(TRIM([INVOICE_PART_NO]), 1)) = 'Z' 
            THEN 'Rpaired by RH'
            ELSE 'New'
        END;

-----------------------------------------------------------HANDLE 03 ----------------------------------------------
-- Step 1 / Add product sub category and model tv into 03 and z

ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ADD ZF_INVOICE_PART_NO_WITHOUT_Z_03_ASC NVARCHAR(50)
ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ADD ZF_PRODUCT_SUBCATEGORY_03_ASC NVARCHAR(50)
ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ADD ZF_MODELTV_03_ASC NVARCHAR(50)
ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ADD ZF_INVOICE_PART_FLAG_03_ASC NVARCHAR(50)

UPDATE [03_Report sale- adjust out Z parts (Apr23 to Sep24)]
SET ZF_INVOICE_PART_NO_WITHOUT_Z_03_ASC = 

   CASE
            WHEN UPPER(RIGHT(TRIM(Invoice_part_code), 1)) = 'Z' 
            THEN LEFT(TRIM(Invoice_part_code), LEN(TRIM(Invoice_part_code)) - 1)
            ELSE TRIM(Invoice_part_code)
        END;


UPDATE [03_Report sale- adjust out Z parts (Apr23 to Sep24)]
SET ZF_PRODUCT_SUBCATEGORY_03_ASC = PRODUCT_SUBCATEGORY,
	ZF_MODELTV_03_ASC = ModelTV
FROM [03_Report sale- adjust out Z parts (Apr23 to Sep24)] 
	INNER JOIN [04_Z parts mapping list]
		ON ZF_INVOICE_PART_NO_WITHOUT_Z_03_ASC = ZF_ZPN_WITHOUT_Z_04



UPDATE [03_Report sale- adjust out Z parts (Apr23 to Sep24)]
SET ZF_INVOICE_PART_FLAG_03_ASC = 
    CASE
            WHEN UPPER(RIGHT(TRIM(Invoice_part_code), 1)) = 'Z' 
            THEN 'Rpaired by RH'
            ELSE 'New'
        END;

------------------------------ HANLDE CLAIM DATA 04 ---------------------------------------------------------

SELECT 
	*
INTO CLAIM_DATA_PART_SUBMIT
FROM CLAIM_FULL_DATA
WHERE [Fee Type] = 'Part Fee'
AND [Claim Status] = 'RC Submit'


-- Add ZF_PART_RETUR_WITHOUT_Z

ALTER TABLE CLAIM_DATA_PART_SUBMIT ADD ZF_PART_RETURN_WITHOUT_Z_04_CLAIM NVARCHAR(50)

UPDATE CLAIM_DATA_PART_SUBMIT
SET ZF_PART_RETURN_WITHOUT_Z_04_CLAIM = 

   CASE
            WHEN UPPER(RIGHT(TRIM(ZF_PART_RETURN), 1)) = 'Z' 
            THEN LEFT(TRIM(ZF_PART_RETURN), LEN(TRIM(ZF_PART_RETURN)) - 1)
            ELSE TRIM(ZF_PART_RETURN)
        END;

ALTER TABLE CLAIM_DATA_PART_SUBMIT ADD  ZF_RETURN_FLAG_04_CLAIM NVARCHAR(50)


UPDATE CLAIM_DATA_PART_SUBMIT
SET ZF_RETURN_FLAG_04_CLAIM = 

  CASE
            WHEN UPPER(RIGHT(TRIM(ZF_PART_RETURN), 1)) = 'Z' 
            THEN 'Rpaired by RH'
            ELSE 'New'
        END;






-------------- HANDLE [04_Z parts mapping list] ADD WITHOUT Z COLUN
ALTER TABLE [04_Z parts mapping list] ADD ZF_ZPN_WITHOUT_Z_04 NVARCHAR(50)

UPDATE [04_Z parts mapping list]
SET ZF_ZPN_WITHOUT_Z_04 = 

		CASE
            WHEN UPPER(RIGHT(TRIM(ZPN), 1)) = 'Z' 
            THEN LEFT(TRIM(ZPN), LEN(TRIM(ZPN)) - 1)
            ELSE TRIM(ZPN)
        END





SELECT INVOICE_PART_NO
FROM [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
GROUP BY INVOICE_PART_NO
HAVING COUNT(DISTINCT VENDOR_NAME) > 1


SELECT SUM(QTY)
FROM [01_R.data FY23-1HFY24]
WHERE PN = 'A5037698AZ'
ZF_Organization_name_UPDATE
TTBH C?m Ph?
ZF_INVOICE_PART_NO_WITHOUT_Z_03_ASC
A2229196AL
SELECT *
FROM [03_Report sale- adjust out Z parts (Apr23 to Sep24)]

[ASC Name]&ZF_PART_RETURN_WITHOUT_Z_04_CLAIM

TTBH C?n Tho


-- 03_Report sale- adjust out Z parts (Apr23 to Sep24)


select  *
FROM CLAIM_DATA_PART_SUBMIT

ALTER TABLE CLAIM_DATA_PART_SUBMIT DROP COLUMN REGION, Technician



SELECT *
FROM CLAIM_DATA_PART_SUBMIT



ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ALTER COLUMN Invoice_part_qty INT


--------------------------------------- HANDLIDE TASK FROM JESPER ------------------------------------------------------
DROP TABLE B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT

SELECT *
INTO B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
FROM B01_04_IT_WARRANTY_FINAL_DATA
WHERE ZF_CLAIM_STATUS_FLAG IN ('Submit and Rejected/Canceled','Submit')
AND 
(
	( 
		YEAR([Repair Completed Date]) = 2023 	AND MONTH([Repair Completed Date]) BETWEEN 4 AND 12
	)
	OR
	(
		YEAR([Repair Completed Date]) = 2024 	AND MONTH([Repair Completed Date]) BETWEEN 1 AND 9
	)
)

-- Step 1 / Related to 02 data.
-- 1.1 Update  ZF_RPSI_RECEIVE_DATE_UPDATE DATE

select *
from [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]

ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_RPSI_RECEIVE_DATE_UPDATE DATE

UPDATE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
SET ZF_RPSI_RECEIVE_DATE_UPDATE =CONVERT(DATE, RPSI_RECEIVE_DATE, 105) 

-- 1.2 Update the Year and Month from ZF_RPSI_RECEIVE_DATE_UPDATE
ALTER TABLE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] ADD ZF_YEAR_MONTH_RPSI_RECEIVE_DATE NVARCHAR(10)

UPDATE [02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
SET ZF_YEAR_MONTH_RPSI_RECEIVE_DATE = CONCAT( YEAR(ZF_RPSI_RECEIVE_DATE_UPDATE), '-',FORMAT(MONTH(ZF_RPSI_RECEIVE_DATE_UPDATE), '00'))

-- Step 1.3 Related to 03 table
-- 1.1 Update invoice date


UPDATE A
SET ZF_INVOICE_DATE_UPDATE = formatted_date,
	ZF_SOURCE_FLAG = SOURCE
FROM [03_Report sale- adjust out Z parts (Apr23 to Sep24)] A
	INNER JOIN _03_FINAL B
		ON A.Invoice_no = B.Invoice_no
		AND A.NC_sales_no = B.NC_sales_no



-- 1.2 Update the Year and Month from Invoice_date
ALTER TABLE [03_Report sale- adjust out Z parts (Apr23 to Sep24)] ADD ZF_YEAR_MONTH_INVOICE_DATE NVARCHAR(10)


UPDATE [03_Report sale- adjust out Z parts (Apr23 to Sep24)]
SET ZF_YEAR_MONTH_INVOICE_DATE = CONCAT( YEAR(ZF_INVOICE_DATE_UPDATE), '-',FORMAT(MONTH(ZF_INVOICE_DATE_UPDATE), '00'))


-- Step 3/ Related to Warranty data
-- 1.1 Update the Year and Month from Invoice_date
ALTER TABLE B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT ADD ZF_YEAR_MONTH_REPAIR_COMPLETED_DATE NVARCHAR(10)

UPDATE B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
SET ZF_YEAR_MONTH_REPAIR_COMPLETED_DATE = CONCAT( YEAR([Repair Completed Date]), '-',FORMAT(MONTH([Repair Completed Date]), '00'))

-- Step 4 / Create table AM_YEAR_MONTH MAPPING

SELECT DISTINCT ZF_YEAR_MONTH_INVOICE_DATE AS ZF_YEAR_MONTH_MAPPING

INTO AM_YEAR_MONTH_MAPPING
FROM  [03_Report sale- adjust out Z parts (Apr23 to Sep24)]


-- Step 5 / Create AM part code mapping to store all Part code from 3 file

DROP TABLE AM_PART_CODE_MAPPING
SELECT *
INTO AM_PART_CODE_MAPPING
FROM (

SELECT DISTINCT 
	INVOICE_PART_NO , '02'  AS ZF_SOUR_FLAG
FROM 
[02_NPC_Purchase_Invoice_Apr23 to Sep24 1]
UNION 
SELECT DISTINCT 
	Invoice_part_code, '03'  AS ZF_SOUR_FLAG
FROM 
[03_Report sale- adjust out Z parts (Apr23 to Sep24)]
UNION
SELECT DISTINCT [Part Code], 'AP-NEWSIS' AS ZF_SOUR_FLAG
FROM B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
WHERE LEN([Part Code]) > 1
)A
 
ALTER TABLE AM_PART_CODE_MAPPING ADD ZF_PART_CODE NVARCHAR(1000)

UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = 'Exists in 3 data'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 3
)


UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '02 Only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 1
)
AND ZF_SOUR_FLAG = '02'
AND  ZF_PART_CODE IS NULL


UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '03 Only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 1
)
AND ZF_SOUR_FLAG = '03'
AND  ZF_PART_CODE IS NULL

UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = 'AP-NEWSIS only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 1
)
AND ZF_SOUR_FLAG = 'AP-NEWSIS'
AND  ZF_PART_CODE IS NULL

-- 02, 03 only
-- 03, AP-NEWSIS only
-- 02, AP-NEWSIS only
UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '02, 03 only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
WHERE ZF_SOUR_FLAG <> 'AP-NEWSIS'
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 2
)
AND  ZF_PART_CODE IS NULL

UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '03, AP-NEWSIS only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
WHERE  ZF_SOUR_FLAG <> '02'
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 2
)
AND  ZF_PART_CODE IS NULL

-- 02, AP-NEWSIS only
UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '02, AP-NEWSIS only'
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT INVOICE_PART_NO
FROM AM_PART_CODE_MAPPING
WHERE   ZF_SOUR_FLAG <> '03'
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 2
)
AND  ZF_PART_CODE IS NULL

DROP TABLE AM_PART_CODE_MAPPING_FINAL

select  DISTINCT INVOICE_PART_NO, 
	CASE 
		WHEN ZF_PART_CODE = 'Exists in 3 data' THEN '1. Exists in 3 data'
		WHEN ZF_PART_CODE = '02 Only' THEN '2. 02 Only'
		WHEN ZF_PART_CODE = '03 Only' THEN '3. 03 Only'
		WHEN ZF_PART_CODE = 'AP-NEWSIS only' THEN '4. AP-NEWSIS only'
		WHEN ZF_PART_CODE = '02, 03 only' THEN '5. 02, 03 only'
		WHEN ZF_PART_CODE = '02, AP-NEWSIS only' THEN '6. 02, AP-NEWSIS only'
		ELSE '7. 03, AP-NEWSIS only'
	END ZF_INVOICE_PART_NO_FLAG,
	CASE 
		WHEN 
				UPPER(RIGHT(TRIM(INVOICE_PART_NO), 1)) IN (  'Z' , 'L') THEN 'Ends with Z/L'
				ELSE 'Other'
	END AS ZF_INVOICE_PART_NO_END_WITH_FLAG,
	ZF_YEAR_MONTH_MAPPING
INTO AM_PART_CODE_MAPPING_FINAL
FROM AM_PART_CODE_MAPPING, (SELECT DISTINCT ZF_YEAR_MONTH_MAPPING FROM AM_YEAR_MONTH_MAPPING)A

DROP TABLE AM_PART_CODE_MAPPING_FINAL


SELECT 
	ZF_INVOICE_PART_NO_FLAG, COUNT(DISTINCT INVOICE_PART_NO)
FROM AM_PART_CODE_MAPPING_FINAL

GROUP BY ZF_INVOICE_PART_NO_FLAG




INVOICE_PART_NO
 A5058127A








SELECT *
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO IN (
SELECT DISTINCT  INVOICE_PART_NO

FROM AM_PART_CODE_MAPPING
GROUP BY INVOICE_PART_NO
HAVING COUNT(*) = 2
)
AND ZF_SOUR_FLAG <> 'AP-NEWSIS'

-- 02675403SS

SELECT DISTINCT ZF_PART_CODE
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO = '02675403SS'



SELECT ZF_PART_CODE, COUNT(* )
FROM AM_PART_CODE_MAPPING
GROUP BY ZF_PART_CODE



SELECT DISTINCT ZF_SOUR_FLAG
FROM AM_PART_CODE_MAPPING
WHERE ZF_PART_CODE IS NULL
AND INVOICE_PART_NO IN
(

	SELECT INVOICE_PART_NO
	FROM AM_PART_CODE_MAPPING
	GROUP BY INVOICE_PART_NO
	HAVING COUNT(*) = 2
)
AND ZF_SOUR_FLAG <> '03'












UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = 'Exists in 3 data'
WHERE INVOICE_PART_NO IN
(

	SELECT DISTINCT 
			INVOICE_PART_NO, '02' AS ZF_SOUR_FLAG
	FROM [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] 
)
AND INVOICE_PART_NO IN
(
	SELECT DISTINCT 
			Invoice_part_code, '03' AS ZF_SOUR_FLAG
	FROM 
	[03_Report sale- adjust out Z parts (Apr23 to Sep24)]

) AND INVOICE_PART_NO IN
(
	SELECT DISTINCT [Part Code], 'AP-NEWSIS' AS ZF_SOUR_FLAG
	FROM B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
	WHERE LEN([Part Code]) > 1

) 

-- 160


select count(*)
from B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT

UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '02 Only'
WHERE INVOICE_PART_NO IN
(

	SELECT DISTINCT 
			INVOICE_PART_NO, '02' AS ZF_SOUR_FLAG
	FROM [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] 
)
AND INVOICE_PART_NO NOT IN
(
	SELECT DISTINCT 
			Invoice_part_code, '03' AS ZF_SOUR_FLAG
	FROM 
	[03_Report sale- adjust out Z parts (Apr23 to Sep24)]

) AND INVOICE_PART_NO NOT IN
(
	SELECT DISTINCT [Part Code], 'AP-NEWSIS' AS ZF_SOUR_FLAG
	FROM B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
	WHERE LEN([Part Code]) > 1

) 


UPDATE AM_PART_CODE_MAPPING
SET ZF_PART_CODE = '03 Only'
WHERE INVOICE_PART_NO NOT IN
(

	SELECT DISTINCT 
			INVOICE_PART_NO
	FROM [02_NPC_Purchase_Invoice_Apr23 to Sep24 1] 
)
AND INVOICE_PART_NO  IN
(
	SELECT DISTINCT 
			Invoice_part_code
	FROM 
	[03_Report sale- adjust out Z parts (Apr23 to Sep24)]

) AND INVOICE_PART_NO NOT IN
(
	SELECT DISTINCT [Part Code]
	FROM B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
	WHERE LEN([Part Code]) > 1

) 


SELECT *
FROM AM_PART_CODE_MAPPING_FINAL


SELECT ZF_INVOICE_PART_NO_FLAG, COUNT(*)
FROM AM_PART_CODE_MAPPING_FINAL
GROUP BY ZF_INVOICE_PART_NO_FLAG
ORDER BY ZF_INVOICE_PART_NO_FLAG



SELECT *
INTO AM_PART_CODE_MAPPING_FINAL_YEAR_MONTH
FROM AM_PART_CODE_MAPPING_FINAL, (SELECT DISTINCT ZF_YEAR_MONTH_MAPPING FROM AM_YEAR_MONTH_MAPPING)A

SELECT *
FROM AM_PART_CODE_MAPPING_FINAL_YEAR_MONTH


INVOICE_PART_NO, ZF_YEAR_MONTH_MAPPING




select *
FROM AM_PART_CODE_MAPPING_FINAL_YEAR_MONTH
WHERE INVOICE_PART_NO_COMBINE = '	'


select *
FROM AM_PART_CODE_MAPPING
WHERE INVOICE_PART_NO = '100613423L'


SELECT 
	*
FROM B01_04_IT_WARRANTY_FINAL_DATA_SUBMIT
WHERE [Part Code] = '100613423L'


SELECT *
FROM [03_Report sale- adjust out Z parts (Apr23 to Sep24)]
WHERE Invoice_part_code = '100613423L'


*/
GO
